{"version":3,"file":"static/js/2684.adde116d.chunk.js","mappings":"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","sources":["icons/CertificateIcon.tsx","screens/Console/Common/FormComponents/FileSelector/FileSelector.tsx","screens/Console/Common/FormComponents/FileSelector/utils.ts","screens/Console/Common/TLSCertificate/TLSCertificate.tsx","screens/Console/Tenants/TenantDetails/TenantSecurity.tsx","screens/Console/Tenants/securityContextSelector.tsx","screens/shared/ErrorBlock.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport * as React from \"react\";\nimport { SVGProps } from \"react\";\n\nconst CertificateIcon = (props: SVGProps<SVGSVGElement>) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className={`min-icon`}\n      fill={\"currentcolor\"}\n      viewBox=\"0 0 256 256\"\n      {...props}\n    >\n      <defs>\n        <clipPath id=\"certificate_svg__a\">\n          <path\n            data-name=\"Rect\\xE1ngulo 2156\"\n            fill=\"#07193e\"\n            d=\"M0 0h256v222.048H0z\"\n          />\n        </clipPath>\n      </defs>\n      <g\n        data-name=\"Grupo 4763\"\n        transform=\"translate(0 17)\"\n        clipPath=\"url(#certificate_svg__a)\"\n        fill=\"#07193e\"\n      >\n        <path\n          data-name=\"Trazado 8152\"\n          d=\"M240-.002H16a16 16 0 0 0-16 16v160a16 16 0 0 0 16 16h120l4.64-5.6 7.44-9.12A66.72 66.72 0 0 1 256 98.958v-82.96a16 16 0 0 0-16-16m-130.96 149.7H47.3a7.3 7.3 0 1 1 0-14.592h61.74a7.3 7.3 0 1 1 0 14.592m0-56H47.3a7.3 7.3 0 1 1 0-14.592h61.74a7.3 7.3 0 0 1 0 14.592m66.96-39.3a6.419 6.419 0 0 1-6.4 6.4H46.4a6.419 6.419 0 0 1-6.4-6.4v-1.792a6.419 6.419 0 0 1 6.4-6.4h123.2a6.419 6.419 0 0 1 6.4 6.4Z\"\n        />\n        <path\n          data-name=\"Trazado 8153\"\n          d=\"M256 137.486a50.96 50.96 0 1 0-86.16 36.72l-15.52 18.96 7.2 28.88 29.28-35.68a50.018 50.018 0 0 0 28.4 0l29.28 35.68 7.2-28.88-15.52-18.96a50.75 50.75 0 0 0 15.84-36.72m-50.928 29.688a29.688 29.688 0 0 1-.072-59.376h.072a29.688 29.688 0 0 1 0 59.376\"\n        />\n      </g>\n      <path data-name=\"Rect\\xE1ngulo 2157\" fill=\"none\" d=\"M0 0h256v256H0z\" />\n    </svg>\n  );\n};\nexport default CertificateIcon;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState } from \"react\";\nimport get from \"lodash/get\";\nimport { Grid, InputLabel, Tooltip } from \"@mui/material\";\nimport IconButton from \"@mui/material/IconButton\";\nimport AttachFileIcon from \"@mui/icons-material/AttachFile\";\nimport CancelIcon from \"@mui/icons-material/Cancel\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  fileInputStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport { fileProcess } from \"./utils\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport ErrorBlock from \"../../../../shared/ErrorBlock\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: string, i: string) => void;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  required?: boolean;\n  error?: string;\n  accept?: string;\n  value?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    valueString: {\n      maxWidth: 350,\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      marginTop: 2,\n    },\n    fileInputField: {\n      margin: \"13px 0\",\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n      },\n    },\n    ...fileInputStyles,\n    inputLabel: {\n      ...fieldBasic.inputLabel,\n      fontWeight: \"normal\",\n    },\n    textBoxContainer: {\n      ...fieldBasic.textBoxContainer,\n      maxWidth: \"100%\",\n      border: \"1px solid #eaeaea\",\n      paddingLeft: \"15px\",\n    },\n  });\n\nconst FileSelector = ({\n  label,\n  classes,\n  onChange,\n  id,\n  name,\n  disabled = false,\n  tooltip = \"\",\n  required,\n  error = \"\",\n  accept = \"\",\n  value = \"\",\n}: InputBoxProps) => {\n  const [showFileSelector, setShowSelector] = useState(false);\n\n  return (\n    <React.Fragment>\n      <Grid\n        item\n        xs={12}\n        className={`${classes.fileInputField} ${classes.fieldBottom} ${\n          classes.fieldContainer\n        } ${error !== \"\" ? classes.errorInField : \"\"}`}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={`${error !== \"\" ? classes.fieldLabelError : \"\"} ${\n              classes.inputLabel\n            }`}\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        {showFileSelector || value === \"\" ? (\n          <div className={classes.textBoxContainer}>\n            <input\n              type=\"file\"\n              name={name}\n              onChange={(e) => {\n                const fileName = get(e, \"target.files[0].name\", \"\");\n                fileProcess(e, (data: any) => {\n                  onChange(data, fileName);\n                });\n              }}\n              accept={accept}\n              required={required}\n              disabled={disabled}\n              className={classes.fileInputField}\n            />\n\n            {value !== \"\" && (\n              <IconButton\n                color=\"primary\"\n                aria-label=\"upload picture\"\n                component=\"span\"\n                onClick={() => {\n                  setShowSelector(false);\n                }}\n                disableRipple={false}\n                disableFocusRipple={false}\n                size=\"small\"\n              >\n                <CancelIcon />\n              </IconButton>\n            )}\n\n            {error !== \"\" && <ErrorBlock errorMessage={error} />}\n          </div>\n        ) : (\n          <div className={classes.fileReselect}>\n            <div className={classes.valueString}>{value}</div>\n            <IconButton\n              color=\"primary\"\n              aria-label=\"upload picture\"\n              component=\"span\"\n              onClick={() => {\n                setShowSelector(true);\n              }}\n              disableRipple={false}\n              disableFocusRipple={false}\n              size=\"small\"\n            >\n              <AttachFileIcon />\n            </IconButton>\n          </div>\n        )}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(FileSelector);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nexport const fileProcess = (evt: any, callback: any) => {\n  const file = evt.target.files[0];\n  const reader = new FileReader();\n  reader.readAsDataURL(file);\n\n  reader.onload = () => {\n    // reader.readAsDataURL(file) output will be something like: data:application/x-x509-ca-cert;base64,LS0tLS1CRUdJTiBDRVJUSU\n    // we care only about the actual base64 part (everything after \"data:application/x-x509-ca-cert;base64,\")\n    const fileBase64 = reader.result;\n    if (fileBase64) {\n      const fileArray = fileBase64.toString().split(\"base64,\");\n\n      if (fileArray.length === 2) {\n        callback(fileArray[1]);\n      }\n    }\n  };\n};\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { ICertificateInfo } from \"../../Tenants/types\";\nimport LanguageIcon from \"@mui/icons-material/Language\";\nimport Chip from \"@mui/material/Chip\";\nimport {\n  Box,\n  Container,\n  Divider,\n  Grid,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Typography,\n} from \"@mui/material\";\nimport EventBusyIcon from \"@mui/icons-material/EventBusy\";\nimport Moment from \"react-moment\";\nimport CertificateIcon from \"../../../../icons/CertificateIcon\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    certificateIcon: {\n      float: \"left\",\n      paddingTop: \"5px !important\",\n      paddingRight: \"10px !important\",\n    },\n    certificateInfo: { float: \"right\" },\n    certificateWrapper: {\n      height: \"auto\",\n      margin: 5,\n      border: \"1px solid #E2E2E2\",\n      userSelect: \"text\",\n      borderRadius: 4,\n      \"& h6\": {\n        fontWeight: \"bold\",\n      },\n      \"& div\": {\n        padding: 0,\n      },\n    },\n    certificateExpiry: {\n      color: \"#616161\",\n      display: \"flex\",\n      alignItems: \"center\",\n      flexWrap: \"wrap\",\n      marginBottom: 5,\n      \"& .label\": {\n        fontWeight: \"bold\",\n      },\n    },\n    certificateDomains: {\n      color: \"#616161\",\n      \"& .label\": {\n        fontWeight: \"bold\",\n      },\n    },\n    certificatesList: {\n      border: \"1px solid #E2E2E2\",\n      borderRadius: 4,\n      color: \"#616161\",\n      textTransform: \"lowercase\",\n      overflowY: \"scroll\",\n      maxHeight: 145,\n      marginBottom: 10,\n    },\n    certificatesListItem: {\n      padding: \"0px 16px\",\n      borderBottom: \"1px solid #E2E2E2\",\n      \"& div\": {\n        minWidth: 0,\n      },\n      \"& svg\": {\n        fontSize: 12,\n        marginRight: 10,\n        opacity: 0.5,\n      },\n      \"& span\": {\n        fontSize: 12,\n      },\n    },\n  });\n\ninterface ITLSCertificate {\n  classes: any;\n  certificateInfo: ICertificateInfo;\n  onDelete: any;\n}\n\nconst TLSCertificate = ({\n  classes,\n  certificateInfo,\n  onDelete = () => {},\n}: ITLSCertificate) => {\n  const certificates = certificateInfo.domains || [];\n  return (\n    <Chip\n      key={certificateInfo.name}\n      variant=\"outlined\"\n      color=\"primary\"\n      className={classes.certificateWrapper}\n      label={\n        <Container>\n          <Grid item xs={1} className={classes.certificateIcon}>\n            <CertificateIcon />\n          </Grid>\n          <Grid item xs={11} className={classes.certificateInfo}>\n            <Typography variant=\"subtitle1\" display=\"block\" gutterBottom>\n              {certificateInfo.name}\n            </Typography>\n            <Box className={classes.certificateExpiry}>\n              <EventBusyIcon color=\"inherit\" fontSize=\"small\" />\n              &nbsp;\n              <span className={\"label\"}>Expiry:&nbsp;</span>\n              <span>\n                <Moment format=\"YYYY/MM/DD\">{certificateInfo.expiry}</Moment>\n              </span>\n            </Box>\n            <Divider />\n            <br />\n            <Box className={classes.certificateDomains}>\n              <span className=\"label\">{`${certificates.length} Domain (s):`}</span>\n            </Box>\n            <List className={classes.certificatesList}>\n              {certificates.map((dom, index) => (\n                <ListItem\n                  key={`${dom}-${index}`}\n                  className={classes.certificatesListItem}\n                >\n                  <ListItemAvatar>\n                    <LanguageIcon />\n                  </ListItemAvatar>\n                  <ListItemText primary={dom} />\n                </ListItem>\n              ))}\n            </List>\n          </Grid>\n        </Container>\n      }\n      onDelete={onDelete}\n    />\n  );\n};\n\nexport default withStyles(styles)(TLSCertificate);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { connect, useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport { DialogContentText, IconButton } from \"@mui/material\";\nimport { Button } from \"mds\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  fsGroupChangePolicyType,\n  ICertificateInfo,\n  ITenantSecurityResponse,\n} from \"../types\";\nimport {\n  containerForHeader,\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  spacingUtils,\n  tenantDetailsStyles,\n  wizardCommon,\n} from \"../../Common/FormComponents/common/styleLibrary\";\n\nimport { KeyPair } from \"../ListTenants/utils\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport { AddIcon, ConfirmModalIcon } from \"../../../../icons\";\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport FormSwitchWrapper from \"../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport FileSelector from \"../../Common/FormComponents/FileSelector/FileSelector\";\nimport api from \"../../../../common/api\";\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\nimport Loader from \"../../Common/Loader/Loader\";\nimport TLSCertificate from \"../../Common/TLSCertificate/TLSCertificate\";\nimport SecurityContextSelector from \"../securityContextSelector\";\nimport {\n  setRunAsUser,\n  setFSGroup,\n  setRunAsGroup,\n  setRunAsNonRoot,\n  setFSGroupChangePolicy,\n} from \"../tenantSecurityContextSlice\";\nimport RemoveIcon from \"../../../../icons/RemoveIcon\";\n\ninterface ITenantSecurity {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...tenantDetailsStyles,\n    ...spacingUtils,\n    minioCertificateRows: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-start\",\n      borderBottom: \"1px solid #EAEAEA\",\n      \"&:last-child\": {\n        borderBottom: 0,\n      },\n      \"@media (max-width: 900px)\": {\n        flex: 1,\n      },\n    },\n    minioCertsContainer: {\n      marginBottom: 15,\n    },\n    minioCACertsRow: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-start\",\n\n      borderBottom: \"1px solid #EAEAEA\",\n      \"&:last-child\": {\n        borderBottom: 0,\n      },\n      \"@media (max-width: 900px)\": {\n        flex: 1,\n\n        \"& div label\": {\n          minWidth: 50,\n        },\n      },\n    },\n    rowActions: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      \"@media (max-width: 900px)\": {\n        flex: 1,\n      },\n    },\n    overlayAction: {\n      marginLeft: 10,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    loaderAlign: {\n      textAlign: \"center\",\n    },\n    bold: { fontWeight: \"bold\" },\n    italic: { fontStyle: \"italic\" },\n    fileItem: {\n      marginRight: 10,\n      display: \"flex\",\n      \"& div label\": {\n        minWidth: 50,\n      },\n\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n      },\n    },\n    ...containerForHeader(theme.spacing(4)),\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst TenantSecurity = ({ classes }: ITenantSecurity) => {\n  const dispatch = useAppDispatch();\n\n  const tenant = useSelector((state: AppState) => state.tenants.tenantInfo);\n  const loadingTenant = useSelector(\n    (state: AppState) => state.tenants.loadingTenant\n  );\n\n  const [isSending, setIsSending] = useState<boolean>(false);\n  const [dialogOpen, setDialogOpen] = useState<boolean>(false);\n  const [enableTLS, setEnableTLS] = useState<boolean>(false);\n  const [enableAutoCert, setEnableAutoCert] = useState<boolean>(false);\n  const [enableCustomCerts, setEnableCustomCerts] = useState<boolean>(false);\n  const [certificatesToBeRemoved, setCertificatesToBeRemoved] = useState<\n    string[]\n  >([]);\n  // MinIO certificates\n  const [minioServerCertificates, setMinioServerCertificates] = useState<\n    KeyPair[]\n  >([\n    {\n      id: Date.now().toString(),\n      key: \"\",\n      cert: \"\",\n      encoded_key: \"\",\n      encoded_cert: \"\",\n    },\n  ]);\n  const [minioClientCertificates, setMinioClientCertificates] = useState<\n    KeyPair[]\n  >([\n    {\n      id: Date.now().toString(),\n      key: \"\",\n      cert: \"\",\n      encoded_key: \"\",\n      encoded_cert: \"\",\n    },\n  ]);\n  const [minioCaCertificates, setMinioCaCertificates] = useState<KeyPair[]>([\n    {\n      id: Date.now().toString(),\n      key: \"\",\n      cert: \"\",\n      encoded_key: \"\",\n      encoded_cert: \"\",\n    },\n  ]);\n  const [minioServerCertificateSecrets, setMinioServerCertificateSecrets] =\n    useState<ICertificateInfo[]>([]);\n  const [minioClientCertificateSecrets, setMinioClientCertificateSecrets] =\n    useState<ICertificateInfo[]>([]);\n  const [minioTLSCaCertificateSecrets, setMinioTLSCaCertificateSecrets] =\n    useState<ICertificateInfo[]>([]);\n\n  const runAsGroup = useSelector(\n    (state: AppState) => state.editTenantSecurityContext.runAsGroup\n  );\n  const runAsUser = useSelector(\n    (state: AppState) => state.editTenantSecurityContext.runAsUser\n  );\n  const fsGroup = useSelector(\n    (state: AppState) => state.editTenantSecurityContext.fsGroup\n  );\n  const runAsNonRoot = useSelector(\n    (state: AppState) => state.editTenantSecurityContext.runAsNonRoot\n  );\n  const fsGroupChangePolicy = useSelector(\n    (state: AppState) => state.editTenantSecurityContext.fsGroupChangePolicy\n  );\n\n  const getTenantSecurityInfo = useCallback(() => {\n    api\n      .invoke(\n        \"GET\",\n        `/api/v1/namespaces/${tenant?.namespace}/tenants/${tenant?.name}/security`\n      )\n      .then((res: ITenantSecurityResponse) => {\n        setEnableAutoCert(res.autoCert);\n        setEnableTLS(res.autoCert);\n        if (\n          res.customCertificates.minio ||\n          res.customCertificates.client ||\n          res.customCertificates.minioCAs\n        ) {\n          setEnableCustomCerts(true);\n          setEnableTLS(true);\n        }\n        setMinioServerCertificateSecrets(res.customCertificates.minio || []);\n        setMinioClientCertificateSecrets(res.customCertificates.client || []);\n        setMinioTLSCaCertificateSecrets(res.customCertificates.minioCAs || []);\n        dispatch(setRunAsGroup(res.securityContext.runAsGroup));\n        dispatch(setRunAsUser(res.securityContext.runAsUser));\n        dispatch(setFSGroup(res.securityContext.fsGroup));\n        dispatch(setRunAsNonRoot(res.securityContext.runAsNonRoot));\n        dispatch(\n          setFSGroupChangePolicy(res.securityContext.fsGroupChangePolicy)\n        );\n      })\n      .catch((err: ErrorResponseHandler) => {\n        dispatch(setErrorSnackMessage(err));\n      });\n  }, [tenant, dispatch]);\n\n  useEffect(() => {\n    if (tenant) {\n      getTenantSecurityInfo();\n    }\n  }, [tenant, getTenantSecurityInfo]);\n\n  const updateTenantSecurity = () => {\n    setIsSending(true);\n    let payload = {\n      autoCert: enableAutoCert,\n      customCertificates: {},\n      securityContext: {\n        runAsGroup: runAsGroup,\n        runAsUser: runAsUser,\n        runAsNonRoot: runAsNonRoot,\n        fsGroup: fsGroup,\n        fsGroupChangePolicy: fsGroupChangePolicy,\n      },\n    };\n    if (enableCustomCerts) {\n      payload[\"customCertificates\"] = {\n        secretsToBeDeleted: certificatesToBeRemoved,\n        minioServerCertificates: minioServerCertificates\n          .map((keyPair: KeyPair) => ({\n            crt: keyPair.encoded_cert,\n            key: keyPair.encoded_key,\n          }))\n          .filter((cert: any) => cert.crt && cert.key),\n        minioClientCertificates: minioClientCertificates\n          .map((keyPair: KeyPair) => ({\n            crt: keyPair.encoded_cert,\n            key: keyPair.encoded_key,\n          }))\n          .filter((cert: any) => cert.crt && cert.key),\n        minioCAsCertificates: minioCaCertificates\n          .map((keyPair: KeyPair) => keyPair.encoded_cert)\n          .filter((cert: any) => cert),\n      };\n    } else {\n      payload[\"customCertificates\"] = {\n        secretsToBeDeleted: [\n          ...minioServerCertificateSecrets.map((cert) => cert.name),\n          ...minioClientCertificateSecrets.map((cert) => cert.name),\n          ...minioTLSCaCertificateSecrets.map((cert) => cert.name),\n        ],\n        minioServerCertificates: [],\n        minioClientCertificates: [],\n        minioCAsCertificates: [],\n      };\n    }\n    api\n      .invoke(\n        \"POST\",\n        `/api/v1/namespaces/${tenant?.namespace}/tenants/${tenant?.name}/security`,\n        payload\n      )\n      .then(() => {\n        setIsSending(false);\n        // Close confirmation modal\n        setDialogOpen(false);\n        // Refresh Information and reset forms\n        setMinioServerCertificates([\n          {\n            cert: \"\",\n            encoded_cert: \"\",\n            encoded_key: \"\",\n            id: Date.now().toString(),\n            key: \"\",\n          },\n        ]);\n        setMinioClientCertificates([\n          {\n            cert: \"\",\n            encoded_cert: \"\",\n            encoded_key: \"\",\n            id: Date.now().toString(),\n            key: \"\",\n          },\n        ]);\n        setMinioCaCertificates([\n          {\n            cert: \"\",\n            encoded_cert: \"\",\n            encoded_key: \"\",\n            id: Date.now().toString(),\n            key: \"\",\n          },\n        ]);\n        getTenantSecurityInfo();\n      })\n      .catch((err: ErrorResponseHandler) => {\n        dispatch(setErrorSnackMessage(err));\n        setIsSending(false);\n      });\n  };\n\n  const removeCertificate = (certificateInfo: ICertificateInfo) => {\n    // TLS certificate secrets can be referenced MinIO, Console or KES, we need to remove the secret from all list and update\n    // the arrays\n    // Add certificate to the global list of secrets to be removed\n    setCertificatesToBeRemoved([\n      ...certificatesToBeRemoved,\n      certificateInfo.name,\n    ]);\n\n    // Update MinIO server TLS certificate secrets\n    const updatedMinioServerCertificateSecrets =\n      minioServerCertificateSecrets.filter(\n        (certificateSecret) => certificateSecret.name !== certificateInfo.name\n      );\n    // Update MinIO client TLS certificate secrets\n    const updatedMinioClientCertificateSecrets =\n      minioClientCertificateSecrets.filter(\n        (certificateSecret) => certificateSecret.name !== certificateInfo.name\n      );\n    const updatedMinIOTLSCaCertificateSecrets =\n      minioTLSCaCertificateSecrets.filter(\n        (certificateSecret) => certificateSecret.name !== certificateInfo.name\n      );\n    setMinioServerCertificateSecrets(updatedMinioServerCertificateSecrets);\n    setMinioClientCertificateSecrets(updatedMinioClientCertificateSecrets);\n    setMinioTLSCaCertificateSecrets(updatedMinIOTLSCaCertificateSecrets);\n  };\n\n  const addFileToKeyPair = (\n    type: string,\n    id: string,\n    key: string,\n    fileName: string,\n    value: string\n  ) => {\n    let certificates = minioServerCertificates;\n    let updateCertificates: any = () => {};\n\n    switch (type) {\n      case \"minio\": {\n        certificates = minioServerCertificates;\n        updateCertificates = setMinioServerCertificates;\n        break;\n      }\n      case \"client\": {\n        certificates = minioClientCertificates;\n        updateCertificates = setMinioClientCertificates;\n        break;\n      }\n      case \"minioCAs\": {\n        certificates = minioCaCertificates;\n        updateCertificates = setMinioCaCertificates;\n        break;\n      }\n      default:\n    }\n\n    const NCertList = certificates.map((item: KeyPair) => {\n      if (item.id === id) {\n        return {\n          ...item,\n          [key]: fileName,\n          [`encoded_${key}`]: value,\n        };\n      }\n      return item;\n    });\n    updateCertificates(NCertList);\n  };\n\n  const deleteKeyPair = (type: string, id: string) => {\n    let certificates = minioServerCertificates;\n    let updateCertificates: any = () => {};\n\n    switch (type) {\n      case \"minio\": {\n        certificates = minioServerCertificates;\n        updateCertificates = setMinioServerCertificates;\n        break;\n      }\n      case \"client\": {\n        certificates = minioClientCertificates;\n        updateCertificates = setMinioClientCertificates;\n        break;\n      }\n      case \"minioCAs\": {\n        certificates = minioCaCertificates;\n        updateCertificates = setMinioCaCertificates;\n        break;\n      }\n      default:\n    }\n\n    if (certificates.length > 1) {\n      const cleanCertsList = certificates.filter(\n        (item: KeyPair) => item.id !== id\n      );\n      updateCertificates(cleanCertsList);\n    }\n  };\n\n  const addKeyPair = (type: string) => {\n    let certificates = minioServerCertificates;\n    let updateCertificates: any = () => {};\n\n    switch (type) {\n      case \"minio\": {\n        certificates = minioServerCertificates;\n        updateCertificates = setMinioServerCertificates;\n        break;\n      }\n      case \"client\": {\n        certificates = minioClientCertificates;\n        updateCertificates = setMinioClientCertificates;\n        break;\n      }\n      case \"minioCAs\": {\n        certificates = minioCaCertificates;\n        updateCertificates = setMinioCaCertificates;\n        break;\n      }\n      default:\n    }\n    const updatedCertificates = [\n      ...certificates,\n      {\n        id: Date.now().toString(),\n        key: \"\",\n        cert: \"\",\n        encoded_key: \"\",\n        encoded_cert: \"\",\n      },\n    ];\n    updateCertificates(updatedCertificates);\n  };\n\n  return (\n    <React.Fragment>\n      <ConfirmDialog\n        title={\"Save and Restart\"}\n        confirmText={\"Restart\"}\n        cancelText=\"Cancel\"\n        titleIcon={<ConfirmModalIcon />}\n        isLoading={isSending}\n        onClose={() => setDialogOpen(false)}\n        isOpen={dialogOpen}\n        onConfirm={updateTenantSecurity}\n        confirmationContent={\n          <DialogContentText>\n            Are you sure you want to save the changes and restart the service?\n          </DialogContentText>\n        }\n      />\n      {loadingTenant ? (\n        <div className={classes.loaderAlign}>\n          <Loader />\n        </div>\n      ) : (\n        <Grid container spacing={1}>\n          <Grid item xs={12}>\n            <h1 className={classes.sectionTitle}>Security</h1>\n            <hr className={classes.hrClass} />\n          </Grid>\n          <Grid container spacing={1}>\n            <Grid item xs={12}>\n              <FormSwitchWrapper\n                value=\"enableTLS\"\n                id=\"enableTLS\"\n                name=\"enableTLS\"\n                checked={enableTLS}\n                onChange={(e) => {\n                  const targetD = e.target;\n                  const checked = targetD.checked;\n                  setEnableTLS(checked);\n                }}\n                label={\"TLS\"}\n                description={\n                  \"Securing all the traffic using TLS. This is required for Encryption Configuration\"\n                }\n              />\n            </Grid>\n            {enableTLS && (\n              <Fragment>\n                <Grid item xs={12} className={classes.formFieldRow}>\n                  <FormSwitchWrapper\n                    value=\"enableAutoCert\"\n                    id=\"enableAutoCert\"\n                    name=\"enableAutoCert\"\n                    checked={enableAutoCert}\n                    onChange={(e) => {\n                      const targetD = e.target;\n                      const checked = targetD.checked;\n                      setEnableAutoCert(checked);\n                    }}\n                    label={\"AutoCert\"}\n                    description={\n                      \"The internode certificates will be generated and managed by MinIO Operator\"\n                    }\n                  />\n                </Grid>\n                <Grid item xs={12} className={classes.formFieldRow}>\n                  <FormSwitchWrapper\n                    value=\"enableCustomCerts\"\n                    id=\"enableCustomCerts\"\n                    name=\"enableCustomCerts\"\n                    checked={enableCustomCerts}\n                    onChange={(e) => {\n                      const targetD = e.target;\n                      const checked = targetD.checked;\n                      setEnableCustomCerts(checked);\n                    }}\n                    label={\"Custom Certificates\"}\n                    description={\"Certificates used to terminated TLS at MinIO\"}\n                  />\n                </Grid>\n\n                {enableCustomCerts && (\n                  <Fragment>\n                    <Grid item xs={12} className={classes.formFieldRow}>\n                      <h5>MinIO Server Certificates</h5>\n                    </Grid>\n                    <Grid item xs={12}>\n                      {minioServerCertificateSecrets.map(\n                        (certificateInfo: ICertificateInfo) => (\n                          <TLSCertificate\n                            certificateInfo={certificateInfo}\n                            onDelete={() => removeCertificate(certificateInfo)}\n                          />\n                        )\n                      )}\n                    </Grid>\n                    <Grid item xs={12} className={classes.formFieldRow}>\n                      {minioServerCertificates.map((keyPair, index) => (\n                        <Grid\n                          item\n                          xs={12}\n                          key={keyPair.id}\n                          className={classes.minioCertificateRows}\n                        >\n                          <Grid item xs={10} className={classes.fileItem}>\n                            <FileSelector\n                              onChange={(encodedValue, fileName) =>\n                                addFileToKeyPair(\n                                  \"minio\",\n                                  keyPair.id,\n                                  \"cert\",\n                                  fileName,\n                                  encodedValue\n                                )\n                              }\n                              accept=\".cer,.crt,.cert,.pem\"\n                              id=\"tlsCert\"\n                              name=\"tlsCert\"\n                              label=\"Cert\"\n                              value={keyPair.cert}\n                            />\n                            <FileSelector\n                              onChange={(encodedValue, fileName) =>\n                                addFileToKeyPair(\n                                  \"minio\",\n                                  keyPair.id,\n                                  \"key\",\n                                  fileName,\n                                  encodedValue\n                                )\n                              }\n                              accept=\".key,.pem\"\n                              id=\"tlsKey\"\n                              name=\"tlsKey\"\n                              label=\"Key\"\n                              value={keyPair.key}\n                            />\n                          </Grid>\n                          <Grid item xs={2} className={classes.rowActions}>\n                            <div className={classes.overlayAction}>\n                              <IconButton\n                                size={\"small\"}\n                                onClick={() => addKeyPair(\"minio\")}\n                                disabled={\n                                  index !== minioServerCertificates.length - 1\n                                }\n                              >\n                                <AddIcon />\n                              </IconButton>\n                            </div>\n                            <div className={classes.overlayAction}>\n                              <IconButton\n                                size={\"small\"}\n                                onClick={() =>\n                                  deleteKeyPair(\"minio\", keyPair.id)\n                                }\n                                disabled={minioServerCertificates.length <= 1}\n                              >\n                                <RemoveIcon />\n                              </IconButton>\n                            </div>\n                          </Grid>\n                        </Grid>\n                      ))}\n                    </Grid>\n\n                    <Grid item xs={12} className={classes.formFieldRow}>\n                      <h5>MinIO Client Certificates</h5>\n                    </Grid>\n                    <Grid item xs={12}>\n                      {minioClientCertificateSecrets.map(\n                        (certificateInfo: ICertificateInfo) => (\n                          <TLSCertificate\n                            certificateInfo={certificateInfo}\n                            onDelete={() => removeCertificate(certificateInfo)}\n                          />\n                        )\n                      )}\n                    </Grid>\n                    <Grid item xs={12} className={classes.formFieldRow}>\n                      {minioClientCertificates.map((keyPair, index) => (\n                        <Grid\n                          item\n                          xs={12}\n                          key={keyPair.id}\n                          className={classes.minioCertificateRows}\n                        >\n                          <Grid item xs={10} className={classes.fileItem}>\n                            <FileSelector\n                              onChange={(encodedValue, fileName) =>\n                                addFileToKeyPair(\n                                  \"client\",\n                                  keyPair.id,\n                                  \"cert\",\n                                  fileName,\n                                  encodedValue\n                                )\n                              }\n                              accept=\".cer,.crt,.cert,.pem\"\n                              id=\"tlsCert\"\n                              name=\"tlsCert\"\n                              label=\"Cert\"\n                              value={keyPair.cert}\n                            />\n                            <FileSelector\n                              onChange={(encodedValue, fileName) =>\n                                addFileToKeyPair(\n                                  \"client\",\n                                  keyPair.id,\n                                  \"key\",\n                                  fileName,\n                                  encodedValue\n                                )\n                              }\n                              accept=\".key,.pem\"\n                              id=\"tlsKey\"\n                              name=\"tlsKey\"\n                              label=\"Key\"\n                              value={keyPair.key}\n                            />\n                          </Grid>\n                          <Grid item xs={2} className={classes.rowActions}>\n                            <div className={classes.overlayAction}>\n                              <IconButton\n                                size={\"small\"}\n                                onClick={() => addKeyPair(\"client\")}\n                                disabled={\n                                  index !== minioClientCertificates.length - 1\n                                }\n                              >\n                                <AddIcon />\n                              </IconButton>\n                            </div>\n                            <div className={classes.overlayAction}>\n                              <IconButton\n                                size={\"small\"}\n                                onClick={() =>\n                                  deleteKeyPair(\"client\", keyPair.id)\n                                }\n                                disabled={minioClientCertificates.length <= 1}\n                              >\n                                <RemoveIcon />\n                              </IconButton>\n                            </div>\n                          </Grid>\n                        </Grid>\n                      ))}\n                    </Grid>\n\n                    <Grid item xs={12}>\n                      <h5>MinIO CA Certificates</h5>\n                    </Grid>\n                    <Grid item xs={12}>\n                      {minioTLSCaCertificateSecrets.map(\n                        (certificateInfo: ICertificateInfo) => (\n                          <TLSCertificate\n                            certificateInfo={certificateInfo}\n                            onDelete={() => removeCertificate(certificateInfo)}\n                          />\n                        )\n                      )}\n                    </Grid>\n                    <Grid item xs={12}>\n                      {minioCaCertificates.map((keyPair: KeyPair, index) => (\n                        <Grid\n                          item\n                          xs={12}\n                          key={keyPair.id}\n                          className={classes.minioCACertsRow}\n                        >\n                          <Grid item xs={10}>\n                            <FileSelector\n                              onChange={(encodedValue, fileName) =>\n                                addFileToKeyPair(\n                                  \"minioCAs\",\n                                  keyPair.id,\n                                  \"cert\",\n                                  fileName,\n                                  encodedValue\n                                )\n                              }\n                              accept=\".cer,.crt,.cert,.pem\"\n                              id=\"tlsCert\"\n                              name=\"tlsCert\"\n                              label=\"Cert\"\n                              value={keyPair.cert}\n                            />\n                          </Grid>\n                          <Grid item xs={2}>\n                            <div className={classes.rowActions}>\n                              <div className={classes.overlayAction}>\n                                <IconButton\n                                  size={\"small\"}\n                                  onClick={() => addKeyPair(\"minioCAs\")}\n                                  disabled={\n                                    index !== minioCaCertificates.length - 1\n                                  }\n                                >\n                                  <AddIcon />\n                                </IconButton>\n                              </div>\n                              <div className={classes.overlayAction}>\n                                <IconButton\n                                  size={\"small\"}\n                                  onClick={() =>\n                                    deleteKeyPair(\"minioCAs\", keyPair.id)\n                                  }\n                                  disabled={minioCaCertificates.length <= 1}\n                                >\n                                  <RemoveIcon />\n                                </IconButton>\n                              </div>\n                            </div>\n                          </Grid>\n                        </Grid>\n                      ))}\n                    </Grid>\n                  </Fragment>\n                )}\n              </Fragment>\n            )}\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <h1 className={classes.sectionTitle}>Security Context</h1>\n              <hr className={classes.hrClass} />\n            </Grid>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <SecurityContextSelector\n                classes={classes}\n                runAsGroup={runAsGroup}\n                runAsUser={runAsUser}\n                fsGroup={fsGroup}\n                runAsNonRoot={runAsNonRoot}\n                fsGroupChangePolicy={fsGroupChangePolicy}\n                setFSGroup={(value: string) => dispatch(setFSGroup(value))}\n                setRunAsUser={(value: string) => dispatch(setRunAsUser(value))}\n                setRunAsGroup={(value: string) =>\n                  dispatch(setRunAsGroup(value))\n                }\n                setRunAsNonRoot={(value: boolean) =>\n                  dispatch(setRunAsNonRoot(value))\n                }\n                setFSGroupChangePolicy={(value: fsGroupChangePolicyType) =>\n                  dispatch(setFSGroupChangePolicy(value))\n                }\n              />\n            </Grid>\n            <Grid\n              item\n              xs={12}\n              sx={{ display: \"flex\", justifyContent: \"flex-end\" }}\n            >\n              <Button\n                id={\"save-security\"}\n                type=\"submit\"\n                variant=\"callAction\"\n                disabled={dialogOpen || isSending}\n                onClick={() => setDialogOpen(true)}\n                label={\"Save\"}\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n      )}\n    </React.Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  loadingTenant: state.tenants.loadingTenant,\n  selectedTenant: state.tenants.currentTenant,\n  tenant: state.tenants.tenantInfo,\n});\n\nconst connector = connect(mapState, null);\n\nexport default withStyles(styles)(connector(TenantSecurity));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport InputBoxWrapper from \"../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport FormSwitchWrapper from \"../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport SelectWrapper from \"../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport { Grid, SelectChangeEvent } from \"@mui/material\";\nimport { useDispatch } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { fsGroupChangePolicyType } from \"./types\";\n\ninterface IEditSecurityContextProps {\n  classes: any;\n  runAsUser: string;\n  runAsGroup: string;\n  fsGroup: string;\n  fsGroupChangePolicy: fsGroupChangePolicyType;\n  runAsNonRoot: boolean;\n  setRunAsUser: any;\n  setRunAsGroup: any;\n  setFSGroup: any;\n  setRunAsNonRoot: any;\n  setFSGroupChangePolicy: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    configSectionItem: {\n      marginRight: 15,\n      marginBottom: 15,\n      \"& .multiContainer\": {\n        border: \"1px solid red\",\n      },\n    },\n  });\n\nconst SecurityContextSelector = ({\n  classes,\n  runAsGroup,\n  runAsUser,\n  fsGroup,\n  fsGroupChangePolicy,\n  runAsNonRoot,\n  setRunAsUser,\n  setRunAsGroup,\n  setFSGroup,\n  setRunAsNonRoot,\n  setFSGroupChangePolicy,\n}: IEditSecurityContextProps) => {\n  const dispatch = useDispatch();\n  return (\n    <Fragment>\n      <fieldset className={`${classes.fieldGroup} ${classes.fieldSpaceTop} `}>\n        <legend className={classes.descriptionText}>Security Context</legend>\n\n        <Grid item xs={12}>\n          <div className={`${classes.multiContainerStackNarrow} `}>\n            <div className={classes.configSectionItem}>\n              <InputBoxWrapper\n                type=\"number\"\n                id=\"securityContext_runAsUser\"\n                name=\"securityContext_runAsUser\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  dispatch(setRunAsUser(e.target.value));\n                }}\n                label=\"Run As User\"\n                value={runAsUser}\n                required\n                min=\"0\"\n              />\n            </div>\n            <div className={classes.configSectionItem}>\n              <InputBoxWrapper\n                type=\"number\"\n                id=\"securityContext_runAsGroup\"\n                name=\"securityContext_runAsGroup\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  dispatch(setRunAsGroup(e.target.value));\n                }}\n                label=\"Run As Group\"\n                value={runAsGroup}\n                required\n                min=\"0\"\n              />\n            </div>\n          </div>\n        </Grid>\n        <Grid item xs={12}>\n          <div className={`${classes.multiContainerStackNarrow} `}>\n            <div className={classes.configSectionItem}>\n              <InputBoxWrapper\n                type=\"number\"\n                id=\"securityContext_fsGroup\"\n                name=\"securityContext_fsGroup\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  dispatch(setFSGroup(e.target.value));\n                }}\n                label=\"FsGroup\"\n                value={fsGroup}\n                required\n                min=\"0\"\n              />\n            </div>\n\n            <div className={classes.configSectionItem}>\n              <SelectWrapper\n                label=\"FsGroupChangePolicy\"\n                id=\"securityContext_fsGroupChangePolicy\"\n                name=\"securityContext_fsGroupChangePolicy\"\n                onChange={(e: SelectChangeEvent<string>) => {\n                  dispatch(setFSGroupChangePolicy(e.target.value));\n                }}\n                value={fsGroupChangePolicy}\n                options={[\n                  {\n                    label: \"Always\",\n                    value: \"Always\",\n                  },\n                  {\n                    label: \"OnRootMismatch\",\n                    value: \"OnRootMismatch\",\n                  },\n                ]}\n              />\n            </div>\n          </div>\n        </Grid>\n        <Grid item xs={12}>\n          <div className={classes.multiContainer}>\n            <FormSwitchWrapper\n              value=\"SecurityContextRunAsNonRoot\"\n              id=\"securityContext_runAsNonRoot\"\n              name=\"securityContext_runAsNonRoot\"\n              checked={runAsNonRoot}\n              onChange={() => {\n                dispatch(setRunAsNonRoot(!runAsNonRoot));\n              }}\n              label={\"Do not run as Root\"}\n            />\n          </div>\n        </Grid>\n      </fieldset>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(SecurityContextSelector);\n","import React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport { Theme } from \"@mui/material/styles\";\n\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    errorBlock: {\n      color: theme.palette?.error.main || \"#C83B51\",\n    },\n  });\n\ninterface IErrorBlockProps {\n  classes: any;\n  errorMessage: string;\n  withBreak?: boolean;\n}\n\nconst ErrorBlock = ({\n  classes,\n  errorMessage,\n  withBreak = true,\n}: IErrorBlockProps) => {\n  return (\n    <React.Fragment>\n      {withBreak && <br />}\n      <Typography component=\"p\" variant=\"body1\" className={classes.errorBlock}>\n        {errorMessage}\n      </Typography>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(ErrorBlock);\n"],"names":["props","xmlns","className","fill","viewBox","id","d","transform","clipPath","withStyles","theme","createStyles","fieldBasic","tooltipHelper","valueString","maxWidth","whiteSpace","overflow","textOverflow","marginTop","fileInputField","margin","flexFlow","fileInputStyles","inputLabel","fontWeight","textBoxContainer","border","paddingLeft","label","classes","onChange","name","disabled","tooltip","required","error","accept","value","useState","showFileSelector","setShowSelector","Grid","item","xs","fieldBottom","fieldContainer","errorInField","InputLabel","htmlFor","fieldLabelError","tooltipContainer","Tooltip","title","placement","HelpIcon","type","e","fileName","get","evt","callback","file","target","files","reader","FileReader","readAsDataURL","onload","fileBase64","result","fileArray","toString","split","length","fileProcess","data","IconButton","color","component","onClick","disableRipple","disableFocusRipple","size","Cancel","ErrorBlock","errorMessage","fileReselect","AttachFile","certificateIcon","float","paddingTop","paddingRight","certificateInfo","certificateWrapper","height","userSelect","borderRadius","padding","certificateExpiry","display","alignItems","flexWrap","marginBottom","certificateDomains","certificatesList","textTransform","overflowY","maxHeight","certificatesListItem","borderBottom","minWidth","fontSize","marginRight","opacity","onDelete","certificates","domains","variant","gutterBottom","format","expiry","map","dom","index","primary","connector","connect","state","loadingTenant","tenants","selectedTenant","currentTenant","tenant","tenantInfo","tenantDetailsStyles","spacingUtils","minioCertificateRows","justifyContent","flex","minioCertsContainer","minioCACertsRow","rowActions","overlayAction","marginLeft","background","loaderAlign","textAlign","bold","italic","fontStyle","fileItem","containerForHeader","spacing","createTenantCommon","formFieldStyles","modalBasic","wizardCommon","dispatch","useAppDispatch","useSelector","isSending","setIsSending","dialogOpen","setDialogOpen","enableTLS","setEnableTLS","enableAutoCert","setEnableAutoCert","enableCustomCerts","setEnableCustomCerts","certificatesToBeRemoved","setCertificatesToBeRemoved","Date","now","key","cert","encoded_key","encoded_cert","minioServerCertificates","setMinioServerCertificates","minioClientCertificates","setMinioClientCertificates","minioCaCertificates","setMinioCaCertificates","minioServerCertificateSecrets","setMinioServerCertificateSecrets","minioClientCertificateSecrets","setMinioClientCertificateSecrets","minioTLSCaCertificateSecrets","setMinioTLSCaCertificateSecrets","runAsGroup","editTenantSecurityContext","runAsUser","fsGroup","runAsNonRoot","fsGroupChangePolicy","getTenantSecurityInfo","useCallback","api","namespace","then","res","autoCert","customCertificates","minio","client","minioCAs","setRunAsGroup","securityContext","setRunAsUser","setFSGroup","setRunAsNonRoot","setFSGroupChangePolicy","catch","err","setErrorSnackMessage","useEffect","removeCertificate","updatedMinioServerCertificateSecrets","filter","certificateSecret","updatedMinioClientCertificateSecrets","updatedMinIOTLSCaCertificateSecrets","addFileToKeyPair","updateCertificates","deleteKeyPair","addKeyPair","confirmText","cancelText","titleIcon","isLoading","onClose","isOpen","onConfirm","payload","secretsToBeDeleted","keyPair","crt","minioCAsCertificates","confirmationContent","container","sectionTitle","hrClass","checked","description","Fragment","formFieldRow","encodedValue","sx","configSectionItem","useDispatch","fieldGroup","fieldSpaceTop","descriptionText","multiContainerStackNarrow","min","options","multiContainer","errorBlock","palette","main","withBreak"],"sourceRoot":""}