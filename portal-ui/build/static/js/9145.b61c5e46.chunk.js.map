{"version":3,"file":"static/js/9145.b61c5e46.chunk.js","mappings":"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","sources":["screens/Console/Tenants/TenantDetails/SubnetLicenseTenant.tsx","screens/Console/Tenants/TenantDetails/TenantLicense.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\nimport { containerForHeader } from \"../../Common/FormComponents/common/styleLibrary\";\nimport { Typography } from \"@mui/material\";\nimport { niceBytes } from \"../../../../common/utils\";\nimport { DateTime } from \"luxon\";\nimport { Link } from \"react-router-dom\";\nimport Paper from \"@mui/material/Paper\";\nimport { ITenant } from \"../ListTenants/types\";\nimport { Button } from \"mds\";\nimport { SubnetInfo } from \"../../License/types\";\nimport TooltipWrapper from \"../../Common/TooltipWrapper/TooltipWrapper\";\n\ninterface ISubnetLicenseTenant {\n  classes: any;\n  tenant: ITenant | null;\n  loadingActivateProduct: any;\n  loadingLicenseInfo: boolean;\n  licenseInfo: SubnetInfo | undefined;\n  activateProduct: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    paperContainer: {\n      padding: \"15px\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n    },\n    licenseInfoValue: {\n      textTransform: \"none\",\n      fontSize: 14,\n      fontWeight: \"bold\",\n    },\n    licenseContainer: {\n      position: \"relative\",\n      padding: \"20px 52px 0px 28px\",\n      background: \"#032F51\",\n      boxShadow: \"0px 3px 7px #00000014\",\n      \"& h2\": {\n        color: \"#FFF\",\n        marginBottom: 67,\n      },\n      \"& a\": {\n        textDecoration: \"none\",\n      },\n      \"& h3\": {\n        color: \"#FFFFFF\",\n        marginBottom: \"30px\",\n        fontWeight: \"bold\",\n      },\n      \"& h6\": {\n        color: \"#FFFFFF !important\",\n      },\n    },\n    licenseInfo: { color: \"#FFFFFF\", position: \"relative\" },\n    licenseInfoTitle: {\n      textTransform: \"none\",\n      color: \"#BFBFBF\",\n      fontSize: 11,\n    },\n    verifiedIcon: {\n      width: 96,\n      position: \"absolute\",\n      right: 0,\n      bottom: 29,\n    },\n    noUnderLine: {\n      textDecoration: \"none\",\n    },\n    ...containerForHeader(theme.spacing(4)),\n  });\n\nconst SubnetLicenseTenant = ({\n  classes,\n  tenant,\n  loadingActivateProduct,\n  loadingLicenseInfo,\n  licenseInfo,\n  activateProduct,\n}: ISubnetLicenseTenant) => {\n  const expiryTime = tenant\n    ? DateTime.fromISO(tenant.subnet_license.expires_at)\n    : DateTime.now();\n\n  return (\n    <Paper\n      className={\n        tenant && tenant.subnet_license ? classes.licenseContainer : \"\"\n      }\n    >\n      {tenant && tenant.subnet_license ? (\n        <React.Fragment>\n          <Grid container className={classes.licenseInfo}>\n            <Grid item xs={6}>\n              <Typography\n                variant=\"button\"\n                display=\"block\"\n                gutterBottom\n                className={classes.licenseInfoTitle}\n              >\n                License\n              </Typography>\n              <Typography\n                variant=\"overline\"\n                display=\"block\"\n                gutterBottom\n                className={classes.licenseInfoValue}\n              >\n                Commercial License\n              </Typography>\n              <Typography\n                variant=\"button\"\n                display=\"block\"\n                gutterBottom\n                className={classes.licenseInfoTitle}\n              >\n                Organization\n              </Typography>\n              <Typography\n                variant=\"overline\"\n                display=\"block\"\n                gutterBottom\n                className={classes.licenseInfoValue}\n              >\n                {tenant.subnet_license.organization}\n              </Typography>\n              <Typography\n                variant=\"button\"\n                display=\"block\"\n                gutterBottom\n                className={classes.licenseInfoTitle}\n              >\n                Registered Capacity\n              </Typography>\n              <Typography\n                variant=\"overline\"\n                display=\"block\"\n                gutterBottom\n                className={classes.licenseInfoValue}\n              >\n                {niceBytes(\n                  (tenant.subnet_license.storage_capacity * 1099511627776) // 1 Terabyte = 1099511627776 Bytes\n                    .toString(10)\n                )}\n              </Typography>\n              <Typography\n                variant=\"button\"\n                display=\"block\"\n                gutterBottom\n                className={classes.licenseInfoTitle}\n              >\n                Expiry Date\n              </Typography>\n              <Typography\n                variant=\"overline\"\n                display=\"block\"\n                gutterBottom\n                className={classes.licenseInfoValue}\n              >\n                {expiryTime.toFormat(\"yyyy-MM-dd\")}\n              </Typography>\n            </Grid>\n            <Grid item xs={6}>\n              <Typography\n                variant=\"button\"\n                display=\"block\"\n                gutterBottom\n                className={classes.licenseInfoTitle}\n              >\n                Subscription Plan\n              </Typography>\n              <Typography\n                variant=\"overline\"\n                display=\"block\"\n                gutterBottom\n                className={classes.licenseInfoValue}\n              >\n                {tenant.subnet_license.plan}\n              </Typography>\n              <Typography\n                variant=\"button\"\n                display=\"block\"\n                gutterBottom\n                className={classes.licenseInfoTitle}\n              >\n                Requestor\n              </Typography>\n              <Typography\n                variant=\"overline\"\n                display=\"block\"\n                gutterBottom\n                className={classes.licenseInfoValue}\n              >\n                {tenant.subnet_license.email}\n              </Typography>\n            </Grid>\n            <img\n              className={classes.verifiedIcon}\n              src={\"/verified.svg\"}\n              alt=\"verified\"\n            />\n          </Grid>\n        </React.Fragment>\n      ) : (\n        !loadingLicenseInfo && (\n          <Grid className={classes.paperContainer}>\n            {!licenseInfo && (\n              <Link\n                to={\"/license\"}\n                onClick={(e) => {\n                  e.stopPropagation();\n                }}\n                className={classes.noUnderLine}\n              >\n                <TooltipWrapper tooltip={\"Activate Product\"}>\n                  <Button\n                    id={\"activate-product\"}\n                    label={\"Activate Product\"}\n                    onClick={() => false}\n                    variant={\"callAction\"}\n                  />\n                </TooltipWrapper>\n              </Link>\n            )}\n            {licenseInfo && tenant && (\n              <TooltipWrapper tooltip={\"Attach License\"}>\n                <Button\n                  id={\"attach-license\"}\n                  disabled={loadingActivateProduct}\n                  label={\"Attach License\"}\n                  onClick={() => activateProduct(tenant.namespace, tenant.name)}\n                  variant={\"callAction\"}\n                />\n              </TooltipWrapper>\n            )}\n          </Grid>\n        )\n      )}\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(SubnetLicenseTenant);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  containerForHeader,\n  tenantDetailsStyles,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { SubnetInfo } from \"../../License/types\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport SubnetLicenseTenant from \"./SubnetLicenseTenant\";\nimport api from \"../../../../common/api\";\nimport { Loader } from \"mds\";\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport { setTenantDetailsLoad } from \"../tenantsSlice\";\n\ninterface ITenantLicense {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...tenantDetailsStyles,\n    loaderAlign: {\n      textAlign: \"center\",\n    },\n    ...containerForHeader(theme.spacing(4)),\n  });\n\nconst TenantLicense = ({ classes }: ITenantLicense) => {\n  const dispatch = useAppDispatch();\n\n  const loadingTenant = useSelector(\n    (state: AppState) => state.tenants.loadingTenant\n  );\n  const tenant = useSelector((state: AppState) => state.tenants.tenantInfo);\n\n  const [licenseInfo, setLicenseInfo] = useState<SubnetInfo>();\n  const [loadingLicenseInfo, setLoadingLicenseInfo] = useState<boolean>(true);\n  const [loadingActivateProduct, setLoadingActivateProduct] =\n    useState<boolean>(false);\n\n  const activateProduct = (namespace: string, tenant: string) => {\n    if (loadingActivateProduct) {\n      return;\n    }\n    setLoadingActivateProduct(true);\n    api\n      .invoke(\n        \"POST\",\n        `/api/v1/subscription/namespaces/${namespace}/tenants/${tenant}/activate`,\n        {}\n      )\n      .then(() => {\n        setLoadingActivateProduct(false);\n        dispatch(setTenantDetailsLoad(true));\n        setLoadingLicenseInfo(true);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setLoadingActivateProduct(false);\n        dispatch(setErrorSnackMessage(err));\n      });\n  };\n\n  useEffect(() => {\n    if (loadingLicenseInfo) {\n      api\n        .invoke(\"GET\", `/api/v1/subscription/info`)\n        .then((res: SubnetInfo) => {\n          setLicenseInfo(res);\n          setLoadingLicenseInfo(false);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setLoadingLicenseInfo(false);\n        });\n    }\n  }, [loadingLicenseInfo]);\n\n  return (\n    <Fragment>\n      <h1 className={classes.sectionTitle}>License</h1>\n      {loadingTenant ? (\n        <div className={classes.loaderAlign}>\n          <Loader />\n        </div>\n      ) : (\n        <Fragment>\n          {tenant && (\n            <Grid container>\n              <Grid item xs={12}>\n                <SubnetLicenseTenant\n                  tenant={tenant}\n                  loadingLicenseInfo={loadingLicenseInfo}\n                  loadingActivateProduct={loadingActivateProduct}\n                  licenseInfo={licenseInfo}\n                  activateProduct={activateProduct}\n                />\n              </Grid>\n            </Grid>\n          )}\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(TenantLicense);\n"],"names":["withStyles","theme","createStyles","paperContainer","padding","display","alignItems","justifyContent","licenseInfoValue","textTransform","fontSize","fontWeight","licenseContainer","position","background","boxShadow","color","marginBottom","textDecoration","licenseInfo","licenseInfoTitle","verifiedIcon","width","right","bottom","noUnderLine","containerForHeader","spacing","classes","tenant","loadingActivateProduct","loadingLicenseInfo","activateProduct","expiryTime","DateTime","subnet_license","expires_at","Paper","className","Grid","container","item","xs","Typography","variant","gutterBottom","organization","niceBytes","storage_capacity","toString","toFormat","plan","email","src","alt","to","onClick","e","stopPropagation","TooltipWrapper","tooltip","id","label","disabled","namespace","name","tenantDetailsStyles","loaderAlign","textAlign","dispatch","useAppDispatch","loadingTenant","useSelector","state","tenants","tenantInfo","useState","setLicenseInfo","setLoadingLicenseInfo","setLoadingActivateProduct","useEffect","api","then","res","catch","err","Fragment","sectionTitle","setTenantDetailsLoad","setErrorSnackMessage"],"sourceRoot":""}