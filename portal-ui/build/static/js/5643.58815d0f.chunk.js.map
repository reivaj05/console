{"version":3,"file":"static/js/5643.58815d0f.chunk.js","mappings":"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","sources":["common/HelpBox.tsx","screens/Console/Common/AButton/AButton.tsx","screens/Console/Common/SearchBox.tsx","screens/Console/NotificationEndpoints/ConfirmDeleteTargetModal.tsx","screens/Console/NotificationEndpoints/ListNotificationEndpoints.tsx","screens/Console/NotificationEndpoints/utils.ts","../node_modules/@mui/icons-material/ArrowDropDown.js","../node_modules/@mui/icons-material/ArrowDropUp.js","../node_modules/@mui/icons-material/FiberManualRecord.js","../node_modules/@mui/icons-material/ViewColumn.js","../node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@mui/material/internal/svg-icons/CheckBox.js","../node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@mui/material/Checkbox/checkboxClasses.js","../node_modules/@mui/material/Checkbox/Checkbox.js","../node_modules/lodash/isString.js"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      border: \"1px solid #E2E2E2\",\n      borderRadius: 2,\n      backgroundColor: \"#FBFAFA\",\n      paddingLeft: 25,\n      paddingTop: 31,\n      paddingBottom: 21,\n      paddingRight: 30,\n    },\n    leftItems: {\n      fontSize: 16,\n      fontWeight: \"bold\",\n      marginBottom: 15,\n      display: \"flex\",\n      alignItems: \"center\",\n      \"& .min-icon\": {\n        marginRight: 15,\n        height: 28,\n        width: 38,\n      },\n    },\n    helpText: {\n      fontSize: 16,\n      paddingLeft: 5,\n    },\n  });\n\ninterface IHelpBox {\n  classes: any;\n  iconComponent: any;\n  title: string | React.ReactNode;\n  help: any;\n}\n\nconst HelpBox = ({ classes, iconComponent, title, help }: IHelpBox) => {\n  return (\n    <div className={classes.root}>\n      <Grid container>\n        <Grid item xs={12} className={classes.leftItems}>\n          {iconComponent}\n          {title}\n        </Grid>\n        <Grid item xs={12} className={classes.helpText}>\n          {help}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(HelpBox);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IconButtonProps } from \"@mui/material\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      padding: 0,\n      margin: 0,\n      border: 0,\n      backgroundColor: \"transparent\",\n      textDecoration: \"underline\",\n      cursor: \"pointer\",\n      fontSize: \"inherit\",\n      color: theme.palette.info.main,\n      fontFamily: \"Lato, sans-serif\",\n    },\n  });\n\ninterface IAButton extends IconButtonProps {\n  classes: any;\n  children: any;\n}\n\nconst AButton = ({ classes, children, ...rest }: IAButton) => {\n  return (\n    <button {...rest} className={classes.root}>\n      {children}\n    </button>\n  );\n};\n\nexport default withStyles(styles)(AButton);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport { SearchIcon } from \"mds\";\nimport TextField from \"@mui/material/TextField\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport { searchField } from \"./FormComponents/common/styleLibrary\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    searchField: {\n      ...searchField.searchField,\n    },\n    adornment: {},\n  });\n\ntype SearchBoxProps = {\n  placeholder?: string;\n  value: string;\n  classes: any;\n  onChange: (value: string) => void;\n  adornmentPosition?: \"start\" | \"end\";\n  overrideClass?: any;\n};\n\nconst SearchBox = ({\n  placeholder = \"\",\n  classes,\n  onChange,\n  adornmentPosition = \"end\",\n  overrideClass,\n  value,\n}: SearchBoxProps) => {\n  const inputProps = {\n    disableUnderline: true,\n    [`${adornmentPosition}Adornment`]: (\n      <InputAdornment\n        position={adornmentPosition}\n        className={classes.adornment}\n      >\n        <SearchIcon />\n      </InputAdornment>\n    ),\n  };\n  return (\n    <TextField\n      placeholder={placeholder}\n      className={overrideClass ? overrideClass : classes.searchField}\n      id=\"search-resource\"\n      label=\"\"\n      InputProps={inputProps}\n      onChange={(e) => {\n        onChange(e.target.value);\n      }}\n      variant=\"standard\"\n      value={value}\n    />\n  );\n};\n\nexport default withStyles(styles)(SearchBox);\n","import React from \"react\";\nimport ConfirmDialog from \"../Common/ModalWrapper/ConfirmDialog\";\nimport { ConfirmModalIcon } from \"mds\";\nimport { DialogContentText } from \"@mui/material\";\n\nconst ConfirmDeleteTargetModal = ({\n  onConfirm,\n  onClose,\n  serviceName,\n  status,\n}: {\n  onConfirm: () => void;\n  onClose: () => void;\n  serviceName: string;\n  status: string;\n}) => {\n  return (\n    <ConfirmDialog\n      title={`Delete Endpoint`}\n      confirmText={\"Delete\"}\n      isOpen={true}\n      titleIcon={<ConfirmModalIcon />}\n      isLoading={false}\n      onConfirm={onConfirm}\n      onClose={onClose}\n      confirmationContent={\n        <React.Fragment>\n          <DialogContentText>\n            Are you sure you want to delete the notification endpoint ?\n            <br />\n            <b>{serviceName}</b> which is <b>{status}</b>\n          </DialogContentText>\n        </React.Fragment>\n      }\n    />\n  );\n};\n\nexport default ConfirmDeleteTargetModal;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Button } from \"mds\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { LinearProgress } from \"@mui/material\";\nimport { red } from \"@mui/material/colors\";\nimport Grid from \"@mui/material/Grid\";\nimport FiberManualRecordIcon from \"@mui/icons-material/FiberManualRecord\";\nimport {\n  NotificationEndpointItem,\n  NotificationEndpointsList,\n  TransformedEndpointItem,\n} from \"./types\";\nimport { getNotificationConfigKey, notificationTransform } from \"./utils\";\nimport { AddIcon, LambdaIcon } from \"mds\";\nimport TableWrapper from \"../Common/TableWrapper/TableWrapper\";\n\nimport {\n  actionsTray,\n  containerForHeader,\n  searchField,\n  settingsCommon,\n  tableStyles,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport api from \"../../../common/api\";\nimport { RefreshIcon } from \"mds\";\nimport HelpBox from \"../../../common/HelpBox\";\nimport AButton from \"../Common/AButton/AButton\";\nimport PageLayout from \"../Common/Layout/PageLayout\";\nimport SearchBox from \"../Common/SearchBox\";\n\nimport { IAM_PAGES } from \"../../../common/SecureComponent/permissions\";\nimport {\n  setErrorSnackMessage,\n  setServerNeedsRestart,\n} from \"../../../systemSlice\";\nimport { useAppDispatch } from \"../../../store\";\nimport ConfirmDeleteTargetModal from \"./ConfirmDeleteTargetModal\";\nimport TooltipWrapper from \"../Common/TooltipWrapper/TooltipWrapper\";\n\ninterface IListNotificationEndpoints {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...actionsTray,\n    ...settingsCommon,\n    ...containerForHeader(theme.spacing(4)),\n    twHeight: {\n      minHeight: 400,\n    },\n    tableBlock: {\n      ...tableStyles.tableBlock,\n    },\n    rightActionItems: {\n      display: \"flex\",\n      alignItems: \"center\",\n      \"& button\": {\n        whiteSpace: \"nowrap\",\n      },\n    },\n    searchField: {\n      ...searchField.searchField,\n      maxWidth: 380,\n    },\n  });\n\nconst ListNotificationEndpoints = ({ classes }: IListNotificationEndpoints) => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  //Local States\n  const [records, setRecords] = useState<TransformedEndpointItem[]>([]);\n  const [filter, setFilter] = useState<string>(\"\");\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  const [isDelConfirmOpen, setIsDelConfirmOpen] = useState<boolean>(false);\n  const [selNotifyEndPoint, setSelNotifyEndpoint] =\n    useState<TransformedEndpointItem | null>();\n\n  //Effects\n  // load records on mount\n  useEffect(() => {\n    if (isLoading) {\n      const fetchRecords = () => {\n        api\n          .invoke(\"GET\", `/api/v1/admin/notification_endpoints`)\n          .then((res: NotificationEndpointsList) => {\n            let resNotEndList: NotificationEndpointItem[] = [];\n            if (res.notification_endpoints !== null) {\n              resNotEndList = res.notification_endpoints;\n            }\n            setRecords(notificationTransform(resNotEndList));\n            setIsLoading(false);\n          })\n          .catch((err: ErrorResponseHandler) => {\n            dispatch(setErrorSnackMessage(err));\n            setIsLoading(false);\n          });\n      };\n      fetchRecords();\n    }\n  }, [isLoading, dispatch]);\n\n  useEffect(() => {\n    setIsLoading(true);\n  }, []);\n\n  const resetNotificationConfig = (\n    ep: TransformedEndpointItem | undefined | null\n  ) => {\n    if (ep?.name) {\n      const configKey = getNotificationConfigKey(ep.name);\n      let accountId = `:${ep.account_id}`;\n      if (configKey) {\n        api\n          .invoke(\"POST\", `/api/v1/configs/${configKey}${accountId}/reset`)\n          .then((res) => {\n            dispatch(setServerNeedsRestart(true));\n            setSelNotifyEndpoint(null);\n            setIsDelConfirmOpen(false);\n          })\n          .catch((err: ErrorResponseHandler) => {\n            setIsDelConfirmOpen(false);\n            dispatch(setErrorSnackMessage(err));\n          });\n      } else {\n        setSelNotifyEndpoint(null);\n        setIsDelConfirmOpen(false);\n        console.log(`Unable to find Config key for ${ep.name}`);\n      }\n    }\n  };\n\n  const confirmDelNotifyEndpoint = (record: TransformedEndpointItem) => {\n    setSelNotifyEndpoint(record);\n    setIsDelConfirmOpen(true);\n  };\n\n  const tableActions = [{ type: \"delete\", onClick: confirmDelNotifyEndpoint }];\n\n  const filteredRecords = records.filter((b: TransformedEndpointItem) => {\n    if (filter === \"\") {\n      return true;\n    }\n    return b.service_name.indexOf(filter) >= 0;\n  });\n\n  const statusDisplay = (status: string) => {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n        }}\n      >\n        <FiberManualRecordIcon\n          style={status === \"Offline\" ? { color: red[500] } : {}}\n        />\n        {status}\n      </div>\n    );\n  };\n\n  return (\n    <Fragment>\n      <PageLayout>\n        <Grid item xs={12} className={classes.actionsTray}>\n          <SearchBox\n            placeholder=\"Search target\"\n            onChange={setFilter}\n            overrideClass={classes.searchField}\n            value={filter}\n          />\n          <div className={classes.rightActionItems}>\n            <TooltipWrapper tooltip={\"Refresh List\"}>\n              <Button\n                id={\"reload-notification-endpoints\"}\n                label={\"Refresh\"}\n                variant=\"regular\"\n                icon={<RefreshIcon />}\n                onClick={() => {\n                  setIsLoading(true);\n                }}\n              />\n            </TooltipWrapper>\n            <TooltipWrapper tooltip={\"Add Notification Target\"}>\n              <Button\n                id={\"add-notification-target\"}\n                label={\" Add Notification Target\"}\n                variant=\"callAction\"\n                icon={<AddIcon />}\n                onClick={() => {\n                  navigate(IAM_PAGES.NOTIFICATIONS_ENDPOINTS_ADD);\n                }}\n              />\n            </TooltipWrapper>\n          </div>\n        </Grid>\n        {isLoading && <LinearProgress />}\n        {!isLoading && (\n          <Fragment>\n            {records.length > 0 && (\n              <Fragment>\n                <Grid item xs={12} className={classes.tableBlock}>\n                  <TableWrapper\n                    itemActions={tableActions}\n                    columns={[\n                      {\n                        label: \"Status\",\n                        elementKey: \"status\",\n                        renderFunction: statusDisplay,\n                        width: 150,\n                      },\n                      { label: \"Service\", elementKey: \"service_name\" },\n                    ]}\n                    isLoading={isLoading}\n                    records={filteredRecords}\n                    entityName=\"Notification Endpoints\"\n                    idField=\"service_name\"\n                    customPaperHeight={classes.twHeight}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <HelpBox\n                    title={\"Notification Endpoints\"}\n                    iconComponent={<LambdaIcon />}\n                    help={\n                      <Fragment>\n                        MinIO bucket notifications allow administrators to send\n                        notifications to supported external services on certain\n                        object or bucket events. MinIO supports bucket and\n                        object-level S3 events similar to the Amazon S3 Event\n                        Notifications.\n                        <br />\n                        <br />\n                        You can learn more at our{\" \"}\n                        <a\n                          href=\"https://min.io/docs/minio/linux/administration/monitoring/bucket-notifications.html?ref=con\"\n                          target=\"_blank\"\n                          rel=\"noreferrer\"\n                        >\n                          documentation\n                        </a>\n                        .\n                      </Fragment>\n                    }\n                  />\n                </Grid>\n              </Fragment>\n            )}\n            {records.length === 0 && (\n              <Grid\n                container\n                justifyContent={\"center\"}\n                alignContent={\"center\"}\n                alignItems={\"center\"}\n              >\n                <Grid item xs={8}>\n                  <HelpBox\n                    title={\"Notification Targets\"}\n                    iconComponent={<LambdaIcon />}\n                    help={\n                      <Fragment>\n                        MinIO bucket notifications allow administrators to send\n                        notifications to supported external services on certain\n                        object or bucket events. MinIO supports bucket and\n                        object-level S3 events similar to the Amazon S3 Event\n                        Notifications.\n                        <br />\n                        <br />\n                        To get started,{\" \"}\n                        <AButton\n                          onClick={() => {\n                            navigate(IAM_PAGES.NOTIFICATIONS_ENDPOINTS_ADD);\n                          }}\n                        >\n                          Add a Notification Target\n                        </AButton>\n                        .\n                      </Fragment>\n                    }\n                  />\n                </Grid>\n              </Grid>\n            )}\n          </Fragment>\n        )}\n\n        {isDelConfirmOpen ? (\n          <ConfirmDeleteTargetModal\n            onConfirm={() => {\n              resetNotificationConfig(selNotifyEndPoint);\n            }}\n            status={`${selNotifyEndPoint?.status}`}\n            serviceName={`${selNotifyEndPoint?.service_name}`}\n            onClose={() => {\n              setIsDelConfirmOpen(false);\n            }}\n          />\n        ) : null}\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(ListNotificationEndpoints);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { NotificationEndpointItem } from \"./types\";\n\nimport { IElementValue } from \"../Configurations/types\";\n\nexport const notifyPostgres = \"notify_postgres\";\nexport const notifyMysql = \"notify_mysql\";\nexport const notifyKafka = \"notify_kafka\";\nexport const notifyAmqp = \"notify_amqp\";\nexport const notifyMqtt = \"notify_mqtt\";\nexport const notifyRedis = \"notify_redis\";\nexport const notifyNats = \"notify_nats\";\nexport const notifyElasticsearch = \"notify_elasticsearch\";\nexport const notifyWebhooks = \"notify_webhook\";\nexport const notifyNsq = \"notify_nsq\";\n\nexport const notificationTransform = (\n  notificationElements: NotificationEndpointItem[]\n) => {\n  return notificationElements.map((element) => {\n    return {\n      service_name: `${element.service}:${element.account_id}`,\n      name: element.service,\n      account_id: element.account_id,\n      status: element.status,\n    };\n  });\n};\n\nexport const servicesList = [\n  {\n    actionTrigger: notifyPostgres,\n    targetTitle: \"PostgreSQL\",\n    logo: \"/postgres-logo.svg\",\n  },\n  {\n    actionTrigger: notifyKafka,\n    targetTitle: \"Kafka\",\n    logo: \"/kafka-logo.svg\",\n  },\n  {\n    actionTrigger: notifyAmqp,\n    targetTitle: \"AMQP\",\n    logo: \"/amqp-logo.svg\",\n  },\n  {\n    actionTrigger: notifyMqtt,\n    targetTitle: \"MQTT\",\n    logo: \"/mqtt-logo.svg\",\n  },\n  {\n    actionTrigger: notifyRedis,\n    targetTitle: \"Redis\",\n    logo: \"/redis-logo.svg\",\n  },\n  {\n    actionTrigger: notifyNats,\n    targetTitle: \"NATS\",\n    logo: \"/nats-logo.svg\",\n  },\n  {\n    actionTrigger: notifyMysql,\n    targetTitle: \"Mysql\",\n    logo: \"/mysql-logo.svg\",\n  },\n  {\n    actionTrigger: notifyElasticsearch,\n    targetTitle: \"Elastic Search\",\n    logo: \"/elasticsearch-logo.svg\",\n  },\n  {\n    actionTrigger: notifyWebhooks,\n    targetTitle: \"Webhook\",\n    logo: \"/webhooks-logo.svg\",\n  },\n  {\n    actionTrigger: notifyNsq,\n    targetTitle: \"NSQ\",\n    logo: \"/nsq-logo.svg\",\n  },\n];\n\nconst commonFields = [\n  {\n    name: \"queue_dir\",\n    label: \"Queue Directory\",\n    required: false,\n\n    tooltip: \"staging dir for undelivered messages e.g. '/home/events'\",\n    type: \"string\",\n    placeholder: \"Enter Queue Directory\",\n  },\n  {\n    name: \"queue_limit\",\n    label: \"Queue Limit\",\n    required: false,\n\n    tooltip: \"maximum limit for undelivered messages, defaults to '10000'\",\n    type: \"number\",\n    placeholder: \"Enter Queue Limit\",\n  },\n  {\n    name: \"comment\",\n    label: \"Comment\",\n    required: false,\n    type: \"comment\",\n    placeholder: \"Enter custom notes if any\",\n  },\n];\n\nexport const removeEmptyFields = (formFields: IElementValue[]) => {\n  const nonEmptyFields = formFields.filter((field) => field.value !== \"\");\n\n  return nonEmptyFields;\n};\n\nexport const notificationEndpointsFields: any = {\n  [notifyKafka]: [\n    {\n      name: \"brokers\",\n      label: \"Brokers\",\n      required: true,\n\n      tooltip: \"Comma separated list of Kafka broker addresses\",\n      type: \"string\",\n      placeholder: \"Enter Brokers\",\n    },\n    {\n      name: \"topic\",\n      label: \"Topic\",\n      tooltip: \"Kafka topic used for bucket notifications\",\n      type: \"string\",\n      placeholder: \"Enter Topic\",\n    },\n    {\n      name: \"sasl_username\",\n      label: \"SASL Username\",\n      tooltip: \"Username for SASL/PLAIN or SASL/SCRAM authentication\",\n      type: \"string\",\n      placeholder: \"Enter SASL Username\",\n    },\n    {\n      name: \"sasl_password\",\n      label: \"SASL Password\",\n      tooltip: \"Password for SASL/PLAIN or SASL/SCRAM authentication\",\n      type: \"string\",\n      placeholder: \"Enter SASL Password\",\n    },\n    {\n      name: \"sasl_mechanism\",\n      label: \"SASL Mechanism\",\n      tooltip: \"SASL authentication mechanism, default 'PLAIN'\",\n      type: \"string\",\n    },\n    {\n      name: \"tls_client_auth\",\n      label: \"TLS Client Auth\",\n      tooltip:\n        \"Client Auth determines the Kafka server's policy for TLS client auth\",\n      type: \"string\",\n      placeholder: \"Enter TLS Client Auth\",\n    },\n    {\n      name: \"sasl\",\n      label: \"SASL\",\n      tooltip: \"Set to 'on' to enable SASL authentication\",\n      type: \"on|off\",\n    },\n    {\n      name: \"tls\",\n      label: \"TLS\",\n      tooltip: \"Set to 'on' to enable TLS\",\n      type: \"on|off\",\n    },\n    {\n      name: \"tls_skip_verify\",\n      label: \"TLS skip verify\",\n      tooltip:\n        'Trust server TLS without verification, defaults to \"on\" (verify)',\n      type: \"on|off\",\n    },\n    {\n      name: \"client_tls_cert\",\n      label: \"client TLS cert\",\n      tooltip: \"Path to client certificate for mTLS auth\",\n      type: \"path\",\n      placeholder: \"Enter TLS Client Cert\",\n    },\n    {\n      name: \"client_tls_key\",\n      label: \"client TLS key\",\n      tooltip: \"Path to client key for mTLS auth\",\n      type: \"path\",\n      placeholder: \"Enter TLS Client Key\",\n    },\n    {\n      name: \"version\",\n      label: \"Version\",\n      tooltip: \"Specify the version of the Kafka cluster e.g '2.2.0'\",\n      type: \"string\",\n      placeholder: \"Enter Kafka Version\",\n    },\n    ...commonFields,\n  ],\n  [notifyAmqp]: [\n    {\n      name: \"url\",\n      required: true,\n      label: \"URL\",\n      tooltip:\n        \"AMQP server endpoint e.g. `amqp://myuser:mypassword@localhost:5672`\",\n      type: \"url\",\n    },\n    {\n      name: \"exchange\",\n      label: \"Exchange\",\n      tooltip: \"Name of the AMQP exchange\",\n      type: \"string\",\n      placeholder: \"Enter Exchange\",\n    },\n    {\n      name: \"exchange_type\",\n      label: \"Exchange Type\",\n      tooltip: \"AMQP exchange type\",\n      type: \"string\",\n      placeholder: \"Enter Exchange Type\",\n    },\n    {\n      name: \"routing_key\",\n      label: \"Routing Key\",\n      tooltip: \"Routing key for publishing\",\n      type: \"string\",\n      placeholder: \"Enter Routing Key\",\n    },\n    {\n      name: \"mandatory\",\n      label: \"Mandatory\",\n      tooltip:\n        \"Quietly ignore undelivered messages when set to 'off', default is 'on'\",\n      type: \"on|off\",\n    },\n    {\n      name: \"durable\",\n      label: \"Durable\",\n      tooltip:\n        \"Persist queue across broker restarts when set to 'on', default is 'off'\",\n      type: \"on|off\",\n    },\n    {\n      name: \"no_wait\",\n      label: \"No Wait\",\n      tooltip:\n        \"Non-blocking message delivery when set to 'on', default is 'off'\",\n      type: \"on|off\",\n    },\n    {\n      name: \"internal\",\n      label: \"Internal\",\n      tooltip:\n        \"Set to 'on' for exchange to be not used directly by publishers, but only when bound to other exchanges\",\n      type: \"on|off\",\n    },\n    {\n      name: \"auto_deleted\",\n      label: \"Auto Deleted\",\n      tooltip:\n        \"Auto delete queue when set to 'on', when there are no consumers\",\n      type: \"on|off\",\n    },\n    {\n      name: \"delivery_mode\",\n      label: \"Delivery Mode\",\n      tooltip: \"Set to '1' for non-persistent or '2' for persistent queue\",\n      type: \"number\",\n      placeholder: \"Enter Delivery Mode\",\n    },\n    ...commonFields,\n  ],\n  [notifyRedis]: [\n    {\n      name: \"address\",\n      required: true,\n      label: \"Address\",\n      tooltip: \"Redis server's address. For example: `localhost:6379`\",\n      type: \"address\",\n      placeholder: \"Enter Address\",\n    },\n    {\n      name: \"key\",\n      required: true,\n      label: \"Key\",\n      tooltip: \"Redis key to store/update events, key is auto-created\",\n      type: \"string\",\n      placeholder: \"Enter Key\",\n    },\n    {\n      name: \"password\",\n      label: \"Password\",\n      tooltip: \"Redis server password\",\n      type: \"string\",\n      placeholder: \"Enter Password\",\n    },\n    ...commonFields,\n  ],\n  [notifyMqtt]: [\n    {\n      name: \"broker\",\n      required: true,\n      label: \"Broker\",\n      tooltip: \"MQTT server endpoint e.g. `tcp://localhost:1883`\",\n      type: \"uri\",\n      placeholder: \"Enter Brokers\",\n    },\n    {\n      name: \"topic\",\n      required: true,\n      label: \"Topic\",\n      tooltip: \"name of the MQTT topic to publish\",\n      type: \"string\",\n      placeholder: \"Enter Topic\",\n    },\n    {\n      name: \"username\",\n      label: \"Username\",\n      tooltip: \"MQTT username\",\n      type: \"string\",\n      placeholder: \"Enter Username\",\n    },\n    {\n      name: \"password\",\n      label: \"Password\",\n      tooltip: \"MQTT password\",\n      type: \"string\",\n      placeholder: \"Enter Password\",\n    },\n    {\n      name: \"qos\",\n      label: \"QOS\",\n      tooltip: \"Set the quality of service priority, defaults to '0'\",\n      type: \"number\",\n      placeholder: \"Enter QOS\",\n    },\n    {\n      name: \"keep_alive_interval\",\n      label: \"Keep Alive Interval\",\n      tooltip: \"Keep-alive interval for MQTT connections in s,m,h,d\",\n      type: \"duration\",\n      placeholder: \"Enter Keep Alive Internal\",\n    },\n    {\n      name: \"reconnect_interval\",\n      label: \"Reconnect Interval\",\n      tooltip: \"Reconnect interval for MQTT connections in s,m,h,d\",\n      type: \"duration\",\n      placeholder: \"Enter Reconnect Interval\",\n    },\n    ...commonFields,\n  ],\n  [notifyNats]: [\n    {\n      name: \"address\",\n      required: true,\n      label: \"Address\",\n      tooltip: \"NATS server address e.g. '0.0.0.0:4222'\",\n      type: \"address\",\n      placeholder: \"Enter Address\",\n    },\n    {\n      name: \"subject\",\n      required: true,\n      label: \"Subject\",\n      tooltip: \"NATS subscription subject\",\n      type: \"string\",\n      placeholder: \"Enter NATS Subject\",\n    },\n    {\n      name: \"username\",\n      label: \"Username\",\n      tooltip: \"NATS username\",\n      type: \"string\",\n      placeholder: \"Enter NATS Username\",\n    },\n    {\n      name: \"password\",\n      label: \"Password\",\n      tooltip: \"NATS password\",\n      type: \"string\",\n      placeholder: \"Enter NATS password\",\n    },\n    {\n      name: \"token\",\n      label: \"Token\",\n      tooltip: \"NATS token\",\n      type: \"string\",\n      placeholder: \"Enter NATS token\",\n    },\n    {\n      name: \"tls\",\n      label: \"TLS\",\n      tooltip: \"Set to 'on' to enable TLS\",\n      type: \"on|off\",\n    },\n    {\n      name: \"tls_skip_verify\",\n      label: \"TLS Skip Verify\",\n      tooltip:\n        'Trust server TLS without verification, defaults to \"on\" (verify)',\n      type: \"on|off\",\n    },\n    {\n      name: \"ping_interval\",\n      label: \"Ping Interval\",\n      tooltip: \"Client ping commands interval in s,m,h,d. Disabled by default\",\n      type: \"duration\",\n      placeholder: \"Enter Ping Interval\",\n    },\n    {\n      name: \"streaming\",\n      label: \"Streaming\",\n      tooltip: \"Set to 'on', to use streaming NATS server\",\n      type: \"on|off\",\n    },\n    {\n      name: \"streaming_async\",\n      label: \"Streaming async\",\n      tooltip: \"Set to 'on', to enable asynchronous publish\",\n      type: \"on|off\",\n    },\n    {\n      name: \"streaming_max_pub_acks_in_flight\",\n      label: \"Streaming max publish ACKS in flight\",\n      tooltip: \"Number of messages to publish without waiting for ACKs\",\n      type: \"number\",\n      placeholder: \"Enter Streaming in flight value\",\n    },\n    {\n      name: \"streaming_cluster_id\",\n      label: \"Streaming Cluster ID\",\n      tooltip: \"Unique ID for NATS streaming cluster\",\n      type: \"string\",\n      placeholder: \"Enter Streaming Cluster ID\",\n    },\n    {\n      name: \"cert_authority\",\n      label: \"Cert Authority\",\n      tooltip: \"Path to certificate chain of the target NATS server\",\n      type: \"string\",\n      placeholder: \"Enter Cert Authority\",\n    },\n    {\n      name: \"client_cert\",\n      label: \"Client Cert\",\n      tooltip: \"Client cert for NATS mTLS auth\",\n      type: \"string\",\n      placeholder: \"Enter Client Cert\",\n    },\n    {\n      name: \"client_key\",\n      label: \"Client Key\",\n      tooltip: \"Client cert key for NATS mTLS auth\",\n      type: \"string\",\n      placeholder: \"Enter Client Key\",\n    },\n    ...commonFields,\n  ],\n  [notifyElasticsearch]: [\n    {\n      name: \"url\",\n      required: true,\n      label: \"URL\",\n      tooltip:\n        \"Elasticsearch server's address, with optional authentication info\",\n      type: \"url\",\n      placeholder: \"Enter URL\",\n    },\n    {\n      name: \"index\",\n      required: true,\n      label: \"Index\",\n      tooltip:\n        \"Elasticsearch index to store/update events, index is auto-created\",\n      type: \"string\",\n      placeholder: \"Enter Index\",\n    },\n    {\n      name: \"format\",\n      required: true,\n      label: \"Format\",\n      tooltip:\n        \"'namespace' reflects current bucket/object list and 'access' reflects a journal of object operations, defaults to 'namespace'\",\n      type: \"enum\",\n      placeholder: \"Enter Format\",\n    },\n    ...commonFields,\n  ],\n  [notifyWebhooks]: [\n    {\n      name: \"endpoint\",\n      required: true,\n      label: \"Endpoint\",\n      tooltip:\n        \"webhook server endpoint e.g. http://localhost:8080/minio/events\",\n      type: \"url\",\n      placeholder: \"Enter Endpoint\",\n    },\n    {\n      name: \"auth_token\",\n      label: \"Auth Token\",\n      tooltip: \"opaque string or JWT authorization token\",\n      type: \"string\",\n      placeholder: \"Enter auth_token\",\n    },\n    ...commonFields,\n  ],\n  [notifyNsq]: [\n    {\n      name: \"nsqd_address\",\n      required: true,\n      label: \"NSQD Address\",\n      tooltip: \"NSQ server address e.g. '127.0.0.1:4150'\",\n      type: \"address\",\n      placeholder: \"Enter nsqd_address\",\n    },\n    {\n      name: \"topic\",\n      required: true,\n      label: \"Topic\",\n      tooltip: \"NSQ topic\",\n      type: \"string\",\n      placeholder: \"Enter Topic\",\n    },\n    {\n      name: \"tls\",\n      label: \"TLS\",\n      tooltip: \"set to 'on' to enable TLS\",\n      type: \"on|off\",\n    },\n    {\n      name: \"tls_skip_verify\",\n      label: \"TLS Skip Verify\",\n      tooltip:\n        'trust server TLS without verification, defaults to \"on\" (verify)',\n      type: \"on|off\",\n    },\n    ...commonFields,\n  ],\n};\n\nconst serviceToConfigMap: Record<string, string> = {\n  webhook: \"notify_webhook\",\n  amqp: \"notify_amqp\",\n  kafka: \"notify_kafka\",\n  mqtt: \"notify_mqtt\",\n  nats: \"notify_nats\",\n  nsq: \"notify_nsq\",\n  mysql: \"notify_mysql\",\n  postgresql: \"notify_postgres\", //looks different in server response(postgresql as opposed to postgres) from restapi/admin_notification_endpoints.go\n  elasticsearch: \"notify_elasticsearch\",\n  redis: \"notify_redis\",\n};\n\nexport const getNotificationConfigKey = (serviceName: string) => {\n  return serviceToConfigMap[serviceName];\n};\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m7 10 5 5 5-5z\"\n}), 'ArrowDropDown');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m7 14 5-5 5 5z\"\n}), 'ArrowDropUp');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"circle\", {\n  cx: \"12\",\n  cy: \"12\",\n  r: \"8\"\n}), 'FiberManualRecord');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M14.67 5v14H9.33V5h5.34zm1 14H21V5h-5.33v14zm-7.34 0V5H3v14h5.33z\"\n}), 'ViewColumn');\nexports.default = _default;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary']);\nexport default checkboxClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: (theme.vars || theme).palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${ownerState.color === 'default' ? theme.vars.palette.action.activeChannel : theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: (theme.vars || theme).palette[ownerState.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.action.disabled\n  }\n}));\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _icon$props$fontSize, _indeterminateIcon$pr;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n  const {\n      checkedIcon = defaultCheckedIcon,\n      color = 'primary',\n      icon: iconProp = defaultIcon,\n      indeterminate = false,\n      indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n      inputProps,\n      size = 'medium',\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  const ownerState = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size\n    }),\n    ownerState: ownerState,\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;","var baseGetTag = require('./_baseGetTag'),\n    isArray = require('./isArray'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nmodule.exports = isString;\n"],"names":["withStyles","theme","createStyles","root","border","borderRadius","backgroundColor","paddingLeft","paddingTop","paddingBottom","paddingRight","leftItems","fontSize","fontWeight","marginBottom","display","alignItems","marginRight","height","width","helpText","classes","iconComponent","title","help","className","container","item","xs","padding","margin","textDecoration","cursor","color","palette","info","main","fontFamily","children","rest","searchField","adornment","placeholder","onChange","adornmentPosition","overrideClass","value","inputProps","disableUnderline","position","id","label","InputProps","e","target","variant","onConfirm","onClose","serviceName","status","ConfirmDialog","confirmText","isOpen","titleIcon","isLoading","confirmationContent","DialogContentText","actionsTray","settingsCommon","containerForHeader","spacing","twHeight","minHeight","tableBlock","tableStyles","rightActionItems","whiteSpace","maxWidth","dispatch","useAppDispatch","navigate","useNavigate","useState","records","setRecords","filter","setFilter","setIsLoading","isDelConfirmOpen","setIsDelConfirmOpen","selNotifyEndPoint","setSelNotifyEndpoint","useEffect","api","then","res","resNotEndList","notification_endpoints","notificationTransform","catch","err","setErrorSnackMessage","tableActions","type","onClick","record","filteredRecords","b","service_name","indexOf","Fragment","PageLayout","Grid","SearchBox","TooltipWrapper","tooltip","icon","IAM_PAGES","LinearProgress","length","TableWrapper","itemActions","columns","elementKey","renderFunction","style","FiberManualRecord","red","entityName","idField","customPaperHeight","HelpBox","href","rel","justifyContent","alignContent","AButton","ep","name","configKey","getNotificationConfigKey","accountId","account_id","setServerNeedsRestart","console","log","resetNotificationConfig","notifyPostgres","notifyMysql","notifyKafka","notifyAmqp","notifyMqtt","notifyRedis","notifyNats","notifyElasticsearch","notifyWebhooks","notifyNsq","notificationElements","map","element","service","servicesList","actionTrigger","targetTitle","logo","commonFields","required","removeEmptyFields","formFields","field","notificationEndpointsFields","serviceToConfigMap","webhook","amqp","kafka","mqtt","nats","nsq","mysql","postgresql","elasticsearch","redis","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","cx","cy","r","createSvgIcon","_jsx","getCheckboxUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CheckboxRoot","styled","SwitchBase","shouldForwardProp","prop","rootShouldForwardProp","overridesResolver","props","styles","ownerState","indeterminate","capitalize","_extends","vars","text","secondary","disableRipple","action","activeChannel","primary","mainChannel","hoverOpacity","alpha","active","checkboxClasses","disabled","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","React","inProps","ref","_icon$props$fontSize","_indeterminateIcon$pr","useThemeProps","checkedIcon","iconProp","indeterminateIcon","indeterminateIconProp","size","other","_objectWithoutPropertiesLoose","slots","composedClasses","composeClasses","useUtilityClasses","clsx","baseGetTag","isArray","isObjectLike","module"],"sourceRoot":""}