{"version":3,"file":"static/js/1604.6758414b.chunk.js","mappings":"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","sources":["screens/Console/Buckets/BucketDetails/SetRetentionConfig.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Loader } from \"mds\";\nimport { LinearProgress } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalStyleUtils,\n  spacingUtils,\n} from \"../../Common/FormComponents/common/styleLibrary\";\n\nimport {\n  ErrorResponseHandler,\n  IRetentionConfig,\n} from \"../../../../common/types\";\nimport api from \"../../../../common/api\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport RadioGroupSelector from \"../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { setModalErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...spacingUtils,\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalStyleUtils,\n  });\n\ninterface ISetRetentionConfigProps {\n  classes: any;\n  open: boolean;\n  bucketName: string;\n  closeModalAndRefresh: () => void;\n}\n\nconst SetRetentionConfig = ({\n  classes,\n  open,\n  bucketName,\n  closeModalAndRefresh,\n}: ISetRetentionConfigProps) => {\n  const dispatch = useAppDispatch();\n  const [addLoading, setAddLoading] = useState<boolean>(false);\n  const [loadingForm, setLoadingForm] = useState<boolean>(true);\n  const [retentionMode, setRetentionMode] = useState<string>(\"compliance\");\n  const [retentionUnit, setRetentionUnit] = useState<string>(\"days\");\n  const [retentionValidity, setRetentionValidity] = useState<number>(1);\n  const [valid, setValid] = useState<boolean>(false);\n\n  const setRetention = (event: React.FormEvent) => {\n    event.preventDefault();\n    if (addLoading) {\n      return;\n    }\n    setAddLoading(true);\n    api\n      .invoke(\"PUT\", `/api/v1/buckets/${bucketName}/retention`, {\n        mode: retentionMode,\n        unit: retentionUnit,\n        validity: retentionValidity,\n      })\n      .then(() => {\n        setAddLoading(false);\n        closeModalAndRefresh();\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setAddLoading(false);\n        dispatch(setModalErrorSnackMessage(err));\n      });\n  };\n\n  useEffect(() => {\n    if (Number.isNaN(retentionValidity) || retentionValidity < 1) {\n      setValid(false);\n      return;\n    }\n    setValid(true);\n  }, [retentionValidity]);\n\n  useEffect(() => {\n    if (loadingForm) {\n      api\n        .invoke(\"GET\", `/api/v1/buckets/${bucketName}/retention`)\n        .then((res: IRetentionConfig) => {\n          setLoadingForm(false);\n\n          // We set default values\n          setRetentionMode(res.mode);\n          setRetentionValidity(res.validity);\n          setRetentionUnit(res.unit);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setLoadingForm(false);\n        });\n    }\n  }, [loadingForm, bucketName]);\n\n  return (\n    <ModalWrapper\n      title=\"Set Retention Configuration\"\n      modalOpen={open}\n      onClose={() => {\n        closeModalAndRefresh();\n      }}\n    >\n      {loadingForm ? (\n        <Loader style={{ width: 16, height: 16 }} />\n      ) : (\n        <form\n          noValidate\n          autoComplete=\"off\"\n          onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n            setRetention(e);\n          }}\n        >\n          <Grid container>\n            <Grid item xs={12} className={classes.modalFormScrollable}>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <RadioGroupSelector\n                  currentSelection={retentionMode}\n                  id=\"retention_mode\"\n                  name=\"retention_mode\"\n                  label=\"Retention Mode\"\n                  onChange={(e: React.ChangeEvent<{ value: unknown }>) => {\n                    setRetentionMode(e.target.value as string);\n                  }}\n                  selectorOptions={[\n                    { value: \"compliance\", label: \"Compliance\" },\n                    { value: \"governance\", label: \"Governance\" },\n                  ]}\n                />\n              </Grid>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <RadioGroupSelector\n                  currentSelection={retentionUnit}\n                  id=\"retention_unit\"\n                  name=\"retention_unit\"\n                  label=\"Retention Unit\"\n                  onChange={(e: React.ChangeEvent<{ value: unknown }>) => {\n                    setRetentionUnit(e.target.value as string);\n                  }}\n                  selectorOptions={[\n                    { value: \"days\", label: \"Days\" },\n                    { value: \"years\", label: \"Years\" },\n                  ]}\n                />\n              </Grid>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBoxWrapper\n                  type=\"number\"\n                  id=\"retention_validity\"\n                  name=\"retention_validity\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setRetentionValidity(e.target.valueAsNumber);\n                  }}\n                  label=\"Retention Validity\"\n                  value={String(retentionValidity)}\n                  required\n                  min=\"1\"\n                />\n              </Grid>\n            </Grid>\n            <Grid item xs={12} className={classes.modalButtonBar}>\n              <Button\n                id={\"cancel\"}\n                type=\"button\"\n                variant=\"regular\"\n                disabled={addLoading}\n                onClick={() => {\n                  closeModalAndRefresh();\n                }}\n                label={\"Cancel\"}\n              />\n              <Button\n                id={\"set\"}\n                type=\"submit\"\n                variant=\"callAction\"\n                color=\"primary\"\n                disabled={addLoading || !valid}\n                label={\"Set\"}\n              />\n            </Grid>\n            {addLoading && (\n              <Grid item xs={12}>\n                <LinearProgress />\n              </Grid>\n            )}\n          </Grid>\n        </form>\n      )}\n    </ModalWrapper>\n  );\n};\n\nexport default withStyles(styles)(SetRetentionConfig);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  deleteDialogStyles,\n  snackBarCommon,\n} from \"../FormComponents/common/styleLibrary\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport MainError from \"../MainError/MainError\";\nimport { setModalSnackMessage } from \"../../../../systemSlice\";\n\ninterface IModalProps {\n  classes: any;\n  onClose: () => void;\n  modalOpen: boolean;\n  title: string | React.ReactNode;\n  children: any;\n  wideLimit?: boolean;\n  noContentPadding?: boolean;\n  titleIcon?: React.ReactNode;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...deleteDialogStyles,\n    content: {\n      padding: 25,\n      paddingBottom: 0,\n    },\n    customDialogSize: {\n      width: \"100%\",\n      maxWidth: 765,\n    },\n    ...snackBarCommon,\n  });\n\nconst ModalWrapper = ({\n  onClose,\n  modalOpen,\n  title,\n  children,\n  classes,\n  wideLimit = true,\n  noContentPadding,\n  titleIcon = null,\n}: IModalProps) => {\n  const dispatch = useAppDispatch();\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  const modalSnackMessage = useSelector(\n    (state: AppState) => state.system.modalSnackBar\n  );\n\n  useEffect(() => {\n    dispatch(setModalSnackMessage(\"\"));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (modalSnackMessage) {\n      if (modalSnackMessage.message === \"\") {\n        setOpenSnackbar(false);\n        return;\n      }\n      // Open SnackBar\n      if (modalSnackMessage.type !== \"error\") {\n        setOpenSnackbar(true);\n      }\n    }\n  }, [modalSnackMessage]);\n\n  const closeSnackBar = () => {\n    setOpenSnackbar(false);\n    dispatch(setModalSnackMessage(\"\"));\n  };\n\n  const customSize = wideLimit\n    ? {\n        classes: {\n          paper: classes.customDialogSize,\n        },\n      }\n    : { maxWidth: \"lg\" as const, fullWidth: true };\n\n  let message = \"\";\n\n  if (modalSnackMessage) {\n    message = modalSnackMessage.detailedErrorMsg;\n    if (\n      modalSnackMessage.detailedErrorMsg === \"\" ||\n      modalSnackMessage.detailedErrorMsg.length < 5\n    ) {\n      message = modalSnackMessage.message;\n    }\n  }\n\n  return (\n    <Dialog\n      open={modalOpen}\n      classes={classes}\n      {...customSize}\n      scroll={\"paper\"}\n      onClose={(event, reason) => {\n        if (reason !== \"backdropClick\") {\n          onClose(); // close on Esc but not on click outside\n        }\n      }}\n      className={classes.root}\n    >\n      <DialogTitle className={classes.title}>\n        <div className={classes.titleText}>\n          {titleIcon} {title}\n        </div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            id={\"close\"}\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <MainError isModal={true} />\n      <Snackbar\n        open={openSnackbar}\n        className={classes.snackBarModal}\n        onClose={() => {\n          closeSnackBar();\n        }}\n        message={message}\n        ContentProps={{\n          className: `${classes.snackBar} ${\n            modalSnackMessage && modalSnackMessage.type === \"error\"\n              ? classes.errorSnackBar\n              : \"\"\n          }`,\n        }}\n        autoHideDuration={\n          modalSnackMessage && modalSnackMessage.type === \"error\" ? 10000 : 5000\n        }\n      />\n      <DialogContent className={noContentPadding ? \"\" : classes.content}>\n        {children}\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default withStyles(styles)(ModalWrapper);\n"],"names":["withStyles","theme","createStyles","spacingUtils","createTenantCommon","formFieldStyles","modalStyleUtils","classes","open","bucketName","closeModalAndRefresh","dispatch","useAppDispatch","useState","addLoading","setAddLoading","loadingForm","setLoadingForm","retentionMode","setRetentionMode","retentionUnit","setRetentionUnit","retentionValidity","setRetentionValidity","valid","setValid","useEffect","Number","isNaN","api","then","res","mode","validity","unit","catch","err","title","modalOpen","onClose","style","width","height","noValidate","autoComplete","onSubmit","e","preventDefault","setModalErrorSnackMessage","container","item","xs","className","modalFormScrollable","formFieldRow","currentSelection","id","name","label","onChange","target","value","selectorOptions","type","valueAsNumber","String","required","min","modalButtonBar","variant","disabled","onClick","color","deleteDialogStyles","content","padding","paddingBottom","customDialogSize","maxWidth","snackBarCommon","children","wideLimit","noContentPadding","titleIcon","openSnackbar","setOpenSnackbar","modalSnackMessage","useSelector","state","system","modalSnackBar","setModalSnackMessage","message","customSize","paper","fullWidth","detailedErrorMsg","length","scroll","event","reason","root","titleText","closeContainer","closeButton","disableRipple","size","isModal","snackBarModal","ContentProps","snackBar","errorSnackBar","autoHideDuration"],"sourceRoot":""}