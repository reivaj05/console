{"version":3,"file":"static/js/8350.70bb0791.chunk.js","mappings":"2JA0DA,KAAeA,EAAAA,EAAAA,IA/BA,SAACC,GAAY,OAC1BC,EAAAA,EAAAA,GAAa,CACXC,gBAAiB,CACfC,gBAAiB,UACjBC,aAAc,EACdC,aAAc,GACdC,QAAS,EACTC,cAAe,IAEjBC,cAAe,CACbC,MAAO,UACPC,SAAU,GACVC,WAAY,IAEdC,UAAW,CACTH,MAAO,UACPC,SAAU,GACVC,WAAY,GACZE,YAAa,KAEd,GAWL,EATuB,SAAH,GAAoD,IAA9CC,EAAO,EAAPA,QAASC,EAAK,EAALA,MAAOC,EAAK,EAALA,MACxC,OACE,iBAAKC,UAAWH,EAAQZ,gBAAgB,WACtC,eAAIe,UAAWH,EAAQN,cAAc,SAAEQ,KACvC,gBAAKC,UAAWH,EAAQF,UAAU,SAAEG,MAG1C,G,iLCkEA,UArFqB,SAAH,GAII,IAHpBG,EAAU,EAAVA,WACAC,EAAc,EAAdA,eACAC,EAA0B,EAA1BA,2BAEMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,UAAS,IAAG,eAA7CC,EAAY,KAAEC,EAAe,KAOpC,GAA0CF,EAAAA,EAAAA,WAAkB,GAAM,eAA3DG,EAAa,KAAEC,EAAgB,KAEtC,GAAyCC,EAAAA,EAAAA,IAPpB,WAAH,OAASR,GAA2B,EAAM,IACzC,SAACS,GAAyB,OAC3CR,GAASS,EAAAA,EAAAA,IAAqBD,GAAM,IAKmC,eAAlEE,EAAa,KAAEC,EAAe,KAiBrC,OACE,SAAC,IAAa,CACZhB,MAAK,gBACLiB,YAAa,SACbC,OAAQhB,EACRiB,WAAW,SAAC,MAAiB,IAC7BC,UAAWL,EACXM,UAtBoB,WAClBb,IAAiBL,EAAemB,KAOpCN,EACE,SAAS,sBAAD,OACcb,EAAeoB,UAAS,oBAAYpB,EAAemB,MACzE,CAAEE,YAAad,KATfI,EAAAA,EAAAA,IAAqB,CACnBW,aAAc,2BACdC,cAAe,IASrB,EAUIC,QA7BY,WAAH,OAASvB,GAA2B,EAAO,EA8BpDwB,mBAAoB,CAClBC,SAAUrB,IAAiBL,EAAemB,MAAQP,GAEpDe,qBACE,UAAC,IAAiB,WACfpB,IACC,SAAC,KAAI,CAACqB,MAAI,EAACC,GAAI,GAAG,UAChB,SAAC,IAAc,CACbhC,MAAO,UACPD,MACE,qFAIN,4BACsB,uBAAII,EAAemB,OAAS,gBACpD,UAAC,KAAI,CAACS,MAAI,EAACC,GAAI,GAAG,WAChB,SAAC,IAAe,CACdC,GAAG,gBACHX,KAAK,gBACLY,SAAU,SAACC,GACT1B,EAAgB0B,EAAMC,OAAOC,MAC/B,EACAtC,MAAM,GACNsC,MAAO7B,KAET,mBACA,SAAC,IAAiB,CAChB8B,QAAS5B,EACTuB,GAAE,iBACFlC,MAAO,iBACPuB,KAAI,iBACJY,SAAU,WACRvB,GAAkBD,EACpB,EACA2B,MAAO3B,WAOrB,C","sources":["screens/Console/Common/WarningMessage/WarningMessage.tsx","screens/Console/Tenants/ListTenants/DeleteTenant.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\n\ninterface IWarningMessage {\n  classes: any;\n  label: any;\n  title: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    headerContainer: {\n      backgroundColor: \"#e78794\",\n      borderRadius: 3,\n      marginBottom: 20,\n      padding: 1,\n      paddingBottom: 15,\n    },\n    labelHeadline: {\n      color: \"#000000\",\n      fontSize: 14,\n      marginLeft: 20,\n    },\n    labelText: {\n      color: \"#000000\",\n      fontSize: 14,\n      marginLeft: 20,\n      marginRight: 40,\n    },\n  });\n\nconst WarningMessage = ({ classes, label, title }: IWarningMessage) => {\n  return (\n    <div className={classes.headerContainer}>\n      <h4 className={classes.labelHeadline}>{title}</h4>\n      <div className={classes.labelText}>{label}</div>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(WarningMessage);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState } from \"react\";\nimport { DialogContentText } from \"@mui/material\";\nimport { ITenant } from \"./types\";\n\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport Grid from \"@mui/material/Grid\";\nimport useApi from \"../../Common/Hooks/useApi\";\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\nimport { ConfirmDeleteIcon } from \"mds\";\nimport WarningMessage from \"../../Common/WarningMessage/WarningMessage\";\nimport FormSwitchWrapper from \"../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\n\ninterface IDeleteTenant {\n  deleteOpen: boolean;\n  selectedTenant: ITenant;\n  closeDeleteModalAndRefresh: (refreshList: boolean) => any;\n}\n\nconst DeleteTenant = ({\n  deleteOpen,\n  selectedTenant,\n  closeDeleteModalAndRefresh,\n}: IDeleteTenant) => {\n  const dispatch = useAppDispatch();\n  const [retypeTenant, setRetypeTenant] = useState(\"\");\n\n  const onDelSuccess = () => closeDeleteModalAndRefresh(true);\n  const onDelError = (err: ErrorResponseHandler) =>\n    dispatch(setErrorSnackMessage(err));\n  const onClose = () => closeDeleteModalAndRefresh(false);\n\n  const [deleteVolumes, setDeleteVolumes] = useState<boolean>(false);\n\n  const [deleteLoading, invokeDeleteApi] = useApi(onDelSuccess, onDelError);\n\n  const onConfirmDelete = () => {\n    if (retypeTenant !== selectedTenant.name) {\n      setErrorSnackMessage({\n        errorMessage: \"Tenant name is incorrect\",\n        detailedError: \"\",\n      });\n      return;\n    }\n    invokeDeleteApi(\n      \"DELETE\",\n      `/api/v1/namespaces/${selectedTenant.namespace}/tenants/${selectedTenant.name}`,\n      { delete_pvcs: deleteVolumes }\n    );\n  };\n\n  return (\n    <ConfirmDialog\n      title={`Delete Tenant`}\n      confirmText={\"Delete\"}\n      isOpen={deleteOpen}\n      titleIcon={<ConfirmDeleteIcon />}\n      isLoading={deleteLoading}\n      onConfirm={onConfirmDelete}\n      onClose={onClose}\n      confirmButtonProps={{\n        disabled: retypeTenant !== selectedTenant.name || deleteLoading,\n      }}\n      confirmationContent={\n        <DialogContentText>\n          {deleteVolumes && (\n            <Grid item xs={12}>\n              <WarningMessage\n                title={\"WARNING\"}\n                label={\n                  \"Delete Volumes: Data will be permanently deleted. Please proceed with caution.\"\n                }\n              />\n            </Grid>\n          )}\n          To continue please type <b>{selectedTenant.name}</b> in the box.\n          <Grid item xs={12}>\n            <InputBoxWrapper\n              id=\"retype-tenant\"\n              name=\"retype-tenant\"\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                setRetypeTenant(event.target.value);\n              }}\n              label=\"\"\n              value={retypeTenant}\n            />\n            <br />\n            <FormSwitchWrapper\n              checked={deleteVolumes}\n              id={`delete-volumes`}\n              label={\"Delete Volumes\"}\n              name={`delete-volumes`}\n              onChange={() => {\n                setDeleteVolumes(!deleteVolumes);\n              }}\n              value={deleteVolumes}\n            />\n          </Grid>\n        </DialogContentText>\n      }\n    />\n  );\n};\n\nexport default DeleteTenant;\n"],"names":["withStyles","theme","createStyles","headerContainer","backgroundColor","borderRadius","marginBottom","padding","paddingBottom","labelHeadline","color","fontSize","marginLeft","labelText","marginRight","classes","label","title","className","deleteOpen","selectedTenant","closeDeleteModalAndRefresh","dispatch","useAppDispatch","useState","retypeTenant","setRetypeTenant","deleteVolumes","setDeleteVolumes","useApi","err","setErrorSnackMessage","deleteLoading","invokeDeleteApi","confirmText","isOpen","titleIcon","isLoading","onConfirm","name","namespace","delete_pvcs","errorMessage","detailedError","onClose","confirmButtonProps","disabled","confirmationContent","item","xs","id","onChange","event","target","value","checked"],"sourceRoot":""}