{"version":3,"file":"static/js/5367.12b9d328.chunk.js","mappings":"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","sources":["screens/Console/Tenants/TenantDetails/EditTenantMonitoringScreen.tsx","screens/Console/Tenants/TenantDetails/KeyPairEdit.tsx","screens/Console/Tenants/securityContextSelector.tsx","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/Delete.js"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport { Button } from \"mds\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  containerForHeader,\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  spacingUtils,\n  tenantDetailsStyles,\n  wizardCommon,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport api from \"../../../../common/api\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport { useParams } from \"react-router-dom\";\nimport FormSwitchWrapper from \"../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport Grid from \"@mui/material/Grid\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { DialogContentText } from \"@mui/material\";\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\nimport {\n  setErrorSnackMessage,\n  setSnackBarMessage,\n} from \"../../../../systemSlice\";\nimport { IKeyValue } from \"../ListTenants/types\";\nimport KeyPairEdit from \"./KeyPairEdit\";\nimport InputUnitMenu from \"../../Common/FormComponents/InputUnitMenu/InputUnitMenu\";\nimport { ITenantMonitoringStruct } from \"../ListTenants/types\";\nimport {\n  setPrometheusEnabled,\n  setImage,\n  setSidecarImage,\n  setInitImage,\n  setStorageClassName,\n  setDiskCapacityGB,\n  setServiceAccountName,\n  setCPURequest,\n  setMemRequest,\n  setRunAsGroup,\n  setFSGroup,\n  setRunAsUser,\n  setRunAsNonRoot,\n} from \"../TenantDetails/tenantMonitoringSlice\";\nimport { clearValidationError, imagePattern, numericPattern } from \"../utils\";\nimport SecurityContextSelector from \"../securityContextSelector\";\nimport { setFSGroupChangePolicy } from \"../tenantSecurityContextSlice\";\nimport { fsGroupChangePolicyType } from \"../types\";\n\ninterface ITenantMonitoring {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...tenantDetailsStyles,\n    ...spacingUtils,\n    bold: { fontWeight: \"bold\" },\n    italic: { fontStyle: \"italic\" },\n    fileItem: {\n      marginRight: 10,\n      display: \"flex\",\n      \"& div label\": {\n        minWidth: 50,\n      },\n\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n      },\n    },\n    ...containerForHeader(theme.spacing(4)),\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst TenantMonitoring = ({ classes }: ITenantMonitoring) => {\n  const dispatch = useAppDispatch();\n  const { tenantName, tenantNamespace } = useParams();\n  const prometheusEnabled = useSelector(\n    (state: AppState) => state.editTenantMonitoring.prometheusEnabled\n  );\n  const image = useSelector(\n    (state: AppState) => state.editTenantMonitoring.image\n  );\n  const sidecarImage = useSelector(\n    (state: AppState) => state.editTenantMonitoring.sidecarImage\n  );\n  const initImage = useSelector(\n    (state: AppState) => state.editTenantMonitoring.initImage\n  );\n  const diskCapacityGB = useSelector(\n    (state: AppState) => state.editTenantMonitoring.diskCapacityGB\n  );\n  const cpuRequest = useSelector(\n    (state: AppState) => state.editTenantMonitoring.monitoringCPURequest\n  );\n  const memRequest = useSelector(\n    (state: AppState) => state.editTenantMonitoring.monitoringMemRequest\n  );\n  const serviceAccountName = useSelector(\n    (state: AppState) => state.editTenantMonitoring.serviceAccountName\n  );\n  const storageClassName = useSelector(\n    (state: AppState) => state.editTenantMonitoring.storageClassName\n  );\n  const [validationErrors, setValidationErrors] = useState<any>({});\n  const [toggleConfirmOpen, setToggleConfirmOpen] = useState<boolean>(false);\n\n  const [labels, setLabels] = useState<IKeyValue[]>([{ key: \"\", value: \"\" }]);\n  const [annotations, setAnnotations] = useState<IKeyValue[]>([\n    { key: \"\", value: \"\" },\n  ]);\n  const [nodeSelector, setNodeSelector] = useState<IKeyValue[]>([\n    { key: \"\", value: \"\" },\n  ]);\n\n  const [refreshMonitoringInfo, setRefreshMonitoringInfo] =\n    useState<boolean>(true);\n  const [labelsError, setLabelsError] = useState<any>({});\n  const [annotationsError, setAnnotationsError] = useState<any>({});\n  const [nodeSelectorError, setNodeSelectorError] = useState<any>({});\n\n  const runAsGroup = useSelector(\n    (state: AppState) => state.editTenantMonitoring.runAsGroup\n  );\n  const runAsUser = useSelector(\n    (state: AppState) => state.editTenantMonitoring.runAsUser\n  );\n  const fsGroup = useSelector(\n    (state: AppState) => state.editTenantMonitoring.fsGroup\n  );\n  const runAsNonRoot = useSelector(\n    (state: AppState) => state.editTenantMonitoring.runAsNonRoot\n  );\n  const fsGroupChangePolicy = useSelector(\n    (state: AppState) => state.editTenantSecurityContext.fsGroupChangePolicy\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  const setMonitoringInfo = (res: ITenantMonitoringStruct) => {\n    dispatch(setImage(res.image));\n    dispatch(setSidecarImage(res.sidecarImage));\n    dispatch(setInitImage(res.initImage));\n    dispatch(setStorageClassName(res.storageClassName));\n    dispatch(setDiskCapacityGB(res.diskCapacityGB));\n    dispatch(setServiceAccountName(res.serviceAccountName));\n    dispatch(setCPURequest(res.monitoringCPURequest));\n    if (res.monitoringMemRequest) {\n      dispatch(\n        setMemRequest(\n          Math.floor(\n            parseInt(res.monitoringMemRequest, 10) / 1000000000\n          ).toString()\n        )\n      );\n    } else {\n      dispatch(setMemRequest(\"0\"));\n    }\n    res.labels != null\n      ? setLabels(res.labels)\n      : setLabels([{ key: \"\", value: \"\" }]);\n    res.annotations != null\n      ? setAnnotations(res.annotations)\n      : setAnnotations([{ key: \"\", value: \"\" }]);\n    res.nodeSelector != null\n      ? setNodeSelector(res.nodeSelector)\n      : setNodeSelector([{ key: \"\", value: \"\" }]);\n    dispatch(setRunAsGroup(res.securityContext.runAsGroup));\n    dispatch(setRunAsUser(res.securityContext.runAsUser));\n    dispatch(setRunAsNonRoot(res.securityContext.runAsNonRoot));\n    dispatch(setFSGroup(res.securityContext.fsGroup));\n  };\n\n  const trim = (x: IKeyValue[]): IKeyValue[] => {\n    let retval: IKeyValue[] = [];\n    for (let i = 0; i < x.length; i++) {\n      if (x[i].key !== \"\") {\n        retval.push(x[i]);\n      }\n    }\n    return retval;\n  };\n\n  const checkValid = (): boolean => {\n    if (\n      Object.keys(validationErrors).length !== 0 ||\n      Object.keys(labelsError).length !== 0 ||\n      Object.keys(annotationsError).length !== 0 ||\n      Object.keys(nodeSelectorError).length !== 0\n    ) {\n      let err: ErrorResponseHandler = {\n        errorMessage: \"Invalid entry\",\n        detailedError: \"\",\n      };\n      dispatch(setErrorSnackMessage(err));\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  useEffect(() => {\n    if (refreshMonitoringInfo) {\n      api\n        .invoke(\n          \"GET\",\n          `/api/v1/namespaces/${tenantNamespace || \"\"}/tenants/${\n            tenantName || \"\"\n          }/monitoring`\n        )\n        .then((res: ITenantMonitoringStruct) => {\n          dispatch(setPrometheusEnabled(res.prometheusEnabled));\n          setMonitoringInfo(res);\n          setRefreshMonitoringInfo(false);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          dispatch(setErrorSnackMessage(err));\n          setRefreshMonitoringInfo(false);\n        });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [refreshMonitoringInfo]);\n\n  const submitMonitoringInfo = () => {\n    if (checkValid()) {\n      const securityContext = {\n        runAsGroup: runAsGroup != null ? runAsGroup : \"0\",\n        runAsUser: runAsUser != null ? runAsUser : \"0\",\n        fsGroup: fsGroup != null ? fsGroup : \"0\",\n        runAsNonRoot: runAsNonRoot != null ? runAsNonRoot : true,\n      };\n      api\n        .invoke(\n          \"PUT\",\n          `/api/v1/namespaces/${tenantNamespace}/tenants/${tenantName}/monitoring`,\n          {\n            labels: trim(labels),\n            annotations: trim(annotations),\n            nodeSelector: trim(nodeSelector),\n            image: image,\n            sidecarImage: sidecarImage,\n            initImage: initImage,\n            diskCapacityGB: diskCapacityGB,\n            serviceAccountName: serviceAccountName,\n            storageClassName: storageClassName,\n            monitoringCPURequest: cpuRequest,\n            monitoringMemRequest: memRequest + \"Gi\",\n            securityContext: securityContext,\n          }\n        )\n        .then(() => {\n          setRefreshMonitoringInfo(true);\n          dispatch(setSnackBarMessage(`Prometheus configuration updated.`));\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setErrorSnackMessage(err);\n        });\n    }\n  };\n\n  const togglePrometheus = () => {\n    const configInfo = {\n      prometheusEnabled: prometheusEnabled,\n      toggle: true,\n    };\n    api\n      .invoke(\n        \"PUT\",\n        `/api/v1/namespaces/${tenantNamespace}/tenants/${tenantName}/monitoring`,\n        configInfo\n      )\n      .then(() => {\n        dispatch(setPrometheusEnabled(!prometheusEnabled));\n        setRefreshMonitoringInfo(true);\n        setToggleConfirmOpen(false);\n        setRefreshMonitoringInfo(true);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        dispatch(setErrorSnackMessage(err));\n      });\n  };\n\n  return (\n    <Fragment>\n      {toggleConfirmOpen && (\n        <ConfirmDialog\n          isOpen={toggleConfirmOpen}\n          title={\n            !prometheusEnabled\n              ? \"Enable Prometheus monitoring for this tenant?\"\n              : \"Disable Prometheus monitoring for this tenant?\"\n          }\n          confirmText={!prometheusEnabled ? \"Enable\" : \"Disable\"}\n          cancelText=\"Cancel\"\n          onClose={() => setToggleConfirmOpen(false)}\n          onConfirm={togglePrometheus}\n          confirmationContent={\n            <DialogContentText>\n              {!prometheusEnabled\n                ? \"A small Prometheus server will be started per the configuration provided, which will collect the Prometheus metrics for your tenant.\"\n                : \" Current configuration will be lost, and defaults reset if reenabled.\"}\n            </DialogContentText>\n          }\n        />\n      )}\n      <Grid container spacing={1}>\n        <Grid item xs>\n          <h1 className={classes.sectionTitle}>Prometheus Monitoring </h1>\n        </Grid>\n        <Grid item xs={7} justifyContent={\"end\"} textAlign={\"right\"}>\n          <FormSwitchWrapper\n            label={\"\"}\n            indicatorLabels={[\"Enabled\", \"Disabled\"]}\n            checked={prometheusEnabled}\n            value={\"tenant_monitoring\"}\n            id=\"tenant-monitoring\"\n            name=\"tenant-monitoring\"\n            onChange={() => {\n              setToggleConfirmOpen(true);\n            }}\n            description=\"\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <hr className={classes.hrClass} />\n        </Grid>\n      </Grid>\n\n      {prometheusEnabled && (\n        <Fragment>\n          <Grid item xs={12} paddingBottom={2}>\n            <InputBoxWrapper\n              id={`prometheus_image`}\n              label={\"Image\"}\n              placeholder={\"quay.io/prometheus/prometheus:latest\"}\n              name={`image`}\n              value={image}\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                if (event.target.validity.valid) {\n                  dispatch(setImage(event.target.value));\n                }\n                cleanValidation(`image`);\n              }}\n              key={`image`}\n              pattern={imagePattern}\n              error={validationErrors[`image`] || \"\"}\n            />\n          </Grid>\n          <Grid item xs={12} paddingBottom={2}>\n            <InputBoxWrapper\n              id={`sidecarImage`}\n              label={\"Sidecar Image\"}\n              placeholder={\"library/alpine:latest\"}\n              name={`sidecarImage`}\n              value={sidecarImage}\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                if (event.target.validity.valid) {\n                  dispatch(setSidecarImage(event.target.value));\n                }\n                cleanValidation(`sidecarImage`);\n              }}\n              key={`sidecarImage`}\n              pattern={imagePattern}\n              error={validationErrors[`sidecarImage`] || \"\"}\n            />\n          </Grid>\n          <Grid item xs={12} paddingBottom={2}>\n            <InputBoxWrapper\n              id={`initImage`}\n              label={\"Init Image\"}\n              placeholder={\"library/busybox:1.33.1\"}\n              name={`initImage`}\n              value={initImage}\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                if (event.target.validity.valid) {\n                  dispatch(setInitImage(event.target.value));\n                }\n                cleanValidation(`initImage`);\n              }}\n              key={`initImage`}\n              pattern={imagePattern}\n              error={validationErrors[`initImage`] || \"\"}\n            />\n          </Grid>\n          <Grid item xs={12} paddingBottom={2}>\n            <InputBoxWrapper\n              id={`diskCapacityGB`}\n              label={\"Disk Capacity\"}\n              placeholder={\"Disk Capacity\"}\n              name={`diskCapacityGB`}\n              value={diskCapacityGB}\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                if (event.target.validity.valid) {\n                  dispatch(setDiskCapacityGB(event.target.value));\n                }\n                cleanValidation(`diskCapacityGB`);\n              }}\n              key={`diskCapacityGB`}\n              pattern={numericPattern}\n              error={validationErrors[`diskCapacityGB`] || \"\"}\n              overlayObject={\n                <InputUnitMenu\n                  id={\"size-unit\"}\n                  onUnitChange={() => {}}\n                  unitSelected={\"Gi\"}\n                  unitsList={[{ label: \"Gi\", value: \"Gi\" }]}\n                  disabled={true}\n                />\n              }\n            />\n          </Grid>\n          <Grid item xs={12} paddingBottom={2}>\n            <InputBoxWrapper\n              id={`cpuRequest`}\n              label={\"CPU Request\"}\n              placeholder={\"CPU Request\"}\n              name={`cpuRequest`}\n              value={cpuRequest}\n              pattern={numericPattern}\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                if (event.target.validity.valid) {\n                  dispatch(setCPURequest(event.target.value));\n                }\n                cleanValidation(`cpuRequest`);\n              }}\n              key={`cpuRequest`}\n              error={validationErrors[`cpuRequest`] || \"\"}\n            />\n          </Grid>\n          <Grid item xs={12} paddingBottom={2}>\n            <InputBoxWrapper\n              id={`memRequest`}\n              label={\"Memory Request\"}\n              placeholder={\"Memory request\"}\n              name={`memRequest`}\n              value={memRequest}\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                if (event.target.validity.valid) {\n                  dispatch(setMemRequest(event.target.value));\n                }\n                cleanValidation(`memRequest`);\n              }}\n              pattern={numericPattern}\n              key={`memRequest`}\n              error={validationErrors[`memRequest`] || \"\"}\n              overlayObject={\n                <InputUnitMenu\n                  id={\"size-unit\"}\n                  onUnitChange={() => {}}\n                  unitSelected={\"Gi\"}\n                  unitsList={[{ label: \"Gi\", value: \"Gi\" }]}\n                  disabled={true}\n                />\n              }\n            />\n          </Grid>\n          <Grid item xs={12} paddingBottom={2}>\n            <InputBoxWrapper\n              id={`serviceAccountName`}\n              label={\"Service Account\"}\n              placeholder={\"Service Account Name\"}\n              name={`serviceAccountName`}\n              value={serviceAccountName}\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                if (event.target.validity.valid) {\n                  dispatch(setServiceAccountName(event.target.value));\n                }\n                cleanValidation(`serviceAccountName`);\n              }}\n              key={`serviceAccountName`}\n              pattern={\"^[a-zA-Z0-9-.]{1,253}$\"}\n              error={validationErrors[`serviceAccountName`] || \"\"}\n            />\n          </Grid>\n          <Grid item xs={12} paddingBottom={2}>\n            <InputBoxWrapper\n              id={`storageClassName`}\n              label={\"Storage Class\"}\n              placeholder={\"Storage Class Name\"}\n              name={`storageClassName`}\n              value={storageClassName}\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                if (event.target.validity.valid) {\n                  dispatch(setStorageClassName(event.target.value));\n                }\n                cleanValidation(`storageClassName`);\n              }}\n              key={`storageClassName`}\n              pattern={\"^[a-zA-Z0-9-.]{1,253}$\"}\n              error={validationErrors[`storageClassName`] || \"\"}\n            />\n          </Grid>\n          {labels !== null && (\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <span className={classes.inputLabel}>Labels</span>\n              <KeyPairEdit\n                newValues={labels}\n                setNewValues={setLabels}\n                paramName={\"Labels\"}\n                error={labelsError}\n                setError={setLabelsError}\n              />\n            </Grid>\n          )}\n\n          {annotations !== null && (\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <span className={classes.inputLabel}>Annotations</span>\n              <KeyPairEdit\n                newValues={annotations}\n                setNewValues={setAnnotations}\n                paramName={\"Annotations\"}\n                error={annotationsError}\n                setError={setAnnotationsError}\n              />\n            </Grid>\n          )}\n          {nodeSelector !== null && (\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <span className={classes.inputLabel}>Node Selector</span>\n              <KeyPairEdit\n                newValues={nodeSelector}\n                setNewValues={setNodeSelector}\n                paramName={\"Node Selector\"}\n                error={nodeSelectorError}\n                setError={setNodeSelectorError}\n              />\n            </Grid>\n          )}\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <SecurityContextSelector\n              classes={classes}\n              runAsGroup={runAsGroup}\n              runAsUser={runAsUser}\n              fsGroup={fsGroup}\n              runAsNonRoot={runAsNonRoot}\n              fsGroupChangePolicy={fsGroupChangePolicy}\n              setFSGroup={(value: string) => dispatch(setFSGroup(value))}\n              setRunAsUser={(value: string) => dispatch(setRunAsUser(value))}\n              setRunAsGroup={(value: string) => dispatch(setRunAsGroup(value))}\n              setRunAsNonRoot={(value: boolean) =>\n                dispatch(setRunAsNonRoot(value))\n              }\n              setFSGroupChangePolicy={(value: fsGroupChangePolicyType) =>\n                dispatch(setFSGroupChangePolicy(value))\n              }\n            />\n          </Grid>\n          <Grid\n            item\n            xs={12}\n            sx={{ display: \"flex\", justifyContent: \"flex-end\" }}\n          >\n            <Button\n              type=\"submit\"\n              id={\"submit_button\"}\n              variant=\"callAction\"\n              disabled={!checkValid()}\n              onClick={() => submitMonitoringInfo()}\n              label={\"Save\"}\n            />\n          </Grid>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(TenantMonitoring);\n","import React, { Fragment, useEffect } from \"react\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Theme } from \"@mui/material/styles\";\nimport { modalBasic } from \"../../Common/FormComponents/common/styleLibrary\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { IconButton, Tooltip } from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { IKeyValue } from \"../ListTenants/types\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../utils/validationFunctions\";\nimport { clearValidationError } from \"../utils\";\nimport Grid from \"@mui/material/Grid\";\n\ninterface IKeyPairEditProps {\n  classes: any;\n  paramName: string;\n  error: any;\n  setError: (e: any) => void;\n  newValues: IKeyValue[];\n  setNewValues: (vals: IKeyValue[]) => void;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    bottomContainer: {\n      display: \"flex\",\n      flexGrow: 1,\n      alignItems: \"center\",\n      \"& div\": {\n        flexGrow: 1,\n        width: \"100%\",\n      },\n    },\n    shortened: {\n      gridTemplateColumns: \"auto auto 20px 20px\",\n      display: \"grid\",\n      gridGap: 20,\n      paddingRight: 20,\n    },\n    ...modalBasic,\n  });\n\nconst KeyPairEdit = ({\n  classes,\n  paramName,\n  newValues,\n  setNewValues,\n  error,\n  setError,\n}: IKeyPairEditProps) => {\n  const cleanValidation = (fieldName: string) => {\n    setError(clearValidationError(error, fieldName));\n  };\n\n  useEffect(() => {\n    let keyPairValidation: IValidation[] = [];\n\n    for (var i = 0; i < newValues.length; i++) {\n      keyPairValidation.push({\n        fieldKey: `key-${i.toString()}`,\n        required: false,\n        value: newValues[i].key,\n        pattern: /^[a-zA-Z0-9-_.]{1,63}$/,\n        customPatternMessage: \"Invalid key\",\n      });\n      keyPairValidation.push({\n        fieldKey: `val-${i.toString()}`,\n        required: false,\n        value: newValues[i].value,\n        pattern: /^[a-zA-Z0-9-_.]{1,63}$/,\n        customPatternMessage: \"Invalid value\",\n      });\n    }\n\n    const commonVal = commonFormValidation(keyPairValidation);\n    setError(commonVal);\n  }, [newValues, setError]);\n\n  let keyValueInputs = newValues.map((_, index) => {\n    return (\n      <Fragment key={`keyvalue-${index.toString()}`}>\n        <Grid paddingBottom={1}>\n          <div className={classes.shortened}>\n            <InputBoxWrapper\n              id={`key-${paramName.replace(/ /g, \"\")}-${index.toString()}`}\n              label={\"\"}\n              placeholder={\"Key\"}\n              name={`key-${index.toString()}`}\n              value={newValues[index].key}\n              onChange={(e) => {\n                let tempLabels = [...newValues];\n                tempLabels[index].key = e.target.value;\n                setNewValues(tempLabels);\n                cleanValidation(`key-${index.toString()}`);\n              }}\n              index={index}\n              key={`csv-key-${index.toString()}`}\n              error={error[`key-${index.toString()}`] || \"\"}\n            />\n            <InputBoxWrapper\n              id={`val-${paramName.replace(/ /g, \"\")}-${index.toString()}`}\n              label={\"\"}\n              placeholder={\"Value\"}\n              name={`val-${index.toString()}`}\n              value={newValues[index].value}\n              onChange={(e) => {\n                let tempLabels = [...newValues];\n                tempLabels[index].value = e.target.value;\n                setNewValues(tempLabels);\n                cleanValidation(`val-${index.toString()}`);\n              }}\n              index={index}\n              key={`csv-val-${index.toString()}`}\n              error={error[`val-${index.toString()}`] || \"\"}\n            />\n            <Tooltip title={`Add ${paramName}`} aria-label=\"addlabel\">\n              <IconButton\n                id={`add-${paramName.replace(/ /g, \"\")}-${index.toString()}`}\n                size={\"small\"}\n                onClick={() => {\n                  let tempLabels = [...newValues];\n                  tempLabels.push({ key: \"\", value: \"\" });\n                  setNewValues(tempLabels);\n                }}\n              >\n                <AddIcon />\n              </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Remove\" aria-label=\"removeLabel\">\n              <IconButton\n                id={`remove-${paramName.replace(/ /g, \"\")}-${index.toString()}`}\n                size={\"small\"}\n                style={{ marginLeft: 16 }}\n                onClick={() => {\n                  if (newValues.length === 1) {\n                    setNewValues([{ key: \"\", value: \"\" }]);\n                  }\n                  if (newValues.length > 1) {\n                    let tempLabels = [...newValues];\n                    tempLabels.splice(index, 1);\n                    setNewValues(tempLabels);\n                  }\n                }}\n              >\n                <DeleteIcon />\n              </IconButton>\n            </Tooltip>\n          </div>\n        </Grid>\n      </Fragment>\n    );\n  });\n\n  return <Fragment>{keyValueInputs}</Fragment>;\n};\n\nexport default withStyles(styles)(KeyPairEdit);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport InputBoxWrapper from \"../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport FormSwitchWrapper from \"../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport SelectWrapper from \"../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport { Grid, SelectChangeEvent } from \"@mui/material\";\nimport { useDispatch } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { fsGroupChangePolicyType } from \"./types\";\n\ninterface IEditSecurityContextProps {\n  classes: any;\n  runAsUser: string;\n  runAsGroup: string;\n  fsGroup: string;\n  fsGroupChangePolicy: fsGroupChangePolicyType;\n  runAsNonRoot: boolean;\n  setRunAsUser: any;\n  setRunAsGroup: any;\n  setFSGroup: any;\n  setRunAsNonRoot: any;\n  setFSGroupChangePolicy: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    configSectionItem: {\n      marginRight: 15,\n      marginBottom: 15,\n      \"& .multiContainer\": {\n        border: \"1px solid red\",\n      },\n    },\n  });\n\nconst SecurityContextSelector = ({\n  classes,\n  runAsGroup,\n  runAsUser,\n  fsGroup,\n  fsGroupChangePolicy,\n  runAsNonRoot,\n  setRunAsUser,\n  setRunAsGroup,\n  setFSGroup,\n  setRunAsNonRoot,\n  setFSGroupChangePolicy,\n}: IEditSecurityContextProps) => {\n  const dispatch = useDispatch();\n  return (\n    <Fragment>\n      <fieldset className={`${classes.fieldGroup} ${classes.fieldSpaceTop} `}>\n        <legend className={classes.descriptionText}>Security Context</legend>\n\n        <Grid item xs={12}>\n          <div className={`${classes.multiContainerStackNarrow} `}>\n            <div className={classes.configSectionItem}>\n              <InputBoxWrapper\n                type=\"number\"\n                id=\"securityContext_runAsUser\"\n                name=\"securityContext_runAsUser\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  dispatch(setRunAsUser(e.target.value));\n                }}\n                label=\"Run As User\"\n                value={runAsUser}\n                required\n                min=\"0\"\n              />\n            </div>\n            <div className={classes.configSectionItem}>\n              <InputBoxWrapper\n                type=\"number\"\n                id=\"securityContext_runAsGroup\"\n                name=\"securityContext_runAsGroup\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  dispatch(setRunAsGroup(e.target.value));\n                }}\n                label=\"Run As Group\"\n                value={runAsGroup}\n                required\n                min=\"0\"\n              />\n            </div>\n          </div>\n        </Grid>\n        <Grid item xs={12}>\n          <div className={`${classes.multiContainerStackNarrow} `}>\n            <div className={classes.configSectionItem}>\n              <InputBoxWrapper\n                type=\"number\"\n                id=\"securityContext_fsGroup\"\n                name=\"securityContext_fsGroup\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  dispatch(setFSGroup(e.target.value));\n                }}\n                label=\"FsGroup\"\n                value={fsGroup}\n                required\n                min=\"0\"\n              />\n            </div>\n\n            <div className={classes.configSectionItem}>\n              <SelectWrapper\n                label=\"FsGroupChangePolicy\"\n                id=\"securityContext_fsGroupChangePolicy\"\n                name=\"securityContext_fsGroupChangePolicy\"\n                onChange={(e: SelectChangeEvent<string>) => {\n                  dispatch(setFSGroupChangePolicy(e.target.value));\n                }}\n                value={fsGroupChangePolicy}\n                options={[\n                  {\n                    label: \"Always\",\n                    value: \"Always\",\n                  },\n                  {\n                    label: \"OnRootMismatch\",\n                    value: \"OnRootMismatch\",\n                  },\n                ]}\n              />\n            </div>\n          </div>\n        </Grid>\n        <Grid item xs={12}>\n          <div className={classes.multiContainer}>\n            <FormSwitchWrapper\n              value=\"SecurityContextRunAsNonRoot\"\n              id=\"securityContext_runAsNonRoot\"\n              name=\"securityContext_runAsNonRoot\"\n              checked={runAsNonRoot}\n              onChange={() => {\n                dispatch(setRunAsNonRoot(!runAsNonRoot));\n              }}\n              label={\"Do not run as Root\"}\n            />\n          </div>\n        </Grid>\n      </fieldset>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(SecurityContextSelector);\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;"],"names":["withStyles","theme","createStyles","tenantDetailsStyles","spacingUtils","bold","fontWeight","italic","fontStyle","fileItem","marginRight","display","minWidth","flexFlow","containerForHeader","spacing","createTenantCommon","formFieldStyles","modalBasic","wizardCommon","classes","dispatch","useAppDispatch","useParams","tenantName","tenantNamespace","prometheusEnabled","useSelector","state","editTenantMonitoring","image","sidecarImage","initImage","diskCapacityGB","cpuRequest","monitoringCPURequest","memRequest","monitoringMemRequest","serviceAccountName","storageClassName","useState","validationErrors","setValidationErrors","toggleConfirmOpen","setToggleConfirmOpen","key","value","labels","setLabels","annotations","setAnnotations","nodeSelector","setNodeSelector","refreshMonitoringInfo","setRefreshMonitoringInfo","labelsError","setLabelsError","annotationsError","setAnnotationsError","nodeSelectorError","setNodeSelectorError","runAsGroup","runAsUser","fsGroup","runAsNonRoot","fsGroupChangePolicy","editTenantSecurityContext","cleanValidation","fieldName","clearValidationError","trim","x","retval","i","length","push","checkValid","Object","keys","setErrorSnackMessage","errorMessage","detailedError","useEffect","api","then","res","setPrometheusEnabled","setImage","setSidecarImage","setInitImage","setStorageClassName","setDiskCapacityGB","setServiceAccountName","setCPURequest","setMemRequest","Math","floor","parseInt","toString","setRunAsGroup","securityContext","setRunAsUser","setRunAsNonRoot","setFSGroup","setMonitoringInfo","catch","err","Fragment","isOpen","title","confirmText","cancelText","onClose","onConfirm","configInfo","toggle","confirmationContent","container","item","xs","className","sectionTitle","justifyContent","textAlign","label","indicatorLabels","checked","id","name","onChange","description","hrClass","paddingBottom","placeholder","event","target","validity","valid","pattern","imagePattern","error","numericPattern","overlayObject","onUnitChange","unitSelected","unitsList","disabled","formFieldRow","inputLabel","newValues","setNewValues","paramName","setError","setFSGroupChangePolicy","sx","type","variant","onClick","setSnackBarMessage","submitMonitoringInfo","bottomContainer","flexGrow","alignItems","width","shortened","gridTemplateColumns","gridGap","paddingRight","keyPairValidation","fieldKey","required","customPatternMessage","commonVal","commonFormValidation","keyValueInputs","map","_","index","replace","e","tempLabels","size","style","marginLeft","splice","configSectionItem","marginBottom","border","useDispatch","fieldGroup","fieldSpaceTop","descriptionText","multiContainerStackNarrow","min","options","multiContainer","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}