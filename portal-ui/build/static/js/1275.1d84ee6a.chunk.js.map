{"version":3,"file":"static/js/1275.1d84ee6a.chunk.js","mappings":"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","sources":["common/HelpBox.tsx","screens/Console/Common/CredentialsPrompt/CredentialItem.tsx","screens/Console/Common/CredentialsPrompt/CredentialsPrompt.tsx","screens/Console/Common/FormComponents/CodeMirrorWrapper/CodeMirrorWrapper.tsx","screens/Console/Common/FormComponents/FileSelector/FileSelector.tsx","screens/Console/Common/FormComponents/FileSelector/utils.ts","screens/Console/Common/ModalWrapper/ModalWrapper.tsx","screens/Console/Tenants/AddTenant/Steps/Configure.tsx","screens/Console/Tenants/AddTenant/Steps/IdentityProvider/IDPActiveDirectory.tsx","screens/Console/Tenants/AddTenant/Steps/IdentityProvider/IDPOpenID.tsx","screens/Console/Tenants/AddTenant/Steps/IdentityProvider/IDPBuiltIn.tsx","screens/Console/Tenants/AddTenant/Steps/IdentityProvider.tsx","screens/Console/Tenants/AddTenant/Steps/Security.tsx","screens/Console/Common/SectionH1.tsx","screens/Console/Tenants/AddTenant/Steps/Encryption/VaultKMSAdd.tsx","screens/Console/Tenants/AddTenant/Steps/Encryption/AzureKMSAdd.tsx","screens/Console/Tenants/AddTenant/Steps/Encryption/GCPKMSAdd.tsx","screens/Console/Tenants/AddTenant/Steps/Encryption/GemaltoKMSAdd.tsx","screens/Console/Tenants/AddTenant/Steps/Encryption/AWSKMSAdd.tsx","screens/Console/Tenants/AddTenant/Steps/Encryption.tsx","screens/Console/Tenants/AddTenant/Steps/Affinity.tsx","screens/Console/Tenants/AddTenant/Steps/Images.tsx","screens/Console/Tenants/AddTenant/Steps/SizePreview.tsx","screens/Console/Tenants/AddTenant/Steps/helpers/AddNamespaceModal.tsx","screens/Console/Tenants/AddTenant/Steps/TenantResources/NamespaceSelector.tsx","screens/Console/Tenants/AddTenant/Steps/TenantResources/NameTenantMain.tsx","screens/Console/Tenants/AddTenant/Steps/TenantResources/TenantResources.tsx","screens/Console/Tenants/AddTenant/Steps/ConfigLogSearch.tsx","screens/Console/Tenants/AddTenant/Steps/ConfigPrometheus.tsx","screens/Console/Tenants/AddTenant/common.ts","screens/Console/Tenants/AddTenant/CreateTenantButton.tsx","screens/Console/Tenants/AddTenant/NewTenantCredentials.tsx","screens/Console/Tenants/AddTenant/AddTenant.tsx","screens/Console/Tenants/HelpBox/TLSHelpBox.tsx","screens/Console/Tenants/LogoComponents.tsx","screens/shared/ErrorBlock.tsx","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/AttachFile.js","../node_modules/@mui/icons-material/Cancel.js","../node_modules/@mui/icons-material/Casino.js","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/material/Divider/Divider.js"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      border: \"1px solid #E2E2E2\",\n      borderRadius: 2,\n      backgroundColor: \"#FBFAFA\",\n      paddingLeft: 25,\n      paddingTop: 31,\n      paddingBottom: 21,\n      paddingRight: 30,\n    },\n    leftItems: {\n      fontSize: 16,\n      fontWeight: \"bold\",\n      marginBottom: 15,\n      display: \"flex\",\n      alignItems: \"center\",\n      \"& .min-icon\": {\n        marginRight: 15,\n        height: 28,\n        width: 38,\n      },\n    },\n    helpText: {\n      fontSize: 16,\n      paddingLeft: 5,\n    },\n  });\n\ninterface IHelpBox {\n  classes: any;\n  iconComponent: any;\n  title: string | React.ReactNode;\n  help: any;\n}\n\nconst HelpBox = ({ classes, iconComponent, title, help }: IHelpBox) => {\n  return (\n    <div className={classes.root}>\n      <Grid container>\n        <Grid item xs={12} className={classes.leftItems}>\n          {iconComponent}\n          {title}\n        </Grid>\n        <Grid item xs={12} className={classes.helpText}>\n          {help}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(HelpBox);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { InputAdornment, OutlinedInput } from \"@mui/material\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Theme } from \"@mui/material/styles\";\nimport { Button } from \"mds\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport { CopyIcon } from \"mds\";\nimport { fieldBasic } from \"../FormComponents/common/styleLibrary\";\nimport TooltipWrapper from \"../TooltipWrapper/TooltipWrapper\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    container: {\n      display: \"flex\",\n      flexFlow: \"column\",\n      padding: \"20px 0 8px 0\",\n    },\n    inputWithCopy: {\n      \"& .MuiInputBase-root \": {\n        width: \"100%\",\n        background: \"#FBFAFA\",\n        \"& .MuiInputBase-input\": {\n          height: \".8rem\",\n        },\n        \"& .MuiInputAdornment-positionEnd\": {\n          marginRight: \".5rem\",\n          \"& .MuiButtonBase-root\": {\n            height: \"2rem\",\n          },\n        },\n      },\n      \"& .MuiButtonBase-root .min-icon\": {\n        width: \".8rem\",\n        height: \".8rem\",\n      },\n    },\n    inputLabel: {\n      ...fieldBasic.inputLabel,\n      fontSize: \".8rem\",\n    },\n  });\n\nconst CredentialItem = ({\n  label = \"\",\n  value = \"\",\n  classes = {},\n}: {\n  label: string;\n  value: string;\n  classes: any;\n}) => {\n  return (\n    <div className={classes.container}>\n      <div className={classes.inputLabel}>{label}:</div>\n      <div className={classes.inputWithCopy}>\n        <OutlinedInput\n          value={value}\n          readOnly\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <TooltipWrapper tooltip={\"Copy\"}>\n                <CopyToClipboard text={value}>\n                  <Button\n                    id={\"copy-clipboard\"}\n                    aria-label=\"copy\"\n                    onClick={() => {}}\n                    onMouseDown={() => {}}\n                    style={{\n                      width: \"28px\",\n                      height: \"28px\",\n                      padding: \"0px\",\n                    }}\n                    icon={<CopyIcon />}\n                  />\n                </CopyToClipboard>\n              </TooltipWrapper>\n            </InputAdornment>\n          }\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(CredentialItem);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport get from \"lodash/get\";\nimport { Theme } from \"@mui/material/styles\";\nimport { Button } from \"mds\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { NewServiceAccount } from \"./types\";\nimport ModalWrapper from \"../ModalWrapper/ModalWrapper\";\nimport Grid from \"@mui/material/Grid\";\nimport CredentialItem from \"./CredentialItem\";\nimport { WarnIcon } from \"mds\";\nimport { DownloadIcon, ServiceAccountCredentialsIcon } from \"mds\";\nimport TooltipWrapper from \"../TooltipWrapper/TooltipWrapper\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    warningBlock: {\n      color: \"red\",\n      fontSize: \".85rem\",\n      margin: \".5rem 0 .5rem 0\",\n      display: \"flex\",\n      alignItems: \"center\",\n      \"& svg \": {\n        marginRight: \".3rem\",\n        height: 16,\n        width: 16,\n      },\n    },\n    credentialTitle: {\n      padding: \".8rem 0 0 0\",\n      fontWeight: 600,\n      fontSize: \".9rem\",\n    },\n    buttonContainer: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      marginTop: \"1rem\",\n    },\n    credentialsPanel: {\n      overflowY: \"auto\",\n      maxHeight: 350,\n    },\n    promptTitle: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    buttonSpacer: {\n      marginRight: \".9rem\",\n    },\n  });\n\ninterface ICredentialsPromptProps {\n  classes: any;\n  newServiceAccount: NewServiceAccount | null;\n  open: boolean;\n  entity: string;\n  closeModal: () => void;\n}\n\nconst download = (filename: string, text: string) => {\n  let element = document.createElement(\"a\");\n  element.setAttribute(\"href\", \"data:text/plain;charset=utf-8,\" + text);\n  element.setAttribute(\"download\", filename);\n\n  element.style.display = \"none\";\n  document.body.appendChild(element);\n\n  element.click();\n  document.body.removeChild(element);\n};\n\nconst CredentialsPrompt = ({\n  classes,\n  newServiceAccount,\n  open,\n  closeModal,\n  entity,\n}: ICredentialsPromptProps) => {\n  if (!newServiceAccount) {\n    return null;\n  }\n  const consoleCreds = get(newServiceAccount, \"console\", null);\n  const idp = get(newServiceAccount, \"idp\", false);\n\n  const downloadImport = () => {\n    let consoleExtras = {};\n\n    if (consoleCreds) {\n      if (!Array.isArray(consoleCreds)) {\n        consoleExtras = {\n          url: consoleCreds.url,\n          accessKey: consoleCreds.accessKey,\n          secretKey: consoleCreds.secretKey,\n          api: \"s3v4\",\n          path: \"auto\",\n        };\n      } else {\n        const cCreds = consoleCreds.map((itemMap) => {\n          return {\n            url: itemMap.url,\n            accessKey: itemMap.accessKey,\n            secretKey: itemMap.secretKey,\n            api: \"s3v4\",\n            path: \"auto\",\n          };\n        });\n        consoleExtras = cCreds[0];\n      }\n    } else {\n      consoleExtras = {\n        url: newServiceAccount.url,\n        accessKey: newServiceAccount.accessKey,\n        secretKey: newServiceAccount.secretKey,\n        api: \"s3v4\",\n        path: \"auto\",\n      };\n    }\n\n    download(\n      \"credentials.json\",\n      JSON.stringify({\n        ...consoleExtras,\n      })\n    );\n  };\n\n  const downloaddAllCredentials = () => {\n    let allCredentials = {};\n    if (\n      consoleCreds &&\n      Array.isArray(consoleCreds) &&\n      consoleCreds.length > 1\n    ) {\n      const cCreds = consoleCreds.map((itemMap) => {\n        return {\n          accessKey: itemMap.accessKey,\n          secretKey: itemMap.secretKey,\n        };\n      });\n      allCredentials = cCreds;\n    }\n    download(\n      \"all_credentials.json\",\n      JSON.stringify({\n        ...allCredentials,\n      })\n    );\n  };\n\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={() => {\n        closeModal();\n      }}\n      title={\n        <div className={classes.promptTitle}>\n          <div>New {entity} Created</div>\n        </div>\n      }\n      titleIcon={<ServiceAccountCredentialsIcon />}\n    >\n      <Grid container>\n        <Grid item xs={12} className={classes.formScrollable}>\n          A new {entity} has been created with the following details:\n          {!idp && consoleCreds && (\n            <React.Fragment>\n              <Grid item xs={12} className={classes.credentialsPanel}>\n                <div className={classes.credentialTitle}>\n                  Console Credentials\n                </div>\n                {Array.isArray(consoleCreds) &&\n                  consoleCreds.map((credentialsPair, index) => {\n                    return (\n                      <>\n                        <CredentialItem\n                          label=\"Access Key\"\n                          value={credentialsPair.accessKey}\n                        />\n                        <CredentialItem\n                          label=\"Secret Key\"\n                          value={credentialsPair.secretKey}\n                        />\n                      </>\n                    );\n                  })}\n                {!Array.isArray(consoleCreds) && (\n                  <>\n                    <CredentialItem\n                      label=\"Access Key\"\n                      value={consoleCreds.accessKey}\n                    />\n                    <CredentialItem\n                      label=\"Secret Key\"\n                      value={consoleCreds.secretKey}\n                    />\n                  </>\n                )}\n              </Grid>\n            </React.Fragment>\n          )}\n          {(consoleCreds === null || consoleCreds === undefined) && (\n            <>\n              <CredentialItem\n                label=\"Access Key\"\n                value={newServiceAccount.accessKey || \"\"}\n              />\n              <CredentialItem\n                label=\"Secret Key\"\n                value={newServiceAccount.secretKey || \"\"}\n              />\n            </>\n          )}\n          {idp ? (\n            <div className={classes.warningBlock}>\n              Please Login via the configured external identity provider.\n            </div>\n          ) : (\n            <div className={classes.warningBlock}>\n              <WarnIcon />\n              <span>\n                Write these down, as this is the only time the secret will be\n                displayed.\n              </span>\n            </div>\n          )}\n        </Grid>\n        <Grid item xs={12} className={classes.buttonContainer}>\n          {!idp && (\n            <>\n              <TooltipWrapper\n                tooltip={\n                  \"Download credentials in a JSON file formatted for import using mc alias import. This will only include the default login credentials.\"\n                }\n              >\n                <Button\n                  id={\"download-button\"}\n                  label={\"Download for import\"}\n                  className={classes.buttonSpacer}\n                  onClick={downloadImport}\n                  icon={<DownloadIcon />}\n                  variant=\"callAction\"\n                />\n              </TooltipWrapper>\n\n              {Array.isArray(consoleCreds) && consoleCreds.length > 1 && (\n                <TooltipWrapper\n                  tooltip={\n                    \"Download all access credentials to a JSON file. NOTE: This file is not formatted for import using mc alias import. If you plan to import this alias from the file, please use the Download for Import button. \"\n                  }\n                >\n                  <Button\n                    id={\"download-all-button\"}\n                    label={\"Download all access credentials\"}\n                    className={classes.buttonSpacer}\n                    onClick={downloaddAllCredentials}\n                    icon={<DownloadIcon />}\n                    variant=\"callAction\"\n                    color=\"primary\"\n                  />\n                </TooltipWrapper>\n              )}\n            </>\n          )}\n        </Grid>\n      </Grid>\n    </ModalWrapper>\n  );\n};\n\nexport default withStyles(styles)(CredentialsPrompt);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Box, InputLabel, Tooltip } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { HelpIcon } from \"mds\";\nimport { fieldBasic } from \"../common/styleLibrary\";\nimport { CopyIcon } from \"mds\";\nimport { Button } from \"mds\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport CodeEditor from \"@uiw/react-textarea-code-editor\";\nimport TooltipWrapper from \"../../TooltipWrapper/TooltipWrapper\";\n\ninterface ICodeWrapper {\n  value: string;\n  label?: string;\n  mode?: string;\n  tooltip?: string;\n  classes: any;\n  onChange?: (editor: any, data: any, value: string) => any;\n  onBeforeChange: (editor: any, data: any, value: string) => any;\n  readOnly?: boolean;\n  editorHeight?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n  });\n\nconst CodeMirrorWrapper = ({\n  value,\n  label = \"\",\n  tooltip = \"\",\n  mode = \"json\",\n  classes,\n  onBeforeChange,\n  readOnly = false,\n  editorHeight = \"250px\",\n}: ICodeWrapper) => {\n  return (\n    <React.Fragment>\n      <Grid item xs={12} sx={{ marginBottom: \"10px\" }}>\n        <InputLabel className={classes.inputLabel}>\n          <span>{label}</span>\n          {tooltip !== \"\" && (\n            <div className={classes.tooltipContainer}>\n              <Tooltip title={tooltip} placement=\"top-start\">\n                <div className={classes.tooltip}>\n                  <HelpIcon />\n                </div>\n              </Tooltip>\n            </div>\n          )}\n        </InputLabel>\n      </Grid>\n\n      <Grid\n        item\n        xs={12}\n        style={{\n          maxHeight: editorHeight,\n          overflow: \"auto\",\n          border: \"1px solid #eaeaea\",\n        }}\n      >\n        <CodeEditor\n          value={value}\n          language={mode}\n          onChange={(evn) => {\n            onBeforeChange(null, null, evn.target.value);\n          }}\n          id={\"code_wrapper\"}\n          padding={15}\n          style={{\n            fontSize: 12,\n            backgroundColor: \"#fefefe\",\n            fontFamily:\n              \"ui-monospace,SFMono-Regular,SF Mono,Consolas,Liberation Mono,Menlo,monospace\",\n            minHeight: editorHeight || \"initial\",\n            color: \"#000000\",\n          }}\n        />\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        sx={{\n          background: \"#f7f7f7\",\n          border: \"1px solid #eaeaea\",\n          borderTop: 0,\n        }}\n      >\n        <Box\n          sx={{\n            display: \"flex\",\n            alignItems: \"center\",\n            padding: \"2px\",\n            paddingRight: \"5px\",\n            justifyContent: \"flex-end\",\n            \"& button\": {\n              height: \"26px\",\n              width: \"26px\",\n              padding: \"2px\",\n              \" .min-icon\": {\n                marginLeft: \"0\",\n              },\n            },\n          }}\n        >\n          <TooltipWrapper tooltip={\"Copy to Clipboard\"}>\n            <CopyToClipboard text={value}>\n              <Button\n                type={\"button\"}\n                id={\"copy-code-mirror\"}\n                icon={<CopyIcon />}\n                color={\"primary\"}\n                variant={\"regular\"}\n              />\n            </CopyToClipboard>\n          </TooltipWrapper>\n        </Box>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(CodeMirrorWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState } from \"react\";\nimport get from \"lodash/get\";\nimport { Grid, InputLabel, Tooltip } from \"@mui/material\";\nimport IconButton from \"@mui/material/IconButton\";\nimport AttachFileIcon from \"@mui/icons-material/AttachFile\";\nimport CancelIcon from \"@mui/icons-material/Cancel\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  fileInputStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport { fileProcess } from \"./utils\";\nimport { HelpIcon } from \"mds\";\nimport ErrorBlock from \"../../../../shared/ErrorBlock\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: string, i: string) => void;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  required?: boolean;\n  error?: string;\n  accept?: string;\n  value?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    valueString: {\n      maxWidth: 350,\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      marginTop: 2,\n    },\n    fileInputField: {\n      margin: \"13px 0\",\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n      },\n    },\n    ...fileInputStyles,\n    inputLabel: {\n      ...fieldBasic.inputLabel,\n      fontWeight: \"normal\",\n    },\n    textBoxContainer: {\n      ...fieldBasic.textBoxContainer,\n      maxWidth: \"100%\",\n      border: \"1px solid #eaeaea\",\n      paddingLeft: \"15px\",\n    },\n  });\n\nconst FileSelector = ({\n  label,\n  classes,\n  onChange,\n  id,\n  name,\n  disabled = false,\n  tooltip = \"\",\n  required,\n  error = \"\",\n  accept = \"\",\n  value = \"\",\n}: InputBoxProps) => {\n  const [showFileSelector, setShowSelector] = useState(false);\n\n  return (\n    <React.Fragment>\n      <Grid\n        item\n        xs={12}\n        className={`${classes.fileInputField} ${classes.fieldBottom} ${\n          classes.fieldContainer\n        } ${error !== \"\" ? classes.errorInField : \"\"}`}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={`${error !== \"\" ? classes.fieldLabelError : \"\"} ${\n              classes.inputLabel\n            }`}\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        {showFileSelector || value === \"\" ? (\n          <div className={classes.textBoxContainer}>\n            <input\n              type=\"file\"\n              name={name}\n              onChange={(e) => {\n                const fileName = get(e, \"target.files[0].name\", \"\");\n                fileProcess(e, (data: any) => {\n                  onChange(data, fileName);\n                });\n              }}\n              accept={accept}\n              required={required}\n              disabled={disabled}\n              className={classes.fileInputField}\n            />\n\n            {value !== \"\" && (\n              <IconButton\n                color=\"primary\"\n                aria-label=\"upload picture\"\n                component=\"span\"\n                onClick={() => {\n                  setShowSelector(false);\n                }}\n                disableRipple={false}\n                disableFocusRipple={false}\n                size=\"small\"\n              >\n                <CancelIcon />\n              </IconButton>\n            )}\n\n            {error !== \"\" && <ErrorBlock errorMessage={error} />}\n          </div>\n        ) : (\n          <div className={classes.fileReselect}>\n            <div className={classes.valueString}>{value}</div>\n            <IconButton\n              color=\"primary\"\n              aria-label=\"upload picture\"\n              component=\"span\"\n              onClick={() => {\n                setShowSelector(true);\n              }}\n              disableRipple={false}\n              disableFocusRipple={false}\n              size=\"small\"\n            >\n              <AttachFileIcon />\n            </IconButton>\n          </div>\n        )}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(FileSelector);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nexport const fileProcess = (evt: any, callback: any) => {\n  const file = evt.target.files[0];\n  const reader = new FileReader();\n  reader.readAsDataURL(file);\n\n  reader.onload = () => {\n    // reader.readAsDataURL(file) output will be something like: data:application/x-x509-ca-cert;base64,LS0tLS1CRUdJTiBDRVJUSU\n    // we care only about the actual base64 part (everything after \"data:application/x-x509-ca-cert;base64,\")\n    const fileBase64 = reader.result;\n    if (fileBase64) {\n      const fileArray = fileBase64.toString().split(\"base64,\");\n\n      if (fileArray.length === 2) {\n        callback(fileArray[1]);\n      }\n    }\n  };\n};\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  deleteDialogStyles,\n  snackBarCommon,\n} from \"../FormComponents/common/styleLibrary\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport MainError from \"../MainError/MainError\";\nimport { setModalSnackMessage } from \"../../../../systemSlice\";\n\ninterface IModalProps {\n  classes: any;\n  onClose: () => void;\n  modalOpen: boolean;\n  title: string | React.ReactNode;\n  children: any;\n  wideLimit?: boolean;\n  noContentPadding?: boolean;\n  titleIcon?: React.ReactNode;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...deleteDialogStyles,\n    content: {\n      padding: 25,\n      paddingBottom: 0,\n    },\n    customDialogSize: {\n      width: \"100%\",\n      maxWidth: 765,\n    },\n    ...snackBarCommon,\n  });\n\nconst ModalWrapper = ({\n  onClose,\n  modalOpen,\n  title,\n  children,\n  classes,\n  wideLimit = true,\n  noContentPadding,\n  titleIcon = null,\n}: IModalProps) => {\n  const dispatch = useAppDispatch();\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  const modalSnackMessage = useSelector(\n    (state: AppState) => state.system.modalSnackBar\n  );\n\n  useEffect(() => {\n    dispatch(setModalSnackMessage(\"\"));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (modalSnackMessage) {\n      if (modalSnackMessage.message === \"\") {\n        setOpenSnackbar(false);\n        return;\n      }\n      // Open SnackBar\n      if (modalSnackMessage.type !== \"error\") {\n        setOpenSnackbar(true);\n      }\n    }\n  }, [modalSnackMessage]);\n\n  const closeSnackBar = () => {\n    setOpenSnackbar(false);\n    dispatch(setModalSnackMessage(\"\"));\n  };\n\n  const customSize = wideLimit\n    ? {\n        classes: {\n          paper: classes.customDialogSize,\n        },\n      }\n    : { maxWidth: \"lg\" as const, fullWidth: true };\n\n  let message = \"\";\n\n  if (modalSnackMessage) {\n    message = modalSnackMessage.detailedErrorMsg;\n    if (\n      modalSnackMessage.detailedErrorMsg === \"\" ||\n      modalSnackMessage.detailedErrorMsg.length < 5\n    ) {\n      message = modalSnackMessage.message;\n    }\n  }\n\n  return (\n    <Dialog\n      open={modalOpen}\n      classes={classes}\n      {...customSize}\n      scroll={\"paper\"}\n      onClose={(event, reason) => {\n        if (reason !== \"backdropClick\") {\n          onClose(); // close on Esc but not on click outside\n        }\n      }}\n      className={classes.root}\n    >\n      <DialogTitle className={classes.title}>\n        <div className={classes.titleText}>\n          {titleIcon} {title}\n        </div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            id={\"close\"}\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <MainError isModal={true} />\n      <Snackbar\n        open={openSnackbar}\n        className={classes.snackBarModal}\n        onClose={() => {\n          closeSnackBar();\n        }}\n        message={message}\n        ContentProps={{\n          className: `${classes.snackBar} ${\n            modalSnackMessage && modalSnackMessage.type === \"error\"\n              ? classes.errorSnackBar\n              : \"\"\n          }`,\n        }}\n        autoHideDuration={\n          modalSnackMessage && modalSnackMessage.type === \"error\" ? 10000 : 5000\n        }\n      />\n      <DialogContent className={noContentPadding ? \"\" : classes.content}>\n        {children}\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default withStyles(styles)(ModalWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  Divider,\n  Grid,\n  IconButton,\n  Paper,\n  SelectChangeEvent,\n} from \"@mui/material\";\nimport {\n  createTenantCommon,\n  modalBasic,\n  wizardCommon,\n  formFieldStyles,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\n\nimport { AppState, useAppDispatch } from \"../../../../../store\";\nimport { clearValidationError } from \"../../utils\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../utils/validationFunctions\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { RemoveIcon } from \"mds\";\nimport {\n  addNewMinIODomain,\n  isPageValid,\n  removeMinIODomain,\n  setEnvVars,\n  updateAddField,\n} from \"../createTenantSlice\";\nimport SelectWrapper from \"../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\n\ninterface IConfigureProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    configSectionItem: {\n      marginRight: 15,\n      marginBottom: 15,\n\n      \"& .multiContainer\": {\n        border: \"1px solid red\",\n      },\n    },\n    tenantCustomizationFields: {\n      marginLeft: 30, // 2nd Level(15+15)\n      width: \"88%\",\n      margin: \"auto\",\n    },\n    containerItem: {\n      marginRight: 15,\n    },\n    fieldGroup: {\n      ...createTenantCommon.fieldGroup,\n      paddingTop: 15,\n      marginBottom: 25,\n    },\n    responsiveSectionItem: {\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n        alignItems: \"flex-start\",\n\n        \"& div > div\": {\n          marginBottom: 5,\n          marginRight: 0,\n        },\n      },\n    },\n    wrapperContainer: {\n      display: \"flex\",\n      marginBottom: 15,\n    },\n    envVarRow: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-start\",\n      \"&:last-child\": {\n        borderBottom: 0,\n      },\n      \"@media (max-width: 900px)\": {\n        flex: 1,\n\n        \"& div label\": {\n          minWidth: 50,\n        },\n      },\n    },\n    fileItem: {\n      marginRight: 10,\n      display: \"flex\",\n      \"& div label\": {\n        minWidth: 50,\n      },\n\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n      },\n    },\n    rowActions: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      \"@media (max-width: 900px)\": {\n        flex: 1,\n      },\n    },\n    overlayAction: {\n      marginLeft: 10,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    ...modalBasic,\n    ...wizardCommon,\n    ...formFieldStyles,\n  });\n\nconst Configure = ({ classes }: IConfigureProps) => {\n  const dispatch = useAppDispatch();\n\n  const exposeMinIO = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.exposeMinIO\n  );\n  const exposeConsole = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.exposeConsole\n  );\n  const setDomains = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.setDomains\n  );\n  const consoleDomain = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.consoleDomain\n  );\n  const minioDomains = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.minioDomains\n  );\n  const tenantCustom = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.tenantCustom\n  );\n  const tenantEnvVars = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.envVars\n  );\n  const tenantSecurityContext = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.tenantSecurityContext\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"configure\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  // Validation\n  useEffect(() => {\n    let customAccountValidation: IValidation[] = [];\n    if (tenantCustom) {\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"tenant_securityContext_runAsUser\",\n          required: true,\n          value: tenantSecurityContext.runAsUser,\n          customValidation:\n            tenantSecurityContext.runAsUser === \"\" ||\n            parseInt(tenantSecurityContext.runAsUser) < 0,\n          customValidationMessage: `runAsUser must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"tenant_securityContext_runAsGroup\",\n          required: true,\n          value: tenantSecurityContext.runAsGroup,\n          customValidation:\n            tenantSecurityContext.runAsGroup === \"\" ||\n            parseInt(tenantSecurityContext.runAsGroup) < 0,\n          customValidationMessage: `runAsGroup must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"tenant_securityContext_fsGroup\",\n          required: true,\n          value: tenantSecurityContext.fsGroup,\n          customValidation:\n            tenantSecurityContext.fsGroup === \"\" ||\n            parseInt(tenantSecurityContext.fsGroup) < 0,\n          customValidationMessage: `fsGroup must be present and be 0 or more`,\n        },\n      ];\n    }\n\n    if (setDomains) {\n      const minioExtraValidations = minioDomains.map((validation, index) => {\n        return {\n          fieldKey: `minio-domain-${index.toString()}`,\n          required: false,\n          value: validation,\n          pattern: /^(https?):\\/\\/([a-zA-Z0-9\\-.]+)(:[0-9]+)?$/,\n          customPatternMessage:\n            \"MinIO domain is not in the form of http|https://subdomain.domain\",\n        };\n      });\n\n      customAccountValidation = [\n        ...customAccountValidation,\n        ...minioExtraValidations,\n        {\n          fieldKey: \"console_domain\",\n          required: false,\n          value: consoleDomain,\n          pattern:\n            /^(https?):\\/\\/([a-zA-Z0-9\\-.]+)(:[0-9]+)?(\\/[a-zA-Z0-9\\-./]*)?$/,\n          customPatternMessage:\n            \"Console domain is not in the form of http|https://subdomain.domain:port/subpath1/subpath2\",\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(customAccountValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"configure\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    dispatch,\n    tenantCustom,\n    tenantSecurityContext,\n    setDomains,\n    consoleDomain,\n    minioDomains,\n  ]);\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  const updateMinIODomain = (value: string, index: number) => {\n    const copyDomains = [...minioDomains];\n    copyDomains[index] = value;\n\n    updateField(\"minioDomains\", copyDomains);\n  };\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <h3 className={classes.h3Section}>Configure</h3>\n        <span className={classes.descriptionText}>\n          Basic configurations for tenant management\n        </span>\n      </div>\n      <div className={classes.headerElement}>\n        <h4 className={classes.h3Section}>Services</h4>\n        <span className={classes.descriptionText}>\n          Whether the tenant's services should request an external IP via\n          LoadBalancer service type.\n        </span>\n      </div>\n      <Grid item xs={12} className={classes.configSectionItem}>\n        <FormSwitchWrapper\n          value=\"expose_minio\"\n          id=\"expose_minio\"\n          name=\"expose_minio\"\n          checked={exposeMinIO}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"exposeMinIO\", checked);\n          }}\n          label={\"Expose MinIO Service\"}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.configSectionItem}>\n        <FormSwitchWrapper\n          value=\"expose_console\"\n          id=\"expose_console\"\n          name=\"expose_console\"\n          checked={exposeConsole}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"exposeConsole\", checked);\n          }}\n          label={\"Expose Console Service\"}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.configSectionItem}>\n        <FormSwitchWrapper\n          value=\"custom_domains\"\n          id=\"custom_domains\"\n          name=\"custom_domains\"\n          checked={setDomains}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"setDomains\", checked);\n          }}\n          label={\"Set Custom Domains\"}\n        />\n      </Grid>\n      {setDomains && (\n        <Grid item xs={12} className={classes.tenantCustomizationFields}>\n          <fieldset className={classes.fieldGroup}>\n            <legend className={classes.descriptionText}>\n              Custom Domains for MinIO\n            </legend>\n            <Grid item xs={12} className={`${classes.configSectionItem}`}>\n              <div className={classes.containerItem}>\n                <InputBoxWrapper\n                  id=\"console_domain\"\n                  name=\"console_domain\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"consoleDomain\", e.target.value);\n                    cleanValidation(\"tenant_securityContext_runAsUser\");\n                  }}\n                  label=\"Console Domain\"\n                  value={consoleDomain}\n                  placeholder={\n                    \"Eg. http://subdomain.domain:port/subpath1/subpath2\"\n                  }\n                  error={validationErrors[\"console_domain\"] || \"\"}\n                />\n              </div>\n              <div>\n                <h4>MinIO Domains</h4>\n                <div className={`${classes.responsiveSectionItem}`}>\n                  {minioDomains.map((domain, index) => {\n                    return (\n                      <div\n                        className={`${classes.containerItem} ${classes.wrapperContainer}`}\n                        key={`minio-domain-key-${index.toString()}`}\n                      >\n                        <InputBoxWrapper\n                          id={`minio-domain-${index.toString()}`}\n                          name={`minio-domain-${index.toString()}`}\n                          onChange={(\n                            e: React.ChangeEvent<HTMLInputElement>\n                          ) => {\n                            updateMinIODomain(e.target.value, index);\n                          }}\n                          label={`MinIO Domain ${index + 1}`}\n                          value={domain}\n                          placeholder={\"Eg. http://subdomain.domain\"}\n                          error={\n                            validationErrors[\n                              `minio-domain-${index.toString()}`\n                            ] || \"\"\n                          }\n                        />\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => dispatch(addNewMinIODomain())}\n                            disabled={index !== minioDomains.length - 1}\n                          >\n                            <AddIcon />\n                          </IconButton>\n                        </div>\n\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => dispatch(removeMinIODomain(index))}\n                            disabled={minioDomains.length <= 1}\n                          >\n                            <RemoveIcon />\n                          </IconButton>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            </Grid>\n          </fieldset>\n        </Grid>\n      )}\n\n      <Grid item xs={12} className={classes.configSectionItem}>\n        <FormSwitchWrapper\n          value=\"tenantConfig\"\n          id=\"tenant_configuration\"\n          name=\"tenant_configuration\"\n          checked={tenantCustom}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"tenantCustom\", checked);\n          }}\n          label={\"Security Context\"}\n        />\n      </Grid>\n      {tenantCustom && (\n        <Grid item xs={12} className={classes.tenantCustomizationFields}>\n          <fieldset className={classes.fieldGroup}>\n            <legend className={classes.descriptionText}>\n              SecurityContext for MinIO\n            </legend>\n            <Grid item xs={12} className={`${classes.configSectionItem}`}>\n              <div\n                className={`${classes.multiContainer} ${classes.responsiveSectionItem}`}\n              >\n                <div className={classes.containerItem}>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"tenant_securityContext_runAsUser\"\n                    name=\"tenant_securityContext_runAsUser\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"tenantSecurityContext\", {\n                        ...tenantSecurityContext,\n                        runAsUser: e.target.value,\n                      });\n                      cleanValidation(\"tenant_securityContext_runAsUser\");\n                    }}\n                    label=\"Run As User\"\n                    value={tenantSecurityContext.runAsUser}\n                    required\n                    error={\n                      validationErrors[\"tenant_securityContext_runAsUser\"] || \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n                <div className={classes.containerItem}>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"tenant_securityContext_runAsGroup\"\n                    name=\"tenant_securityContext_runAsGroup\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"tenantSecurityContext\", {\n                        ...tenantSecurityContext,\n                        runAsGroup: e.target.value,\n                      });\n                      cleanValidation(\"tenant_securityContext_runAsGroup\");\n                    }}\n                    label=\"Run As Group\"\n                    value={tenantSecurityContext.runAsGroup}\n                    required\n                    error={\n                      validationErrors[\"tenant_securityContext_runAsGroup\"] ||\n                      \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n              </div>\n            </Grid>\n            <br />\n            <Grid item xs={12} className={`${classes.configSectionItem}`}>\n              <div\n                className={`${classes.multiContainer} ${classes.responsiveSectionItem}`}\n              >\n                <div className={classes.containerItem}>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"tenant_securityContext_fsGroup\"\n                    name=\"tenant_securityContext_fsGroup\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"tenantSecurityContext\", {\n                        ...tenantSecurityContext,\n                        fsGroup: e.target.value,\n                      });\n                      cleanValidation(\"tenant_securityContext_fsGroup\");\n                    }}\n                    label=\"FsGroup\"\n                    value={tenantSecurityContext.fsGroup}\n                    required\n                    error={\n                      validationErrors[\"tenant_securityContext_fsGroup\"] || \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n                <div className={classes.containerItem}>\n                  <div className={classes.configSectionItem}>\n                    <SelectWrapper\n                      label=\"FsGroupChangePolicy\"\n                      id=\"securityContext_fsGroupChangePolicy\"\n                      name=\"securityContext_fsGroupChangePolicy\"\n                      value={tenantSecurityContext.fsGroupChangePolicy}\n                      onChange={(e: SelectChangeEvent<string>) => {\n                        updateField(\"tenantSecurityContext\", {\n                          ...tenantSecurityContext,\n                          fsGroupChangePolicy: e.target.value,\n                        });\n                      }}\n                      options={[\n                        {\n                          label: \"Always\",\n                          value: \"Always\",\n                        },\n                        {\n                          label: \"OnRootMismatch\",\n                          value: \"OnRootMismatch\",\n                        },\n                      ]}\n                    />\n                  </div>\n                </div>\n              </div>\n            </Grid>\n            <br />\n            <Grid item xs={12} className={classes.configSectionItem}>\n              <div className={classes.multiContainer}>\n                <FormSwitchWrapper\n                  value=\"tenantSecurityContextRunAsNonRoot\"\n                  id=\"tenant_securityContext_runAsNonRoot\"\n                  name=\"tenant_securityContext_runAsNonRoot\"\n                  checked={tenantSecurityContext.runAsNonRoot}\n                  onChange={(e) => {\n                    const targetD = e.target;\n                    const checked = targetD.checked;\n                    updateField(\"tenantSecurityContext\", {\n                      ...tenantSecurityContext,\n                      runAsNonRoot: checked,\n                    });\n                  }}\n                  label={\"Do not run as Root\"}\n                />\n              </div>\n            </Grid>\n          </fieldset>\n        </Grid>\n      )}\n      <Divider />\n\n      <div className={classes.headerElement}>\n        <h3 className={classes.h3Section}>Additional Environment Variables</h3>\n        <span className={classes.descriptionText}>\n          Define additional environment variables to be used by your MinIO pods\n        </span>\n      </div>\n      <Grid container>\n        {tenantEnvVars.map((envVar, index) => (\n          <Grid\n            item\n            xs={12}\n            className={`${classes.formFieldRow} ${classes.envVarRow}`}\n            key={`tenant-envVar-${index.toString()}`}\n          >\n            <Grid item xs={5} className={classes.fileItem}>\n              <InputBoxWrapper\n                id=\"env_var_key\"\n                name=\"env_var_key\"\n                label=\"Key\"\n                value={envVar.key}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  const existingEnvVars = [...tenantEnvVars];\n                  dispatch(\n                    setEnvVars(\n                      existingEnvVars.map((keyPair, i) =>\n                        i === index\n                          ? { key: e.target.value, value: keyPair.value }\n                          : keyPair\n                      )\n                    )\n                  );\n                }}\n                index={index}\n                key={`env_var_key_${index.toString()}`}\n              />\n            </Grid>\n            <Grid item xs={5} className={classes.fileItem}>\n              <InputBoxWrapper\n                id=\"env_var_value\"\n                name=\"env_var_value\"\n                label=\"Value\"\n                value={envVar.value}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  const existingEnvVars = [...tenantEnvVars];\n                  dispatch(\n                    setEnvVars(\n                      existingEnvVars.map((keyPair, i) =>\n                        i === index\n                          ? { key: keyPair.key, value: e.target.value }\n                          : keyPair\n                      )\n                    )\n                  );\n                }}\n                index={index}\n                key={`env_var_value_${index.toString()}`}\n              />\n            </Grid>\n            <Grid item xs={2} className={classes.rowActions}>\n              <div className={classes.overlayAction}>\n                <IconButton\n                  size={\"small\"}\n                  onClick={() => {\n                    const existingEnvVars = [...tenantEnvVars];\n                    existingEnvVars.push({ key: \"\", value: \"\" });\n\n                    dispatch(setEnvVars(existingEnvVars));\n                  }}\n                  disabled={index !== tenantEnvVars.length - 1}\n                >\n                  <AddIcon />\n                </IconButton>\n              </div>\n              <div className={classes.overlayAction}>\n                <IconButton\n                  size={\"small\"}\n                  onClick={() => {\n                    const existingEnvVars = tenantEnvVars.filter(\n                      (item, fIndex) => fIndex !== index\n                    );\n                    dispatch(setEnvVars(existingEnvVars));\n                  }}\n                  disabled={tenantEnvVars.length <= 1}\n                >\n                  <RemoveIcon />\n                </IconButton>\n              </div>\n            </Grid>\n          </Grid>\n        ))}\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(Configure);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Grid, IconButton, Tooltip, Typography } from \"@mui/material\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport FormSwitchWrapper from \"../../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport {\n  addIDPADUsrAtIndex,\n  isPageValid,\n  removeIDPADUsrAtIndex,\n  setIDPADUsrAtIndex,\n  updateAddField,\n  addIDPADGroupAtIndex,\n  removeIDPADGroupAtIndex,\n  setIDPADGroupAtIndex,\n} from \"../../createTenantSlice\";\nimport { useSelector } from \"react-redux\";\nimport { clearValidationError } from \"../../../utils\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    adUserDnRows: {\n      display: \"flex\",\n      marginBottom: 10,\n    },\n    buttonTray: {\n      marginLeft: 10,\n      display: \"flex\",\n      height: 38,\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    overlayAction: {\n      marginLeft: 10,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst IDPActiveDirectory = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const idpSelection = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.idpSelection\n  );\n  const ADURL = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.ADURL\n  );\n  const ADSkipTLS = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.ADSkipTLS\n  );\n  const ADServerInsecure = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADServerInsecure\n  );\n  const ADGroupSearchBaseDN = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADGroupSearchBaseDN\n  );\n  const ADGroupSearchFilter = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADGroupSearchFilter\n  );\n  const ADUserDNs = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.ADUserDNs\n  );\n  const ADGroupDNs = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.ADGroupDNs\n  );\n  const ADLookupBindDN = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADLookupBindDN\n  );\n  const ADLookupBindPassword = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADLookupBindPassword\n  );\n  const ADUserDNSearchBaseDN = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADUserDNSearchBaseDN\n  );\n  const ADUserDNSearchFilter = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADUserDNSearchFilter\n  );\n  const ADServerStartTLS = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADServerStartTLS\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({\n          pageName: \"identityProvider\",\n          field: field,\n          value: value,\n        })\n      );\n    },\n    [dispatch]\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  // Validation\n  useEffect(() => {\n    let customIDPValidation: IValidation[] = [];\n\n    if (idpSelection === \"AD\") {\n      customIDPValidation = [\n        ...customIDPValidation,\n        {\n          fieldKey: \"AD_URL\",\n          required: true,\n          value: ADURL,\n        },\n        {\n          fieldKey: \"ad_lookupBindDN\",\n          required: true,\n          value: ADLookupBindDN,\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(customIDPValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"identityProvider\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    ADLookupBindDN,\n    idpSelection,\n    ADURL,\n    ADGroupSearchBaseDN,\n    ADGroupSearchFilter,\n    ADUserDNs,\n    ADGroupDNs,\n    dispatch,\n  ]);\n\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"AD_URL\"\n          name=\"AD_URL\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"ADURL\", e.target.value);\n            cleanValidation(\"AD_URL\");\n          }}\n          label=\"LDAP Server Address\"\n          value={ADURL}\n          placeholder=\"ldap-server:636\"\n          error={validationErrors[\"AD_URL\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <FormSwitchWrapper\n          value=\"ad_skipTLS\"\n          id=\"ad_skipTLS\"\n          name=\"ad_skipTLS\"\n          checked={ADSkipTLS}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n            updateField(\"ADSkipTLS\", checked);\n          }}\n          label={\"Skip TLS Verification\"}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <FormSwitchWrapper\n          value=\"ad_serverInsecure\"\n          id=\"ad_serverInsecure\"\n          name=\"ad_serverInsecure\"\n          checked={ADServerInsecure}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n            updateField(\"ADServerInsecure\", checked);\n          }}\n          label={\"Server Insecure\"}\n        />\n      </Grid>\n      {ADServerInsecure ? (\n        <Grid item xs={12}>\n          <Typography\n            className={classes.error}\n            variant=\"caption\"\n            display=\"block\"\n            gutterBottom\n          >\n            Warning: All traffic with Active Directory will be unencrypted\n          </Typography>\n          <br />\n        </Grid>\n      ) : null}\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <FormSwitchWrapper\n          value=\"ad_serverStartTLS\"\n          id=\"ad_serverStartTLS\"\n          name=\"ad_serverStartTLS\"\n          checked={ADServerStartTLS}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n            updateField(\"ADServerStartTLS\", checked);\n          }}\n          label={\"Start TLS connection to AD/LDAP server\"}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"ad_lookupBindDN\"\n          name=\"ad_lookupBindDN\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"ADLookupBindDN\", e.target.value);\n            cleanValidation(\"ad_lookupBindDN\");\n          }}\n          label=\"Lookup Bind DN\"\n          value={ADLookupBindDN}\n          placeholder=\"cn=admin,dc=min,dc=io\"\n          error={validationErrors[\"ad_lookupBindDN\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"ad_lookupBindPassword\"\n          name=\"ad_lookupBindPassword\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"ADLookupBindPassword\", e.target.value);\n          }}\n          label=\"Lookup Bind Password\"\n          value={ADLookupBindPassword}\n          placeholder=\"admin\"\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"ad_userDNSearchBaseDN\"\n          name=\"ad_userDNSearchBaseDN\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"ADUserDNSearchBaseDN\", e.target.value);\n          }}\n          label=\"User DN Search Base DN\"\n          value={ADUserDNSearchBaseDN}\n          placeholder=\"dc=min,dc=io\"\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"ad_userDNSearchFilter\"\n          name=\"ad_userDNSearchFilter\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"ADUserDNSearchFilter\", e.target.value);\n          }}\n          label=\"User DN Search Filter\"\n          value={ADUserDNSearchFilter}\n          placeholder=\"(sAMAcountName=%s)\"\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"ad_groupSearchBaseDN\"\n          name=\"ad_groupSearchBaseDN\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"ADGroupSearchBaseDN\", e.target.value);\n          }}\n          label=\"Group Search Base DN\"\n          value={ADGroupSearchBaseDN}\n          placeholder=\"ou=hwengg,dc=min,dc=io;ou=swengg,dc=min,dc=io\"\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"ad_groupSearchFilter\"\n          name=\"ad_groupSearchFilter\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"ADGroupSearchFilter\", e.target.value);\n          }}\n          label=\"Group Search Filter\"\n          value={ADGroupSearchFilter}\n          placeholder=\"(&(objectclass=groupOfNames)(member=%s))\"\n        />\n      </Grid>\n      <fieldset className={classes.fieldGroup}>\n        <legend className={classes.descriptionText}>\n          List of user DNs (Distinguished Names) to be Tenant Administrators\n        </legend>\n        <Grid item xs={12}>\n          {ADUserDNs.map((_, index) => {\n            return (\n              <Fragment key={`identityField-${index.toString()}`}>\n                <div className={classes.adUserDnRows}>\n                  <InputBoxWrapper\n                    id={`ad-userdn-${index.toString()}`}\n                    label={\"\"}\n                    placeholder=\"\"\n                    name={`ad-userdn-${index.toString()}`}\n                    value={ADUserDNs[index]}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      dispatch(\n                        setIDPADUsrAtIndex({\n                          index: index,\n                          userDN: e.target.value,\n                        })\n                      );\n                      cleanValidation(`ad-userdn-${index.toString()}`);\n                    }}\n                    index={index}\n                    key={`csv-ad-userdn-${index.toString()}`}\n                    error={\n                      validationErrors[`ad-userdn-${index.toString()}`] || \"\"\n                    }\n                  />\n                  <div className={classes.buttonTray}>\n                    <Tooltip title=\"Add User\" aria-label=\"add\">\n                      <IconButton\n                        size={\"small\"}\n                        onClick={() => {\n                          dispatch(addIDPADUsrAtIndex());\n                        }}\n                      >\n                        <AddIcon />\n                      </IconButton>\n                    </Tooltip>\n                    <Tooltip title=\"Remove\" aria-label=\"add\">\n                      <IconButton\n                        size={\"small\"}\n                        style={{ marginLeft: 16 }}\n                        onClick={() => {\n                          if (ADUserDNs.length > 1) {\n                            dispatch(removeIDPADUsrAtIndex(index));\n                          }\n                        }}\n                      >\n                        <DeleteIcon />\n                      </IconButton>\n                    </Tooltip>\n                  </div>\n                </div>\n              </Fragment>\n            );\n          })}\n        </Grid>\n      </fieldset>\n      <fieldset className={classes.fieldGroup}>\n        <legend className={classes.descriptionText}>\n          List of group DNs (Distinguished Names) to be Tenant Administrators\n        </legend>\n        <Grid item xs={12}>\n          {ADGroupDNs.map((_, index) => {\n            return (\n              <Fragment key={`identityField-${index.toString()}`}>\n                <div className={classes.adUserDnRows}>\n                  <InputBoxWrapper\n                    id={`ad-groupdn-${index.toString()}`}\n                    label={\"\"}\n                    placeholder=\"\"\n                    name={`ad-groupdn-${index.toString()}`}\n                    value={ADGroupDNs[index]}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      dispatch(\n                        setIDPADGroupAtIndex({\n                          index: index,\n                          userDN: e.target.value,\n                        })\n                      );\n                      cleanValidation(`ad-groupdn-${index.toString()}`);\n                    }}\n                    index={index}\n                    key={`csv-ad-groupdn-${index.toString()}`}\n                    error={\n                      validationErrors[`ad-groupdn-${index.toString()}`] || \"\"\n                    }\n                  />\n                  <div className={classes.buttonTray}>\n                    <Tooltip title=\"Add Group\" aria-label=\"add\">\n                      <IconButton\n                        size={\"small\"}\n                        onClick={() => {\n                          dispatch(addIDPADGroupAtIndex());\n                        }}\n                      >\n                        <AddIcon />\n                      </IconButton>\n                    </Tooltip>\n                    <Tooltip title=\"Remove\" aria-label=\"add\">\n                      <IconButton\n                        size={\"small\"}\n                        style={{ marginLeft: 16 }}\n                        onClick={() => {\n                          if (ADGroupDNs.length > 1) {\n                            dispatch(removeIDPADGroupAtIndex(index));\n                          }\n                        }}\n                      >\n                        <DeleteIcon />\n                      </IconButton>\n                    </Tooltip>\n                  </div>\n                </div>\n              </Fragment>\n            );\n          })}\n        </Grid>\n      </fieldset>\n    </Fragment>\n  );\n};\n\nexport default IDPActiveDirectory;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Grid } from \"@mui/material\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { isPageValid, updateAddField } from \"../../createTenantSlice\";\nimport { clearValidationError } from \"../../../utils\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    buttonTray: {\n      marginLeft: 10,\n      display: \"flex\",\n      height: 38,\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    overlayAction: {\n      marginLeft: 10,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst IDPOpenID = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const idpSelection = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.idpSelection\n  );\n  const openIDConfigurationURL = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.openIDConfigurationURL\n  );\n  const openIDClientID = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.openIDClientID\n  );\n  const openIDSecretID = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.openIDSecretID\n  );\n  const openIDCallbackURL = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.openIDCallbackURL\n  );\n  const openIDClaimName = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.openIDClaimName\n  );\n  const openIDScopes = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.openIDScopes\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({\n          pageName: \"identityProvider\",\n          field: field,\n          value: value,\n        })\n      );\n    },\n    [dispatch]\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  // Validation\n  useEffect(() => {\n    let customIDPValidation: IValidation[] = [];\n\n    if (idpSelection === \"OpenID\") {\n      customIDPValidation = [\n        ...customIDPValidation,\n        {\n          fieldKey: \"openID_CONFIGURATION_URL\",\n          required: true,\n          value: openIDConfigurationURL,\n        },\n        {\n          fieldKey: \"openID_clientID\",\n          required: true,\n          value: openIDClientID,\n        },\n        {\n          fieldKey: \"openID_secretID\",\n          required: true,\n          value: openIDSecretID,\n        },\n        {\n          fieldKey: \"openID_claimName\",\n          required: true,\n          value: openIDClaimName,\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(customIDPValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"identityProvider\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    idpSelection,\n    openIDClientID,\n    openIDSecretID,\n    openIDConfigurationURL,\n    openIDClaimName,\n    dispatch,\n  ]);\n\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"openID_CONFIGURATION_URL\"\n          name=\"openID_CONFIGURATION_URL\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"openIDConfigurationURL\", e.target.value);\n            cleanValidation(\"openID_CONFIGURATION_URL\");\n          }}\n          label=\"Configuration URL\"\n          value={openIDConfigurationURL}\n          placeholder=\"https://your-identity-provider.com/.well-known/openid-configuration\"\n          error={validationErrors[\"openID_CONFIGURATION_URL\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"openID_clientID\"\n          name=\"openID_clientID\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"openIDClientID\", e.target.value);\n            cleanValidation(\"openID_clientID\");\n          }}\n          label=\"Client ID\"\n          value={openIDClientID}\n          error={validationErrors[\"openID_clientID\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"openID_secretID\"\n          name=\"openID_secretID\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"openIDSecretID\", e.target.value);\n            cleanValidation(\"openID_secretID\");\n          }}\n          label=\"Secret ID\"\n          value={openIDSecretID}\n          error={validationErrors[\"openID_secretID\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"openID_callbackURL\"\n          name=\"openID_callbackURL\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"openIDCallbackURL\", e.target.value);\n            cleanValidation(\"openID_callbackURL\");\n          }}\n          label=\"Callback URL\"\n          value={openIDCallbackURL}\n          placeholder=\"https://your-console-endpoint:9443/oauth_callback\"\n          error={validationErrors[\"openID_callbackURL\"] || \"\"}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"openID_claimName\"\n          name=\"openID_claimName\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"openIDClaimName\", e.target.value);\n            cleanValidation(\"openID_claimName\");\n          }}\n          label=\"Claim Name\"\n          value={openIDClaimName}\n          error={validationErrors[\"openID_claimName\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"openID_scopes\"\n          name=\"openID_scopes\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"openIDScopes\", e.target.value);\n            cleanValidation(\"openID_scopes\");\n          }}\n          label=\"Scopes\"\n          value={openIDScopes}\n        />\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default IDPOpenID;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport {\n  addIDPNewKeyPair,\n  isPageValid,\n  removeIDPKeyPairAtIndex,\n  setIDPPwdAtIndex,\n  setIDPUsrAtIndex,\n} from \"../../createTenantSlice\";\nimport { IconButton, Tooltip } from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { RemoveIcon } from \"mds\";\nimport { clearValidationError, getRandomString } from \"../../../utils\";\nimport CasinoIcon from \"@mui/icons-material/Casino\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    buttonTray: {\n      marginLeft: 10,\n      display: \"flex\",\n      height: 38,\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    overlayAction: {\n      marginLeft: 10,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    shortened: {\n      gridTemplateColumns: \"auto auto 50px 50px\",\n      display: \"grid\",\n      gridGap: 15,\n      marginBottom: 10,\n      \"& input\": {\n        fontWeight: 400,\n      },\n    },\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst IDPBuiltIn = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const idpSelection = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.idpSelection\n  );\n  const accessKeys = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.accessKeys\n  );\n  const secretKeys = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.secretKeys\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  // Validation\n  useEffect(() => {\n    let customIDPValidation: IValidation[] = [];\n\n    if (idpSelection === \"Built-in\") {\n      customIDPValidation = [...customIDPValidation];\n      for (var i = 0; i < accessKeys.length; i++) {\n        customIDPValidation.push({\n          fieldKey: `accesskey-${i.toString()}`,\n          required: true,\n          value: accessKeys[i],\n          pattern: /^[a-zA-Z0-9-]{8,63}$/,\n          customPatternMessage: \"Keys must be at least length 8\",\n        });\n        customIDPValidation.push({\n          fieldKey: `secretkey-${i.toString()}`,\n          required: true,\n          value: secretKeys[i],\n          pattern: /^[a-zA-Z0-9-]{8,63}$/,\n          customPatternMessage: \"Keys must be at least length 8\",\n        });\n      }\n    }\n\n    const commonVal = commonFormValidation(customIDPValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"identityProvider\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [idpSelection, accessKeys, secretKeys, dispatch]);\n\n  return (\n    <Fragment>\n      Add additional users\n      {accessKeys.map((_, index) => {\n        return (\n          <Fragment key={`identityField-${index.toString()}`}>\n            <div className={classes.shortened}>\n              <InputBoxWrapper\n                id={`accesskey-${index.toString()}`}\n                label={\"\"}\n                placeholder={\"Access Key\"}\n                name={`accesskey-${index.toString()}`}\n                value={accessKeys[index]}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  dispatch(\n                    setIDPUsrAtIndex({\n                      index,\n                      accessKey: e.target.value,\n                    })\n                  );\n                  cleanValidation(`accesskey-${index.toString()}`);\n                }}\n                index={index}\n                key={`csv-accesskey-${index.toString()}`}\n                error={validationErrors[`accesskey-${index.toString()}`] || \"\"}\n              />\n              <InputBoxWrapper\n                id={`secretkey-${index.toString()}`}\n                label={\"\"}\n                placeholder={\"Secret Key\"}\n                name={`secretkey-${index.toString()}`}\n                value={secretKeys[index]}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  dispatch(\n                    setIDPPwdAtIndex({\n                      index,\n                      secretKey: e.target.value,\n                    })\n                  );\n                  cleanValidation(`secretkey-${index.toString()}`);\n                }}\n                index={index}\n                key={`csv-secretkey-${index.toString()}`}\n                error={validationErrors[`secretkey-${index.toString()}`] || \"\"}\n              />\n              <div className={classes.buttonTray}>\n                <div className={classes.overlayAction}>\n                  <IconButton\n                    size={\"small\"}\n                    onClick={() => {\n                      dispatch(addIDPNewKeyPair());\n                    }}\n                    disabled={index !== accessKeys.length - 1}\n                  >\n                    <AddIcon />\n                  </IconButton>\n                </div>\n                <div className={classes.overlayAction}>\n                  <IconButton\n                    size={\"small\"}\n                    onClick={() => {\n                      dispatch(removeIDPKeyPairAtIndex(index));\n                    }}\n                    disabled={accessKeys.length <= 1}\n                  >\n                    <RemoveIcon />\n                  </IconButton>\n                </div>\n                <Tooltip title=\"Randomize Credentials\" aria-label=\"add\">\n                  <div className={classes.overlayAction}>\n                    <IconButton\n                      onClick={() => {\n                        dispatch(\n                          setIDPUsrAtIndex({\n                            index,\n                            accessKey: getRandomString(16),\n                          })\n                        );\n                        dispatch(\n                          setIDPPwdAtIndex({\n                            index,\n                            secretKey: getRandomString(16),\n                          })\n                        );\n                      }}\n                      size={\"small\"}\n                    >\n                      <CasinoIcon />\n                    </IconButton>\n                  </div>\n                </Tooltip>\n              </div>\n            </div>\n          </Fragment>\n        );\n      })}\n    </Fragment>\n  );\n};\n\nexport default IDPBuiltIn;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport { Grid, Paper } from \"@mui/material\";\nimport {\n  createTenantCommon,\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport { AppState, useAppDispatch } from \"../../../../../store\";\nimport RadioGroupSelector from \"../../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\nimport { setIDP } from \"../createTenantSlice\";\nimport IDPActiveDirectory from \"./IdentityProvider/IDPActiveDirectory\";\nimport IDPOpenID from \"./IdentityProvider/IDPOpenID\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport IDPBuiltIn from \"./IdentityProvider/IDPBuiltIn\";\nimport {\n  OIDCLogoElement,\n  LDAPLogoElement,\n  BuiltInLogoElement,\n} from \"../../LogoComponents\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    protocolRadioOptions: {\n      display: \"flex\",\n      flexFlow: \"column\",\n      marginBottom: 10,\n\n      \"& label\": {\n        fontSize: 16,\n        fontWeight: 600,\n      },\n      \"& div\": {\n        display: \"flex\",\n        flexFlow: \"row\",\n        alignItems: \"top\",\n      },\n    },\n    ...createTenantCommon,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst IdentityProvider = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const idpSelection = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.idpSelection\n  );\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <h3 className={classes.h3Section}>Identity Provider</h3>\n        <span className={classes.descriptionText}>\n          Access to the tenant can be controlled via an external Identity\n          Manager.\n        </span>\n      </div>\n      <Grid item xs={12} padding=\"10px\">\n        <RadioGroupSelector\n          currentSelection={idpSelection}\n          id=\"idp-options\"\n          name=\"idp-options\"\n          label=\"Protocol\"\n          onChange={(e) => {\n            dispatch(setIDP(e.target.value));\n          }}\n          selectorOptions={[\n            { label: <BuiltInLogoElement />, value: \"Built-in\" },\n            { label: <OIDCLogoElement />, value: \"OpenID\" },\n            { label: <LDAPLogoElement />, value: \"AD\" },\n          ]}\n        />\n      </Grid>\n      {idpSelection === \"Built-in\" && <IDPBuiltIn />}\n      {idpSelection === \"OpenID\" && <IDPOpenID />}\n      {idpSelection === \"AD\" && <IDPActiveDirectory />}\n    </Paper>\n  );\n};\n\nexport default IdentityProvider;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, IconButton, Paper } from \"@mui/material\";\nimport {\n  createTenantCommon,\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\n\nimport { AppState, useAppDispatch } from \"../../../../../store\";\nimport { KeyPair } from \"../../ListTenants/utils\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport FileSelector from \"../../../Common/FormComponents/FileSelector/FileSelector\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { RemoveIcon } from \"mds\";\nimport {\n  addCaCertificate,\n  deleteCaCertificate,\n  addFileToCaCertificates,\n  addFileToKeyPair,\n  addKeyPair,\n  deleteKeyPair,\n  addClientKeyPair,\n  deleteClientKeyPair,\n  addFileToClientKeyPair,\n  isPageValid,\n  updateAddField,\n} from \"../createTenantSlice\";\nimport TLSHelpBox from \"../../HelpBox/TLSHelpBox\";\n\ninterface ISecurityProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    minioCertificateRows: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-start\",\n      borderBottom: \"1px solid #EAEAEA\",\n      \"&:last-child\": {\n        borderBottom: 0,\n      },\n      \"@media (max-width: 900px)\": {\n        flex: 1,\n      },\n    },\n    fileItem: {\n      marginRight: 10,\n      display: \"flex\",\n      \"& div label\": {\n        minWidth: 50,\n      },\n\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n      },\n    },\n    minioCertsContainer: {\n      marginBottom: 15,\n    },\n    minioCACertsRow: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-start\",\n\n      borderBottom: \"1px solid #EAEAEA\",\n      \"&:last-child\": {\n        borderBottom: 0,\n      },\n      \"@media (max-width: 900px)\": {\n        flex: 1,\n\n        \"& div label\": {\n          minWidth: 50,\n        },\n      },\n    },\n    rowActions: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      \"@media (max-width: 900px)\": {\n        flex: 1,\n      },\n    },\n    overlayAction: {\n      marginLeft: 10,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n\n    ...createTenantCommon,\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst Security = ({ classes }: ISecurityProps) => {\n  const dispatch = useAppDispatch();\n\n  const enableTLS = useSelector(\n    (state: AppState) => state.createTenant.fields.security.enableTLS\n  );\n  const enableAutoCert = useSelector(\n    (state: AppState) => state.createTenant.fields.security.enableAutoCert\n  );\n  const enableCustomCerts = useSelector(\n    (state: AppState) => state.createTenant.fields.security.enableCustomCerts\n  );\n  const minioCertificates = useSelector(\n    (state: AppState) => state.createTenant.certificates.minioServerCertificates\n  );\n  const minioClientCertificates = useSelector(\n    (state: AppState) => state.createTenant.certificates.minioClientCertificates\n  );\n  const caCertificates = useSelector(\n    (state: AppState) => state.createTenant.certificates.minioCAsCertificates\n  );\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"security\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  // Validation\n\n  useEffect(() => {\n    if (!enableTLS) {\n      dispatch(isPageValid({ pageName: \"security\", valid: true }));\n      return;\n    }\n    if (enableAutoCert) {\n      dispatch(isPageValid({ pageName: \"security\", valid: true }));\n      return;\n    }\n    if (enableCustomCerts) {\n      dispatch(isPageValid({ pageName: \"security\", valid: true }));\n      return;\n    }\n    dispatch(isPageValid({ pageName: \"security\", valid: false }));\n  }, [enableTLS, enableAutoCert, enableCustomCerts, dispatch]);\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <h3 className={classes.h3Section}>Security</h3>\n      </div>\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <FormSwitchWrapper\n            value=\"enableTLS\"\n            id=\"enableTLS\"\n            name=\"enableTLS\"\n            checked={enableTLS}\n            onChange={(e) => {\n              const targetD = e.target;\n              const checked = targetD.checked;\n\n              updateField(\"enableTLS\", checked);\n            }}\n            label={\"TLS\"}\n            description={\n              \"Securing all the traffic using TLS. This is required for Encryption Configuration\"\n            }\n          />\n        </Grid>\n        {enableTLS && (\n          <Fragment>\n            <Grid item xs={12}>\n              <FormSwitchWrapper\n                value=\"enableAutoCert\"\n                id=\"enableAutoCert\"\n                name=\"enableAutoCert\"\n                checked={enableAutoCert}\n                onChange={(e) => {\n                  const targetD = e.target;\n                  const checked = targetD.checked;\n                  updateField(\"enableAutoCert\", checked);\n                }}\n                label={\"AutoCert\"}\n                description={\n                  \"The internode certificates will be generated and managed by MinIO Operator\"\n                }\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormSwitchWrapper\n                value=\"enableCustomCerts\"\n                id=\"enableCustomCerts\"\n                name=\"enableCustomCerts\"\n                checked={enableCustomCerts}\n                onChange={(e) => {\n                  const targetD = e.target;\n                  const checked = targetD.checked;\n                  updateField(\"enableCustomCerts\", checked);\n                }}\n                label={\"Custom Certificates\"}\n                description={\"Certificates used to terminated TLS at MinIO\"}\n              />\n            </Grid>\n            {enableCustomCerts && (\n              <Fragment>\n                {!enableAutoCert && (\n                  <Grid item xs={12}>\n                    <TLSHelpBox />\n                  </Grid>\n                )}\n                <Grid item xs={12} className={classes.minioCertsContainer}>\n                  <h5>MinIO Server Certificates</h5>\n                  {minioCertificates.map((keyPair: KeyPair, index) => (\n                    <Grid\n                      item\n                      xs={12}\n                      key={`minio-certs-${keyPair.id}`}\n                      className={classes.minioCertificateRows}\n                    >\n                      <Grid item xs={10} className={classes.fileItem}>\n                        <FileSelector\n                          onChange={(encodedValue, fileName) => {\n                            dispatch(\n                              addFileToKeyPair({\n                                id: keyPair.id,\n                                key: \"cert\",\n                                fileName: fileName,\n                                value: encodedValue,\n                              })\n                            );\n                          }}\n                          accept=\".cer,.crt,.cert,.pem\"\n                          id=\"tlsCert\"\n                          name=\"tlsCert\"\n                          label=\"Cert\"\n                          value={keyPair.cert}\n                        />\n                        <FileSelector\n                          onChange={(encodedValue, fileName) => {\n                            dispatch(\n                              addFileToKeyPair({\n                                id: keyPair.id,\n                                key: \"key\",\n                                fileName: fileName,\n                                value: encodedValue,\n                              })\n                            );\n                          }}\n                          accept=\".key,.pem\"\n                          id=\"tlsKey\"\n                          name=\"tlsKey\"\n                          label=\"Key\"\n                          value={keyPair.key}\n                        />\n                      </Grid>\n\n                      <Grid item xs={2} className={classes.rowActions}>\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => {\n                              dispatch(addKeyPair());\n                            }}\n                            disabled={index !== minioCertificates.length - 1}\n                          >\n                            <AddIcon />\n                          </IconButton>\n                        </div>\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => {\n                              dispatch(deleteKeyPair(keyPair.id));\n                            }}\n                            disabled={minioCertificates.length <= 1}\n                          >\n                            <RemoveIcon />\n                          </IconButton>\n                        </div>\n                      </Grid>\n                    </Grid>\n                  ))}\n                </Grid>\n                <Grid item xs={12} className={classes.minioCertsContainer}>\n                  <h5>MinIO Client Certificates</h5>\n                  {minioClientCertificates.map((keyPair: KeyPair, index) => (\n                    <Grid\n                      item\n                      xs={12}\n                      key={`minio-certs-${keyPair.id}`}\n                      className={classes.minioCertificateRows}\n                    >\n                      <Grid item xs={10} className={classes.fileItem}>\n                        <FileSelector\n                          onChange={(encodedValue, fileName) => {\n                            dispatch(\n                              addFileToClientKeyPair({\n                                id: keyPair.id,\n                                key: \"cert\",\n                                fileName: fileName,\n                                value: encodedValue,\n                              })\n                            );\n                          }}\n                          accept=\".cer,.crt,.cert,.pem\"\n                          id=\"tlsCert\"\n                          name=\"tlsCert\"\n                          label=\"Cert\"\n                          value={keyPair.cert}\n                        />\n                        <FileSelector\n                          onChange={(encodedValue, fileName) => {\n                            dispatch(\n                              addFileToClientKeyPair({\n                                id: keyPair.id,\n                                key: \"key\",\n                                fileName: fileName,\n                                value: encodedValue,\n                              })\n                            );\n                          }}\n                          accept=\".key,.pem\"\n                          id=\"tlsKey\"\n                          name=\"tlsKey\"\n                          label=\"Key\"\n                          value={keyPair.key}\n                        />\n                      </Grid>\n\n                      <Grid item xs={2} className={classes.rowActions}>\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => {\n                              dispatch(addClientKeyPair());\n                            }}\n                            disabled={\n                              index !== minioClientCertificates.length - 1\n                            }\n                          >\n                            <AddIcon />\n                          </IconButton>\n                        </div>\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => {\n                              dispatch(deleteClientKeyPair(keyPair.id));\n                            }}\n                            disabled={minioClientCertificates.length <= 1}\n                          >\n                            <RemoveIcon />\n                          </IconButton>\n                        </div>\n                      </Grid>\n                    </Grid>\n                  ))}\n                </Grid>\n                <Grid item xs={12} className={classes.minioCertsContainer}>\n                  <h5>MinIO CA Certificates</h5>\n                  {caCertificates.map((keyPair: KeyPair, index) => (\n                    <Grid\n                      item\n                      xs={12}\n                      key={`minio-CA-certs-${keyPair.id}`}\n                      className={classes.minioCACertsRow}\n                    >\n                      <Grid item xs={6}>\n                        <FileSelector\n                          onChange={(encodedValue, fileName) => {\n                            dispatch(\n                              addFileToCaCertificates({\n                                id: keyPair.id,\n                                key: \"cert\",\n                                fileName: fileName,\n                                value: encodedValue,\n                              })\n                            );\n                          }}\n                          accept=\".cer,.crt,.cert,.pem\"\n                          id=\"tlsCert\"\n                          name=\"tlsCert\"\n                          label=\"Cert\"\n                          value={keyPair.cert}\n                        />\n                      </Grid>\n                      <Grid item xs={6}>\n                        <div className={classes.rowActions}>\n                          <div className={classes.overlayAction}>\n                            <IconButton\n                              size={\"small\"}\n                              onClick={() => {\n                                dispatch(addCaCertificate());\n                              }}\n                              disabled={index !== caCertificates.length - 1}\n                            >\n                              <AddIcon />\n                            </IconButton>\n                          </div>\n                          <div className={classes.overlayAction}>\n                            <IconButton\n                              size={\"small\"}\n                              onClick={() => {\n                                dispatch(deleteCaCertificate(keyPair.id));\n                              }}\n                              disabled={caCertificates.length <= 1}\n                            >\n                              <RemoveIcon />\n                            </IconButton>\n                          </div>\n                        </div>\n                      </Grid>\n                    </Grid>\n                  ))}\n                </Grid>\n              </Fragment>\n            )}\n          </Fragment>\n        )}\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(Security);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\n\ntype Props = {\n  children: string;\n};\n\nconst SectionH1: React.FC<Props> = ({ children }) => {\n  return (\n    <h1 style={{ margin: 0, marginBottom: \".8rem\", fontSize: \"1.3rem\" }}>\n      {children}\n    </h1>\n  );\n};\n\nexport default SectionH1;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\n\nimport { isPageValid, updateAddField } from \"../../createTenantSlice\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\nimport { clearValidationError } from \"../../../utils\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst VaultKMSAdd = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const encryptionTab = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.encryptionTab\n  );\n  const vaultEndpoint = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultEndpoint\n  );\n  const vaultEngine = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultEngine\n  );\n  const vaultNamespace = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultNamespace\n  );\n  const vaultPrefix = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultPrefix\n  );\n  const vaultAppRoleEngine = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultAppRoleEngine\n  );\n  const vaultId = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultId\n  );\n  const vaultSecret = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultSecret\n  );\n  const vaultRetry = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultRetry\n  );\n  const vaultPing = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultPing\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  // Validation\n  useEffect(() => {\n    let encryptionValidation: IValidation[] = [];\n\n    if (!encryptionTab) {\n      encryptionValidation = [\n        ...encryptionValidation,\n        {\n          fieldKey: \"vault_endpoint\",\n          required: true,\n          value: vaultEndpoint,\n        },\n        {\n          fieldKey: \"vault_id\",\n          required: true,\n          value: vaultId,\n        },\n        {\n          fieldKey: \"vault_secret\",\n          required: true,\n          value: vaultSecret,\n        },\n        {\n          fieldKey: \"vault_ping\",\n          required: false,\n          value: vaultPing,\n          customValidation: parseInt(vaultPing) < 0,\n          customValidationMessage: \"Value needs to be 0 or greater\",\n        },\n        {\n          fieldKey: \"vault_retry\",\n          required: false,\n          value: vaultRetry,\n          customValidation: parseInt(vaultRetry) < 0,\n          customValidationMessage: \"Value needs to be 0 or greater\",\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(encryptionValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"encryption\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    encryptionTab,\n    vaultEndpoint,\n    vaultEngine,\n    vaultId,\n    vaultSecret,\n    vaultPing,\n    vaultRetry,\n    dispatch,\n  ]);\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"encryption\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"vault_endpoint\"\n          name=\"vault_endpoint\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"vaultEndpoint\", e.target.value);\n            cleanValidation(\"vault_endpoint\");\n          }}\n          label=\"Endpoint\"\n          value={vaultEndpoint}\n          error={validationErrors[\"vault_endpoint\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"vault_engine\"\n          name=\"vault_engine\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"vaultEngine\", e.target.value);\n            cleanValidation(\"vault_engine\");\n          }}\n          label=\"Engine\"\n          value={vaultEngine}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"vault_namespace\"\n          name=\"vault_namespace\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"vaultNamespace\", e.target.value);\n          }}\n          label=\"Namespace\"\n          value={vaultNamespace}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"vault_prefix\"\n          name=\"vault_prefix\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"vaultPrefix\", e.target.value);\n          }}\n          label=\"Prefix\"\n          value={vaultPrefix}\n        />\n      </Grid>\n\n      <Grid item xs={12}>\n        <fieldset className={classes.fieldGroup}>\n          <legend className={classes.descriptionText}>App Role</legend>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"vault_approle_engine\"\n              name=\"vault_approle_engine\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"vaultAppRoleEngine\", e.target.value);\n              }}\n              label=\"Engine\"\n              value={vaultAppRoleEngine}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"vault_id\"\n              name=\"vault_id\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"vaultId\", e.target.value);\n                cleanValidation(\"vault_id\");\n              }}\n              label=\"AppRole ID\"\n              value={vaultId}\n              error={validationErrors[\"vault_id\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"vault_secret\"\n              name=\"vault_secret\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"vaultSecret\", e.target.value);\n                cleanValidation(\"vault_secret\");\n              }}\n              label=\"AppRole Secret\"\n              value={vaultSecret}\n              error={validationErrors[\"vault_secret\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              type=\"number\"\n              min=\"0\"\n              id=\"vault_retry\"\n              name=\"vault_retry\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"vaultRetry\", e.target.value);\n                cleanValidation(\"vault_retry\");\n              }}\n              label=\"Retry (Seconds)\"\n              value={vaultRetry}\n              error={validationErrors[\"vault_retry\"] || \"\"}\n            />\n          </Grid>\n        </fieldset>\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        className={classes.formFieldRow}\n        style={{ marginTop: 15 }}\n      >\n        <fieldset className={classes.fieldGroup}>\n          <legend className={classes.descriptionText}>Status</legend>\n          <InputBoxWrapper\n            type=\"number\"\n            min=\"0\"\n            id=\"vault_ping\"\n            name=\"vault_ping\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"vaultPing\", e.target.value);\n              cleanValidation(\"vault_ping\");\n            }}\n            label=\"Ping (Seconds)\"\n            value={vaultPing}\n            error={validationErrors[\"vault_ping\"] || \"\"}\n          />\n        </fieldset>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default VaultKMSAdd;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\nimport { isPageValid, updateAddField } from \"../../createTenantSlice\";\nimport { clearValidationError } from \"../../../utils\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst AzureKMSAdd = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const encryptionTab = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.encryptionTab\n  );\n  const azureEndpoint = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.azureEndpoint\n  );\n  const azureTenantID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.azureTenantID\n  );\n  const azureClientID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.azureClientID\n  );\n  const azureClientSecret = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.azureClientSecret\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  // Validation\n  useEffect(() => {\n    let encryptionValidation: IValidation[] = [];\n\n    if (!encryptionTab) {\n      encryptionValidation = [\n        ...encryptionValidation,\n        {\n          fieldKey: \"azure_endpoint\",\n          required: true,\n          value: azureEndpoint,\n        },\n        {\n          fieldKey: \"azure_tenant_id\",\n          required: true,\n          value: azureTenantID,\n        },\n        {\n          fieldKey: \"azure_client_id\",\n          required: true,\n          value: azureClientID,\n        },\n        {\n          fieldKey: \"azure_client_secret\",\n          required: true,\n          value: azureClientSecret,\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(encryptionValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"encryption\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    encryptionTab,\n    azureEndpoint,\n    azureTenantID,\n    azureClientID,\n    azureClientSecret,\n    dispatch,\n  ]);\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"encryption\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"azure_endpoint\"\n          name=\"azure_endpoint\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"azureEndpoint\", e.target.value);\n            cleanValidation(\"azure_endpoint\");\n          }}\n          label=\"Endpoint\"\n          value={azureEndpoint}\n          error={validationErrors[\"azure_endpoint\"] || \"\"}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <fieldset className={classes.fieldGroup}>\n          <legend className={classes.descriptionText}>Credentials</legend>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"azure_tenant_id\"\n              name=\"azure_tenant_id\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"azureTenantID\", e.target.value);\n                cleanValidation(\"azure_tenant_id\");\n              }}\n              label=\"Tenant ID\"\n              value={azureTenantID}\n              error={validationErrors[\"azure_tenant_id\"] || \"\"}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"azure_client_id\"\n              name=\"azure_client_id\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"azureClientID\", e.target.value);\n                cleanValidation(\"azure_client_id\");\n              }}\n              label=\"Client ID\"\n              value={azureClientID}\n              error={validationErrors[\"azure_client_id\"] || \"\"}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"azure_client_secret\"\n              name=\"azure_client_secret\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"azureClientSecret\", e.target.value);\n                cleanValidation(\"azure_client_secret\");\n              }}\n              label=\"Client Secret\"\n              value={azureClientSecret}\n              error={validationErrors[\"azure_client_secret\"] || \"\"}\n            />\n          </Grid>\n        </fieldset>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default AzureKMSAdd;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { updateAddField } from \"../../createTenantSlice\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst GCPKMSAdd = () => {\n  const classes = useStyles();\n  const dispatch = useAppDispatch();\n\n  const gcpProjectID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpProjectID\n  );\n  const gcpEndpoint = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpEndpoint\n  );\n  const gcpClientEmail = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpClientEmail\n  );\n  const gcpClientID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpClientID\n  );\n  const gcpPrivateKeyID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpPrivateKeyID\n  );\n  const gcpPrivateKey = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpPrivateKey\n  );\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"encryption\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"gcp_project_id\"\n          name=\"gcp_project_id\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"gcpProjectID\", e.target.value);\n          }}\n          label=\"Project ID\"\n          value={gcpProjectID}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"gcp_endpoint\"\n          name=\"gcp_endpoint\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"gcpEndpoint\", e.target.value);\n          }}\n          label=\"Endpoint\"\n          value={gcpEndpoint}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <fieldset className={classes.fieldGroup}>\n          <legend className={classes.descriptionText}>Credentials</legend>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"gcp_client_email\"\n              name=\"gcp_client_email\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"gcpClientEmail\", e.target.value);\n              }}\n              label=\"Client Email\"\n              value={gcpClientEmail}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"gcp_client_id\"\n              name=\"gcp_client_id\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"gcpClientID\", e.target.value);\n              }}\n              label=\"Client ID\"\n              value={gcpClientID}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"gcp_private_key_id\"\n              name=\"gcp_private_key_id\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"gcpPrivateKeyID\", e.target.value);\n              }}\n              label=\"Private Key ID\"\n              value={gcpPrivateKeyID}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"gcp_private_key\"\n              name=\"gcp_private_key\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"gcpPrivateKey\", e.target.value);\n              }}\n              label=\"Private Key\"\n              value={gcpPrivateKey}\n            />\n          </Grid>\n        </fieldset>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default GCPKMSAdd;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { isPageValid, updateAddField } from \"../../createTenantSlice\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\nimport { clearValidationError } from \"../../../utils\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst GemaltoKMSAdd = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const encryptionTab = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.encryptionTab\n  );\n  const gemaltoEndpoint = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gemaltoEndpoint\n  );\n  const gemaltoToken = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gemaltoToken\n  );\n  const gemaltoDomain = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gemaltoDomain\n  );\n  const gemaltoRetry = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gemaltoRetry\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  // Validation\n  useEffect(() => {\n    let encryptionValidation: IValidation[] = [];\n\n    if (!encryptionTab) {\n      encryptionValidation = [\n        ...encryptionValidation,\n        {\n          fieldKey: \"gemalto_endpoint\",\n          required: true,\n          value: gemaltoEndpoint,\n        },\n        {\n          fieldKey: \"gemalto_token\",\n          required: true,\n          value: gemaltoToken,\n        },\n        {\n          fieldKey: \"gemalto_domain\",\n          required: true,\n          value: gemaltoDomain,\n        },\n        {\n          fieldKey: \"gemalto_retry\",\n          required: false,\n          value: gemaltoRetry,\n          customValidation: parseInt(gemaltoRetry) < 0,\n          customValidationMessage: \"Value needs to be 0 or greater\",\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(encryptionValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"encryption\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    encryptionTab,\n    gemaltoEndpoint,\n    gemaltoToken,\n    gemaltoDomain,\n    gemaltoRetry,\n    dispatch,\n  ]);\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"encryption\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"gemalto_endpoint\"\n          name=\"gemalto_endpoint\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"gemaltoEndpoint\", e.target.value);\n            cleanValidation(\"gemalto_endpoint\");\n          }}\n          label=\"Endpoint\"\n          value={gemaltoEndpoint}\n          error={validationErrors[\"gemalto_endpoint\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        style={{\n          marginBottom: 15,\n        }}\n      >\n        <fieldset className={classes.fieldGroup}>\n          <legend className={classes.descriptionText}>Credentials</legend>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"gemalto_token\"\n              name=\"gemalto_token\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"gemaltoToken\", e.target.value);\n                cleanValidation(\"gemalto_token\");\n              }}\n              label=\"Token\"\n              value={gemaltoToken}\n              error={validationErrors[\"gemalto_token\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"gemalto_domain\"\n              name=\"gemalto_domain\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"gemaltoDomain\", e.target.value);\n                cleanValidation(\"gemalto_domain\");\n              }}\n              label=\"Domain\"\n              value={gemaltoDomain}\n              error={validationErrors[\"gemalto_domain\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              type=\"number\"\n              min=\"0\"\n              id=\"gemalto_retry\"\n              name=\"gemalto_retry\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"gemaltoRetry\", e.target.value);\n                cleanValidation(\"gemalto_retry\");\n              }}\n              label=\"Retry (seconds)\"\n              value={gemaltoRetry}\n              error={validationErrors[\"gemalto_retry\"] || \"\"}\n            />\n          </Grid>\n        </fieldset>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default GemaltoKMSAdd;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\nimport { isPageValid, updateAddField } from \"../../createTenantSlice\";\nimport { clearValidationError } from \"../../../utils\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst AWSKMSAdd = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const encryptionTab = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.encryptionTab\n  );\n  const awsEndpoint = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.awsEndpoint\n  );\n  const awsRegion = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.awsRegion\n  );\n  const awsKMSKey = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.awsKMSKey\n  );\n  const awsAccessKey = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.awsAccessKey\n  );\n  const awsSecretKey = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.awsSecretKey\n  );\n  const awsToken = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.awsToken\n  );\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  // Validation\n  useEffect(() => {\n    let encryptionValidation: IValidation[] = [];\n\n    if (!encryptionTab) {\n      encryptionValidation = [\n        ...encryptionValidation,\n        {\n          fieldKey: \"aws_endpoint\",\n          required: true,\n          value: awsEndpoint,\n        },\n        {\n          fieldKey: \"aws_region\",\n          required: true,\n          value: awsRegion,\n        },\n        {\n          fieldKey: \"aws_accessKey\",\n          required: true,\n          value: awsAccessKey,\n        },\n        {\n          fieldKey: \"aws_secretKey\",\n          required: true,\n          value: awsSecretKey,\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(encryptionValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"encryption\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    encryptionTab,\n    awsEndpoint,\n    awsRegion,\n    awsSecretKey,\n    awsAccessKey,\n    dispatch,\n  ]);\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"encryption\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"aws_endpoint\"\n          name=\"aws_endpoint\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"awsEndpoint\", e.target.value);\n            cleanValidation(\"aws_endpoint\");\n          }}\n          label=\"Endpoint\"\n          value={awsEndpoint}\n          error={validationErrors[\"aws_endpoint\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"aws_region\"\n          name=\"aws_region\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"awsRegion\", e.target.value);\n            cleanValidation(\"aws_region\");\n          }}\n          label=\"Region\"\n          value={awsRegion}\n          error={validationErrors[\"aws_region\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"aws_kmsKey\"\n          name=\"aws_kmsKey\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"awsKMSKey\", e.target.value);\n          }}\n          label=\"KMS Key\"\n          value={awsKMSKey}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <fieldset className={classes.fieldGroup}>\n          <legend className={classes.descriptionText}>Credentials</legend>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"aws_accessKey\"\n              name=\"aws_accessKey\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"awsAccessKey\", e.target.value);\n                cleanValidation(\"aws_accessKey\");\n              }}\n              label=\"Access Key\"\n              value={awsAccessKey}\n              error={validationErrors[\"aws_accessKey\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"aws_secretKey\"\n              name=\"aws_secretKey\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"awsSecretKey\", e.target.value);\n                cleanValidation(\"aws_secretKey\");\n              }}\n              label=\"Secret Key\"\n              value={awsSecretKey}\n              error={validationErrors[\"aws_secretKey\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"aws_token\"\n              name=\"aws_token\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"awsToken\", e.target.value);\n              }}\n              label=\"Token\"\n              value={awsToken}\n            />\n          </Grid>\n        </fieldset>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default AWSKMSAdd;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Paper, SelectChangeEvent } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\n\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport { AppState, useAppDispatch } from \"../../../../../store\";\nimport { clearValidationError } from \"../../utils\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport FileSelector from \"../../../Common/FormComponents/FileSelector/FileSelector\";\nimport RadioGroupSelector from \"../../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../utils/validationFunctions\";\nimport SectionH1 from \"../../../Common/SectionH1\";\nimport {\n  addFileMinIOMTLSCert,\n  addFileKESServerCert,\n  addFileKMSCa,\n  addFileKMSMTLSCert,\n  isPageValid,\n  updateAddField,\n} from \"../createTenantSlice\";\nimport VaultKMSAdd from \"./Encryption/VaultKMSAdd\";\nimport AzureKMSAdd from \"./Encryption/AzureKMSAdd\";\nimport GCPKMSAdd from \"./Encryption/GCPKMSAdd\";\nimport GemaltoKMSAdd from \"./Encryption/GemaltoKMSAdd\";\nimport AWSKMSAdd from \"./Encryption/AWSKMSAdd\";\nimport SelectWrapper from \"../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\nimport CodeMirrorWrapper from \"../../../Common/FormComponents/CodeMirrorWrapper/CodeMirrorWrapper\";\n\ninterface IEncryptionProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    encryptionTypeOptions: {\n      marginBottom: 15,\n    },\n    mutualTlsConfig: {\n      marginTop: 15,\n      \"& fieldset\": {\n        flex: 1,\n      },\n    },\n    rightSpacer: {\n      marginRight: 15,\n    },\n    responsiveContainer: {\n      \"@media (max-width: 900px)\": {\n        display: \"flex\",\n        flexFlow: \"column\",\n      },\n    },\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst Encryption = ({ classes }: IEncryptionProps) => {\n  const dispatch = useAppDispatch();\n\n  const replicas = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.replicas\n  );\n  const rawConfiguration = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.rawConfiguration\n  );\n  const encryptionTab = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.encryptionTab\n  );\n  const enableEncryption = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.enableEncryption\n  );\n  const encryptionType = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.encryptionType\n  );\n\n  const gcpProjectID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpProjectID\n  );\n  const gcpEndpoint = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpEndpoint\n  );\n  const gcpClientEmail = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpClientEmail\n  );\n  const gcpClientID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpClientID\n  );\n  const gcpPrivateKeyID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpPrivateKeyID\n  );\n  const gcpPrivateKey = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpPrivateKey\n  );\n  const enableCustomCertsForKES = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.encryption.enableCustomCertsForKES\n  );\n  const enableAutoCert = useSelector(\n    (state: AppState) => state.createTenant.fields.security.enableAutoCert\n  );\n  const enableTLS = useSelector(\n    (state: AppState) => state.createTenant.fields.security.enableTLS\n  );\n  const minioServerCertificates = useSelector(\n    (state: AppState) => state.createTenant.certificates.minioServerCertificates\n  );\n  const kesServerCertificate = useSelector(\n    (state: AppState) => state.createTenant.certificates.kesServerCertificate\n  );\n  const minioMTLSCertificate = useSelector(\n    (state: AppState) => state.createTenant.certificates.minioMTLSCertificate\n  );\n  const kmsMTLSCertificate = useSelector(\n    (state: AppState) => state.createTenant.certificates.kmsMTLSCertificate\n  );\n  const kmsCA = useSelector(\n    (state: AppState) => state.createTenant.certificates.kmsCA\n  );\n  const enableCustomCerts = useSelector(\n    (state: AppState) => state.createTenant.fields.security.enableCustomCerts\n  );\n  const kesSecurityContext = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.kesSecurityContext\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  let encryptionAvailable = false;\n  if (\n    enableTLS &&\n    (enableAutoCert ||\n      (minioServerCertificates &&\n        minioServerCertificates.filter(\n          (item) => item.encoded_key && item.encoded_cert\n        ).length > 0))\n  ) {\n    encryptionAvailable = true;\n  }\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"encryption\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  // Validation\n  useEffect(() => {\n    let encryptionValidation: IValidation[] = [];\n\n    if (enableEncryption) {\n      encryptionValidation = [\n        ...encryptionValidation,\n        {\n          fieldKey: \"rawConfiguration\",\n          required: encryptionTab > 0,\n          value: rawConfiguration,\n        },\n        {\n          fieldKey: \"replicas\",\n          required: true,\n          value: replicas,\n          customValidation: parseInt(replicas) < 1,\n          customValidationMessage: \"Replicas needs to be 1 or greater\",\n        },\n        {\n          fieldKey: \"kes_securityContext_runAsUser\",\n          required: true,\n          value: kesSecurityContext.runAsUser,\n          customValidation:\n            kesSecurityContext.runAsUser === \"\" ||\n            parseInt(kesSecurityContext.runAsUser) < 0,\n          customValidationMessage: `runAsUser must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"kes_securityContext_runAsGroup\",\n          required: true,\n          value: kesSecurityContext.runAsGroup,\n          customValidation:\n            kesSecurityContext.runAsGroup === \"\" ||\n            parseInt(kesSecurityContext.runAsGroup) < 0,\n          customValidationMessage: `runAsGroup must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"kes_securityContext_fsGroup\",\n          required: true,\n          value: kesSecurityContext.fsGroup,\n          customValidation:\n            kesSecurityContext.fsGroup === \"\" ||\n            parseInt(kesSecurityContext.fsGroup) < 0,\n          customValidationMessage: `fsGroup must be present and be 0 or more`,\n        },\n      ];\n\n      if (enableCustomCerts) {\n        encryptionValidation = [\n          ...encryptionValidation,\n          {\n            fieldKey: \"serverKey\",\n            required: !enableAutoCert,\n            value: kesServerCertificate.encoded_key,\n          },\n          {\n            fieldKey: \"serverCert\",\n            required: !enableAutoCert,\n            value: kesServerCertificate.encoded_cert,\n          },\n          {\n            fieldKey: \"clientKey\",\n            required: !enableAutoCert,\n            value: minioMTLSCertificate.encoded_key,\n          },\n          {\n            fieldKey: \"clientCert\",\n            required: !enableAutoCert,\n            value: minioMTLSCertificate.encoded_cert,\n          },\n        ];\n      }\n    }\n\n    const commonVal = commonFormValidation(encryptionValidation);\n    dispatch(\n      isPageValid({\n        pageName: \"encryption\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    rawConfiguration,\n    encryptionTab,\n    enableEncryption,\n    encryptionType,\n    gcpProjectID,\n    gcpEndpoint,\n    gcpClientEmail,\n    gcpClientID,\n    gcpPrivateKeyID,\n    gcpPrivateKey,\n    dispatch,\n    enableAutoCert,\n    enableCustomCerts,\n    kesServerCertificate.encoded_key,\n    kesServerCertificate.encoded_cert,\n    minioMTLSCertificate.encoded_key,\n    minioMTLSCertificate.encoded_cert,\n    kesSecurityContext,\n    replicas,\n  ]);\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <Grid container alignItems={\"center\"}>\n        <Grid item xs>\n          <SectionH1>Encryption</SectionH1>\n        </Grid>\n        <Grid item xs={4} justifyContent={\"end\"} textAlign={\"right\"}>\n          <FormSwitchWrapper\n            label={\"\"}\n            indicatorLabels={[\"Enabled\", \"Disabled\"]}\n            checked={enableEncryption}\n            value={\"tenant_encryption\"}\n            id=\"tenant-encryption\"\n            name=\"tenant-encryption\"\n            onChange={(e) => {\n              const targetD = e.target;\n              const checked = targetD.checked;\n\n              updateField(\"enableEncryption\", checked);\n            }}\n            description=\"\"\n            disabled={!encryptionAvailable}\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <span className={classes.descriptionText}>\n            MinIO Server-Side Encryption (SSE) protects objects as part of write\n            operations, allowing clients to take advantage of server processing\n            power to secure objects at the storage layer (encryption-at-rest).\n            SSE also provides key functionality to regulatory and compliance\n            requirements around secure locking and erasure.\n          </span>\n        </Grid>\n        <Grid xs={12}>\n          <hr className={classes.hrClass} />\n        </Grid>\n\n        {enableEncryption && (\n          <Fragment>\n            <Grid item xs={12}>\n              <Tabs\n                value={encryptionTab}\n                onChange={(e: React.ChangeEvent<{}>, value: number) => {\n                  updateField(\"encryptionTab\", value);\n                }}\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                aria-label=\"cluster-tabs\"\n                variant=\"scrollable\"\n                scrollButtons=\"auto\"\n              >\n                <Tab id=\"kms-options\" label=\"Options\" />\n                <Tab id=\"kms-raw-configuration\" label=\"Raw Edit\" />\n              </Tabs>\n            </Grid>\n\n            {encryptionTab ? (\n              <Fragment>\n                <Grid item xs={12}>\n                  <CodeMirrorWrapper\n                    value={rawConfiguration}\n                    mode={\"yaml\"}\n                    onBeforeChange={(editor, data, value) => {\n                      updateField(\"rawConfiguration\", value);\n                    }}\n                    editorHeight={\"550px\"}\n                  />\n                </Grid>\n              </Fragment>\n            ) : (\n              <Fragment>\n                <Grid item xs={12} className={classes.encryptionTypeOptions}>\n                  <RadioGroupSelector\n                    currentSelection={encryptionType}\n                    id=\"encryptionType\"\n                    name=\"encryptionType\"\n                    label=\"KMS\"\n                    onChange={(e) => {\n                      updateField(\"encryptionType\", e.target.value);\n                    }}\n                    selectorOptions={[\n                      { label: \"Vault\", value: \"vault\" },\n                      { label: \"AWS\", value: \"aws\" },\n                      { label: \"Gemalto\", value: \"gemalto\" },\n                      { label: \"GCP\", value: \"gcp\" },\n                      { label: \"Azure\", value: \"azure\" },\n                    ]}\n                  />\n                </Grid>\n                {encryptionType === \"vault\" && <VaultKMSAdd />}\n                {encryptionType === \"azure\" && <AzureKMSAdd />}\n                {encryptionType === \"gcp\" && <GCPKMSAdd />}\n                {encryptionType === \"aws\" && <AWSKMSAdd />}\n                {encryptionType === \"gemalto\" && <GemaltoKMSAdd />}\n              </Fragment>\n            )}\n\n            <div className={classes.headerElement}>\n              <h4 className={classes.h3Section}>Additional Configurations</h4>\n            </div>\n            <Grid item xs={12}>\n              <FormSwitchWrapper\n                value=\"enableCustomCertsForKES\"\n                id=\"enableCustomCertsForKES\"\n                name=\"enableCustomCertsForKES\"\n                checked={enableCustomCertsForKES || !enableAutoCert}\n                onChange={(e) => {\n                  const targetD = e.target;\n                  const checked = targetD.checked;\n\n                  updateField(\"enableCustomCertsForKES\", checked);\n                }}\n                label={\"Custom Certificates\"}\n                disabled={!enableAutoCert}\n              />\n            </Grid>\n            {(enableCustomCertsForKES || !enableAutoCert) && (\n              <Fragment>\n                <Grid container>\n                  <Grid item xs={12} style={{ marginBottom: 15 }}>\n                    <fieldset className={classes.fieldGroup}>\n                      <legend className={classes.descriptionText}>\n                        Encryption server certificates\n                      </legend>\n                      <FileSelector\n                        onChange={(encodedValue, fileName) => {\n                          dispatch(\n                            addFileKESServerCert({\n                              key: \"key\",\n                              fileName: fileName,\n                              value: encodedValue,\n                            })\n                          );\n                          cleanValidation(\"serverKey\");\n                        }}\n                        accept=\".key,.pem\"\n                        id=\"serverKey\"\n                        name=\"serverKey\"\n                        label=\"Key\"\n                        error={validationErrors[\"serverKey\"] || \"\"}\n                        value={kesServerCertificate.key}\n                        required={!enableAutoCert}\n                      />\n                      <FileSelector\n                        onChange={(encodedValue, fileName) => {\n                          dispatch(\n                            addFileKESServerCert({\n                              key: \"cert\",\n                              fileName: fileName,\n                              value: encodedValue,\n                            })\n                          );\n                          cleanValidation(\"serverCert\");\n                        }}\n                        accept=\".cer,.crt,.cert,.pem\"\n                        id=\"serverCert\"\n                        name=\"serverCert\"\n                        label=\"Cert\"\n                        error={validationErrors[\"serverCert\"] || \"\"}\n                        value={kesServerCertificate.cert}\n                        required={!enableAutoCert}\n                      />\n                    </fieldset>\n                  </Grid>\n                </Grid>\n                <Grid container style={{ marginBottom: 15 }}>\n                  <Grid item xs={12}>\n                    <fieldset className={classes.fieldGroup}>\n                      <legend className={classes.descriptionText}>\n                        MinIO mTLS certificates (connection between MinIO and\n                        the Encryption server)\n                      </legend>\n                      <FileSelector\n                        onChange={(encodedValue, fileName) => {\n                          dispatch(\n                            addFileMinIOMTLSCert({\n                              key: \"key\",\n                              fileName: fileName,\n                              value: encodedValue,\n                            })\n                          );\n                          cleanValidation(\"clientKey\");\n                        }}\n                        accept=\".key,.pem\"\n                        id=\"clientKey\"\n                        name=\"clientKey\"\n                        label=\"Key\"\n                        error={validationErrors[\"clientKey\"] || \"\"}\n                        value={minioMTLSCertificate.key}\n                        required={!enableAutoCert}\n                      />\n                      <FileSelector\n                        onChange={(encodedValue, fileName) => {\n                          dispatch(\n                            addFileMinIOMTLSCert({\n                              key: \"cert\",\n                              fileName: fileName,\n                              value: encodedValue,\n                            })\n                          );\n                          cleanValidation(\"clientCert\");\n                        }}\n                        accept=\".cer,.crt,.cert,.pem\"\n                        id=\"clientCert\"\n                        name=\"clientCert\"\n                        label=\"Cert\"\n                        error={validationErrors[\"clientCert\"] || \"\"}\n                        value={minioMTLSCertificate.cert}\n                        required={!enableAutoCert}\n                      />\n                    </fieldset>\n                  </Grid>\n                </Grid>\n                <Grid container className={classes.mutualTlsConfig}>\n                  <fieldset className={classes.fieldGroup}>\n                    <legend className={classes.descriptionText}>\n                      KMS mTLS certificates (connection between the Encryption\n                      server and the KMS)\n                    </legend>\n                    <FileSelector\n                      onChange={(encodedValue, fileName) => {\n                        dispatch(\n                          addFileKMSMTLSCert({\n                            key: \"key\",\n                            fileName: fileName,\n                            value: encodedValue,\n                          })\n                        );\n                        cleanValidation(\"vault_key\");\n                      }}\n                      accept=\".key,.pem\"\n                      id=\"vault_key\"\n                      name=\"vault_key\"\n                      label=\"Key\"\n                      value={kmsMTLSCertificate.key}\n                    />\n                    <FileSelector\n                      onChange={(encodedValue, fileName) => {\n                        dispatch(\n                          addFileKMSMTLSCert({\n                            key: \"cert\",\n                            fileName: fileName,\n                            value: encodedValue,\n                          })\n                        );\n                        cleanValidation(\"vault_cert\");\n                      }}\n                      accept=\".cer,.crt,.cert,.pem\"\n                      id=\"vault_cert\"\n                      name=\"vault_cert\"\n                      label=\"Cert\"\n                      value={kmsMTLSCertificate.cert}\n                    />\n                    <FileSelector\n                      onChange={(encodedValue, fileName) => {\n                        dispatch(\n                          addFileKMSCa({\n                            fileName: fileName,\n                            value: encodedValue,\n                          })\n                        );\n                        cleanValidation(\"vault_ca\");\n                      }}\n                      accept=\".cer,.crt,.cert,.pem\"\n                      id=\"vault_ca\"\n                      name=\"vault_ca\"\n                      label=\"CA\"\n                      value={kmsCA.cert}\n                    />\n                  </fieldset>\n                </Grid>\n              </Fragment>\n            )}\n            <Grid item xs={12}>\n              <Grid item xs={12} classes={classes.formFieldRow}>\n                <InputBoxWrapper\n                  type=\"number\"\n                  min=\"1\"\n                  id=\"replicas\"\n                  name=\"replicas\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"replicas\", e.target.value);\n                    cleanValidation(\"replicas\");\n                  }}\n                  label=\"Replicas\"\n                  value={replicas}\n                  required\n                  error={validationErrors[\"replicas\"] || \"\"}\n                />\n              </Grid>\n\n              <fieldset\n                className={classes.fieldGroup}\n                style={{ marginTop: 15 }}\n              >\n                <legend className={classes.descriptionText}>\n                  SecurityContext for KES pods\n                </legend>\n                <Grid item xs={12} className={classes.kesSecurityContext}>\n                  <div\n                    className={`${classes.multiContainer} ${classes.responsiveContainer}`}\n                  >\n                    <div\n                      className={`${classes.formFieldRow} ${classes.rightSpacer}`}\n                    >\n                      <InputBoxWrapper\n                        type=\"number\"\n                        id=\"kes_securityContext_runAsUser\"\n                        name=\"kes_securityContext_runAsUser\"\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          updateField(\"kesSecurityContext\", {\n                            ...kesSecurityContext,\n                            runAsUser: e.target.value,\n                          });\n                          cleanValidation(\"kes_securityContext_runAsUser\");\n                        }}\n                        label=\"Run As User\"\n                        value={kesSecurityContext.runAsUser}\n                        required\n                        error={\n                          validationErrors[\"kes_securityContext_runAsUser\"] ||\n                          \"\"\n                        }\n                        min=\"0\"\n                      />\n                    </div>\n                    <div\n                      className={`${classes.formFieldRow} ${classes.rightSpacer}`}\n                    >\n                      <InputBoxWrapper\n                        type=\"number\"\n                        id=\"kes_securityContext_runAsGroup\"\n                        name=\"kes_securityContext_runAsGroup\"\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          updateField(\"kesSecurityContext\", {\n                            ...kesSecurityContext,\n                            runAsGroup: e.target.value,\n                          });\n                          cleanValidation(\"kes_securityContext_runAsGroup\");\n                        }}\n                        label=\"Run As Group\"\n                        value={kesSecurityContext.runAsGroup}\n                        required\n                        error={\n                          validationErrors[\"kes_securityContext_runAsGroup\"] ||\n                          \"\"\n                        }\n                        min=\"0\"\n                      />\n                    </div>\n                  </div>\n                </Grid>\n                <br />\n                <Grid item xs={12} className={classes.kesSecurityContext}>\n                  <div\n                    className={`${classes.multiContainer} ${classes.responsiveContainer}`}\n                  >\n                    <div\n                      className={`${classes.formFieldRow} ${classes.rightSpacer}`}\n                    >\n                      <InputBoxWrapper\n                        type=\"number\"\n                        id=\"kes_securityContext_fsGroup\"\n                        name=\"kes_securityContext_fsGroup\"\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          updateField(\"kesSecurityContext\", {\n                            ...kesSecurityContext,\n                            fsGroup: e.target.value,\n                          });\n                          cleanValidation(\"kes_securityContext_fsGroup\");\n                        }}\n                        label=\"FsGroup\"\n                        value={kesSecurityContext.fsGroup}\n                        required\n                        error={\n                          validationErrors[\"kes_securityContext_fsGroup\"] || \"\"\n                        }\n                        min=\"0\"\n                      />\n                    </div>\n                    <div\n                      className={`${classes.formFieldRow} ${classes.rightSpacer}`}\n                    >\n                      <SelectWrapper\n                        label=\"FsGroupChangePolicy\"\n                        id=\"securityContext_fsGroupChangePolicy\"\n                        name=\"securityContext_fsGroupChangePolicy\"\n                        value={kesSecurityContext.fsGroupChangePolicy}\n                        onChange={(e: SelectChangeEvent<string>) => {\n                          updateField(\"kesSecurityContext\", {\n                            ...kesSecurityContext,\n                            fsGroupChangePolicy: e.target.value,\n                          });\n                        }}\n                        options={[\n                          {\n                            label: \"Always\",\n                            value: \"Always\",\n                          },\n                          {\n                            label: \"OnRootMismatch\",\n                            value: \"OnRootMismatch\",\n                          },\n                        ]}\n                      />\n                    </div>\n                  </div>\n                </Grid>\n                <br />\n                <Grid item xs={12}>\n                  <div className={classes.multiContainer}>\n                    <FormSwitchWrapper\n                      value=\"kesSecurityContextRunAsNonRoot\"\n                      id=\"kes_securityContext_runAsNonRoot\"\n                      name=\"kes_securityContext_runAsNonRoot\"\n                      checked={kesSecurityContext.runAsNonRoot}\n                      onChange={(e) => {\n                        const targetD = e.target;\n                        const checked = targetD.checked;\n                        updateField(\"kesSecurityContext\", {\n                          ...kesSecurityContext,\n                          runAsNonRoot: checked,\n                        });\n                      }}\n                      label={\"Do not run as Root\"}\n                    />\n                  </div>\n                </Grid>\n              </fieldset>\n            </Grid>\n          </Fragment>\n        )}\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(Encryption);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, IconButton, Paper, SelectChangeEvent } from \"@mui/material\";\nimport { AppState, useAppDispatch } from \"../../../../../store\";\n\nimport {\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../utils/validationFunctions\";\nimport { ErrorResponseHandler } from \"../../../../../common/types\";\nimport { LabelKeyPair } from \"../../types\";\nimport RadioGroupSelector from \"../../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport api from \"../../../../../common/api\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { AddIcon, RemoveIcon } from \"mds\";\nimport SelectWrapper from \"../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport TolerationSelector from \"../../../Common/TolerationSelector/TolerationSelector\";\nimport { setModalErrorSnackMessage } from \"../../../../../systemSlice\";\nimport {\n  addNewToleration,\n  isPageValid,\n  removeToleration,\n  setKeyValuePairs,\n  setTolerationInfo,\n  updateAddField,\n} from \"../createTenantSlice\";\n\ninterface IAffinityProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    overlayAction: {\n      marginLeft: 10,\n      display: \"flex\",\n      alignItems: \"center\",\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    affinityConfigField: {\n      display: \"flex\",\n    },\n    affinityFieldLabel: {\n      display: \"flex\",\n      flexFlow: \"column\",\n      flex: 1,\n    },\n    radioField: {\n      display: \"flex\",\n      alignItems: \"flex-start\",\n      marginTop: 10,\n      \"& div:first-child\": {\n        display: \"flex\",\n        flexFlow: \"column\",\n        alignItems: \"baseline\",\n        textAlign: \"left !important\",\n      },\n    },\n    affinityLabelKey: {\n      \"& div:first-child\": {\n        marginBottom: 0,\n      },\n    },\n    affinityLabelValue: {\n      marginLeft: 10,\n      \"& div:first-child\": {\n        marginBottom: 0,\n      },\n    },\n    rowActions: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    affinityRow: {\n      marginBottom: 10,\n      display: \"flex\",\n    },\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\ninterface OptionPair {\n  label: string;\n  value: string;\n}\n\nconst Affinity = ({ classes }: IAffinityProps) => {\n  const dispatch = useAppDispatch();\n\n  const podAffinity = useSelector(\n    (state: AppState) => state.createTenant.fields.affinity.podAffinity\n  );\n  const nodeSelectorLabels = useSelector(\n    (state: AppState) => state.createTenant.fields.affinity.nodeSelectorLabels\n  );\n  const withPodAntiAffinity = useSelector(\n    (state: AppState) => state.createTenant.fields.affinity.withPodAntiAffinity\n  );\n  const keyValuePairs = useSelector(\n    (state: AppState) => state.createTenant.nodeSelectorPairs\n  );\n  const tolerations = useSelector(\n    (state: AppState) => state.createTenant.tolerations\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n  const [loading, setLoading] = useState<boolean>(true);\n  const [keyValueMap, setKeyValueMap] = useState<{ [key: string]: string[] }>(\n    {}\n  );\n  const [keyOptions, setKeyOptions] = useState<OptionPair[]>([]);\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({\n          pageName: \"affinity\",\n          field: field,\n          value: value,\n        })\n      );\n    },\n    [dispatch]\n  );\n\n  useEffect(() => {\n    if (loading) {\n      api\n        .invoke(\"GET\", `/api/v1/nodes/labels`)\n        .then((res: { [key: string]: string[] }) => {\n          setLoading(false);\n          setKeyValueMap(res);\n          let keys: OptionPair[] = [];\n          for (let k in res) {\n            keys.push({\n              label: k,\n              value: k,\n            });\n          }\n          setKeyOptions(keys);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setLoading(false);\n          dispatch(setModalErrorSnackMessage(err));\n          setKeyValueMap({});\n        });\n    }\n  }, [dispatch, loading]);\n\n  useEffect(() => {\n    if (keyValuePairs) {\n      const vlr = keyValuePairs\n        .filter((kvp) => kvp.key !== \"\")\n        .map((kvp) => `${kvp.key}=${kvp.value}`)\n        .filter((kvs, i, a) => a.indexOf(kvs) === i);\n      const vl = vlr.join(\"&\");\n      updateField(\"nodeSelectorLabels\", vl);\n    }\n  }, [keyValuePairs, updateField]);\n\n  // Validation\n  useEffect(() => {\n    let customAccountValidation: IValidation[] = [];\n\n    if (podAffinity === \"nodeSelector\") {\n      let valid = true;\n\n      const splittedLabels = nodeSelectorLabels.split(\"&\");\n\n      if (splittedLabels.length === 1 && splittedLabels[0] === \"\") {\n        valid = false;\n      }\n\n      splittedLabels.forEach((item: string, index: number) => {\n        const splitItem = item.split(\"=\");\n\n        if (splitItem.length !== 2) {\n          valid = false;\n        }\n\n        if (index + 1 !== splittedLabels.length) {\n          if (splitItem[0] === \"\" || splitItem[1] === \"\") {\n            valid = false;\n          }\n        }\n      });\n\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"labels\",\n          required: true,\n          value: nodeSelectorLabels,\n          customValidation: !valid,\n          customValidationMessage:\n            \"You need to add at least one label key-pair\",\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(customAccountValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"affinity\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [dispatch, podAffinity, nodeSelectorLabels]);\n\n  const updateToleration = (index: number, field: string, value: any) => {\n    const alterToleration = { ...tolerations[index], [field]: value };\n\n    dispatch(\n      setTolerationInfo({\n        index: index,\n        tolerationValue: alterToleration,\n      })\n    );\n  };\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <h3 className={classes.h3Section}>Pod Placement</h3>\n        <span className={classes.descriptionText}>\n          Configure how pods will be assigned to nodes\n        </span>\n      </div>\n      <Grid item xs={12} className={classes.affinityConfigField}>\n        <Grid item className={classes.affinityFieldLabel}>\n          <div className={classes.label}>Type</div>\n          <div\n            className={`${classes.descriptionText} ${classes.affinityHelpText}`}\n          >\n            MinIO supports multiple configurations for Pod Affinity\n          </div>\n          <Grid item className={classes.radioField}>\n            <RadioGroupSelector\n              currentSelection={podAffinity}\n              id=\"affinity-options\"\n              name=\"affinity-options\"\n              label={\" \"}\n              onChange={(e) => {\n                updateField(\"podAffinity\", e.target.value);\n              }}\n              selectorOptions={[\n                { label: \"None\", value: \"none\" },\n                { label: \"Default (Pod Anti-Affinity)\", value: \"default\" },\n                { label: \"Node Selector\", value: \"nodeSelector\" },\n              ]}\n            />\n          </Grid>\n        </Grid>\n      </Grid>\n      {podAffinity === \"nodeSelector\" && (\n        <Fragment>\n          <br />\n          <Grid item xs={12}>\n            <FormSwitchWrapper\n              value=\"with_pod_anti_affinity\"\n              id=\"with_pod_anti_affinity\"\n              name=\"with_pod_anti_affinity\"\n              checked={withPodAntiAffinity}\n              onChange={(e) => {\n                const targetD = e.target;\n                const checked = targetD.checked;\n\n                updateField(\"withPodAntiAffinity\", checked);\n              }}\n              label={\"With Pod Anti-Affinity\"}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <h3>Labels</h3>\n            <span className={classes.error}>{validationErrors[\"labels\"]}</span>\n            <Grid container>\n              {keyValuePairs &&\n                keyValuePairs.map((kvp, i) => {\n                  return (\n                    <Grid\n                      item\n                      xs={12}\n                      className={classes.affinityRow}\n                      key={`affinity-keyVal-${i.toString()}`}\n                    >\n                      <Grid item xs={5} className={classes.affinityLabelKey}>\n                        {keyOptions.length > 0 && (\n                          <SelectWrapper\n                            onChange={(e: SelectChangeEvent<string>) => {\n                              const newKey = e.target.value as string;\n                              const newLKP: LabelKeyPair = {\n                                key: newKey,\n                                value: keyValueMap[newKey][0],\n                              };\n                              const arrCp: LabelKeyPair[] = [...keyValuePairs];\n                              arrCp[i] = newLKP;\n                              dispatch(setKeyValuePairs(arrCp));\n                            }}\n                            id=\"select-access-policy\"\n                            name=\"select-access-policy\"\n                            label={\"\"}\n                            value={kvp.key}\n                            options={keyOptions}\n                          />\n                        )}\n                        {keyOptions.length === 0 && (\n                          <InputBoxWrapper\n                            id={`nodeselector-key-${i.toString()}`}\n                            label={\"\"}\n                            name={`nodeselector-${i.toString()}`}\n                            value={kvp.key}\n                            onChange={(e) => {\n                              const arrCp: LabelKeyPair[] = [...keyValuePairs];\n                              arrCp[i] = {\n                                key: arrCp[i].key,\n                                value: e.target.value as string,\n                              };\n                              dispatch(setKeyValuePairs(arrCp));\n                            }}\n                            index={i}\n                            placeholder={\"Key\"}\n                          />\n                        )}\n                      </Grid>\n                      <Grid item xs={5} className={classes.affinityLabelValue}>\n                        {keyOptions.length > 0 && (\n                          <SelectWrapper\n                            onChange={(e: SelectChangeEvent<string>) => {\n                              const arrCp: LabelKeyPair[] = [...keyValuePairs];\n                              arrCp[i] = {\n                                key: arrCp[i].key,\n                                value: e.target.value as string,\n                              };\n                              dispatch(setKeyValuePairs(arrCp));\n                            }}\n                            id=\"select-access-policy\"\n                            name=\"select-access-policy\"\n                            label={\"\"}\n                            value={kvp.value}\n                            options={\n                              keyValueMap[kvp.key]\n                                ? keyValueMap[kvp.key].map((v) => {\n                                    return { label: v, value: v };\n                                  })\n                                : []\n                            }\n                          />\n                        )}\n                        {keyOptions.length === 0 && (\n                          <InputBoxWrapper\n                            id={`nodeselector-value-${i.toString()}`}\n                            label={\"\"}\n                            name={`nodeselector-${i.toString()}`}\n                            value={kvp.value}\n                            onChange={(e) => {\n                              const arrCp: LabelKeyPair[] = [...keyValuePairs];\n                              arrCp[i] = {\n                                key: arrCp[i].key,\n                                value: e.target.value as string,\n                              };\n                              dispatch(setKeyValuePairs(arrCp));\n                            }}\n                            index={i}\n                            placeholder={\"value\"}\n                          />\n                        )}\n                      </Grid>\n                      <Grid item xs={2} className={classes.rowActions}>\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => {\n                              const arrCp = [...keyValuePairs];\n                              if (keyOptions.length > 0) {\n                                arrCp.push({\n                                  key: keyOptions[0].value,\n                                  value: keyValueMap[keyOptions[0].value][0],\n                                });\n                              } else {\n                                arrCp.push({ key: \"\", value: \"\" });\n                              }\n\n                              dispatch(setKeyValuePairs(arrCp));\n                            }}\n                            disabled={i !== keyValuePairs.length - 1}\n                          >\n                            <AddIcon />\n                          </IconButton>\n                        </div>\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => {\n                              const arrCp = keyValuePairs.filter(\n                                (item, index) => index !== i\n                              );\n                              dispatch(setKeyValuePairs(arrCp));\n                            }}\n                            disabled={keyValuePairs.length <= 1}\n                          >\n                            <RemoveIcon />\n                          </IconButton>\n                        </div>\n                      </Grid>\n                    </Grid>\n                  );\n                })}\n            </Grid>\n          </Grid>\n        </Fragment>\n      )}\n      <Grid item xs={12} className={classes.affinityConfigField}>\n        <Grid item className={classes.affinityFieldLabel}>\n          <h3>Tolerations</h3>\n          <span className={classes.error}>\n            {validationErrors[\"tolerations\"]}\n          </span>\n          <Grid container>\n            {tolerations &&\n              tolerations.map((tol, i) => {\n                return (\n                  <Grid\n                    item\n                    xs={12}\n                    className={classes.affinityRow}\n                    key={`affinity-keyVal-${i.toString()}`}\n                  >\n                    <TolerationSelector\n                      effect={tol.effect}\n                      onEffectChange={(value) => {\n                        updateToleration(i, \"effect\", value);\n                      }}\n                      tolerationKey={tol.key}\n                      onTolerationKeyChange={(value) => {\n                        updateToleration(i, \"key\", value);\n                      }}\n                      operator={tol.operator}\n                      onOperatorChange={(value) => {\n                        updateToleration(i, \"operator\", value);\n                      }}\n                      value={tol.value}\n                      onValueChange={(value) => {\n                        updateToleration(i, \"value\", value);\n                      }}\n                      tolerationSeconds={tol.tolerationSeconds?.seconds || 0}\n                      onSecondsChange={(value) => {\n                        updateToleration(i, \"tolerationSeconds\", {\n                          seconds: value,\n                        });\n                      }}\n                      index={i}\n                    />\n                    <div className={classes.overlayAction}>\n                      <IconButton\n                        size={\"small\"}\n                        onClick={() => {\n                          dispatch(addNewToleration());\n                        }}\n                        disabled={i !== tolerations.length - 1}\n                      >\n                        <AddIcon />\n                      </IconButton>\n                    </div>\n\n                    <div className={classes.overlayAction}>\n                      <IconButton\n                        size={\"small\"}\n                        onClick={() => dispatch(removeToleration(i))}\n                        disabled={tolerations.length <= 1}\n                      >\n                        <RemoveIcon />\n                      </IconButton>\n                    </div>\n                  </Grid>\n                );\n              })}\n          </Grid>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(Affinity);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, Paper } from \"@mui/material\";\nimport {\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport { AppState, useAppDispatch } from \"../../../../../store\";\nimport { clearValidationError } from \"../../utils\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../utils/validationFunctions\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { isPageValid, updateAddField } from \"../createTenantSlice\";\n\ninterface IImagesProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst Images = ({ classes }: IImagesProps) => {\n  const dispatch = useAppDispatch();\n\n  const customImage = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.customImage\n  );\n  const imageName = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.imageName\n  );\n  const customDockerhub = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.customDockerhub\n  );\n  const imageRegistry = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.imageRegistry\n  );\n  const imageRegistryUsername = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.imageRegistryUsername\n  );\n  const imageRegistryPassword = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.imageRegistryPassword\n  );\n\n  const prometheusCustom = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.prometheusEnabled\n  );\n  const tenantCustom = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.tenantCustom\n  );\n  const logSearchCustom = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.logSearchEnabled\n  );\n  const logSearchVolumeSize = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.logSearchVolumeSize\n  );\n\n  const prometheusVolumeSize = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.prometheusVolumeSize\n  );\n\n  const logSearchSelectedStorageClass = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.logSearchSelectedStorageClass\n  );\n  const logSearchImage = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.logSearchImage\n  );\n  const kesImage = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.kesImage\n  );\n  const logSearchPostgresImage = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.logSearchPostgresImage\n  );\n  const logSearchPostgresInitImage = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.logSearchPostgresInitImage\n  );\n  const prometheusSelectedStorageClass = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.prometheusSelectedStorageClass\n  );\n  const prometheusImage = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.prometheusImage\n  );\n  const prometheusSidecarImage = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.prometheusSidecarImage\n  );\n  const prometheusInitImage = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.prometheusInitImage\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"configure\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  // Validation\n  useEffect(() => {\n    let customAccountValidation: IValidation[] = [];\n\n    if (prometheusCustom) {\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"prometheus_storage_class\",\n          required: true,\n          value: prometheusSelectedStorageClass,\n          customValidation: prometheusSelectedStorageClass === \"\",\n          customValidationMessage: \"Field cannot be empty\",\n        },\n        {\n          fieldKey: \"prometheus_volume_size\",\n          required: true,\n          value: prometheusVolumeSize,\n          customValidation:\n            prometheusVolumeSize === \"\" || parseInt(prometheusVolumeSize) <= 0,\n          customValidationMessage: `Volume size must be present and be greatter than 0`,\n        },\n      ];\n    }\n    if (logSearchCustom) {\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"log_search_storage_class\",\n          required: true,\n          value: logSearchSelectedStorageClass,\n          customValidation: logSearchSelectedStorageClass === \"\",\n          customValidationMessage: \"Field cannot be empty\",\n        },\n        {\n          fieldKey: \"log_search_volume_size\",\n          required: true,\n          value: logSearchVolumeSize,\n          customValidation:\n            logSearchVolumeSize === \"\" || parseInt(logSearchVolumeSize) <= 0,\n          customValidationMessage: `Volume size must be present and be greatter than 0`,\n        },\n      ];\n    }\n\n    if (customImage) {\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"image\",\n          required: false,\n          value: imageName,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage: \"Format must be of form: 'minio/minio:VERSION'\",\n        },\n        {\n          fieldKey: \"logSearchImage\",\n          required: false,\n          value: logSearchImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'minio/operator:VERSION'\",\n        },\n        {\n          fieldKey: \"kesImage\",\n          required: false,\n          value: kesImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage: \"Format must be of form: 'minio/kes:VERSION'\",\n        },\n        {\n          fieldKey: \"logSearchPostgresImage\",\n          required: false,\n          value: logSearchPostgresImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'library/postgres:VERSION'\",\n        },\n        {\n          fieldKey: \"logSearchPostgresInitImage\",\n          required: false,\n          value: logSearchPostgresInitImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'library/busybox:VERSION'\",\n        },\n        {\n          fieldKey: \"prometheusImage\",\n          required: false,\n          value: prometheusImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'minio/prometheus:VERSION'\",\n        },\n        {\n          fieldKey: \"prometheusSidecarImage\",\n          required: false,\n          value: prometheusSidecarImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'project/container:VERSION'\",\n        },\n        {\n          fieldKey: \"prometheusInitImage\",\n          required: false,\n          value: prometheusInitImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'library/busybox:VERSION'\",\n        },\n      ];\n      if (customDockerhub) {\n        customAccountValidation = [\n          ...customAccountValidation,\n          {\n            fieldKey: \"registry\",\n            required: true,\n            value: imageRegistry,\n          },\n          {\n            fieldKey: \"registryUsername\",\n            required: true,\n            value: imageRegistryUsername,\n          },\n          {\n            fieldKey: \"registryPassword\",\n            required: true,\n            value: imageRegistryPassword,\n          },\n        ];\n      }\n    }\n\n    const commonVal = commonFormValidation(customAccountValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"configure\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    customImage,\n    imageName,\n    logSearchImage,\n    kesImage,\n    logSearchPostgresImage,\n    logSearchPostgresInitImage,\n    prometheusImage,\n    prometheusSidecarImage,\n    prometheusInitImage,\n    customDockerhub,\n    imageRegistry,\n    imageRegistryUsername,\n    imageRegistryPassword,\n    dispatch,\n    prometheusCustom,\n    tenantCustom,\n    logSearchCustom,\n    prometheusSelectedStorageClass,\n    prometheusVolumeSize,\n    logSearchSelectedStorageClass,\n    logSearchVolumeSize,\n  ]);\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <h3 className={classes.h3Section}>Container Images</h3>\n        <span className={classes.descriptionText}>\n          Specify the container images used by the Tenant and it's features.\n        </span>\n      </div>\n\n      <Fragment>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"image\"\n            name=\"image\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"imageName\", e.target.value);\n              cleanValidation(\"image\");\n            }}\n            label=\"MinIO\"\n            value={imageName}\n            error={validationErrors[\"image\"] || \"\"}\n            placeholder=\"minio/minio:RELEASE.2022-02-26T02-54-46Z\"\n          />\n        </Grid>\n\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"kesImage\"\n            name=\"kesImage\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"kesImage\", e.target.value);\n              cleanValidation(\"kesImage\");\n            }}\n            label=\"KES\"\n            value={kesImage}\n            error={validationErrors[\"kesImage\"] || \"\"}\n            placeholder=\"minio/kes:v0.17.6\"\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <h4>Log Search</h4>\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"logSearchImage\"\n            name=\"logSearchImage\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"logSearchImage\", e.target.value);\n              cleanValidation(\"logSearchImage\");\n            }}\n            label=\"API\"\n            value={logSearchImage}\n            error={validationErrors[\"logSearchImage\"] || \"\"}\n            placeholder=\"minio/operator:v4.4.22\"\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"logSearchPostgresImage\"\n            name=\"logSearchPostgresImage\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"logSearchPostgresImage\", e.target.value);\n              cleanValidation(\"logSearchPostgresImage\");\n            }}\n            label=\"PostgreSQL\"\n            value={logSearchPostgresImage}\n            error={validationErrors[\"logSearchPostgresImage\"] || \"\"}\n            placeholder=\"library/postgres:13\"\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"logSearchPostgresInitImage\"\n            name=\"logSearchPostgresInitImage\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"logSearchPostgresInitImage\", e.target.value);\n              cleanValidation(\"logSearchPostgresInitImage\");\n            }}\n            label=\"PostgreSQL Init\"\n            value={logSearchPostgresInitImage}\n            error={validationErrors[\"logSearchPostgresInitImage\"] || \"\"}\n            placeholder=\"library/busybox:1.33.1\"\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <h4>Monitoring</h4>\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"prometheusImage\"\n            name=\"prometheusImage\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"prometheusImage\", e.target.value);\n              cleanValidation(\"prometheusImage\");\n            }}\n            label=\"Prometheus\"\n            value={prometheusImage}\n            error={validationErrors[\"prometheusImage\"] || \"\"}\n            placeholder=\"quay.io/prometheus/prometheus:latest\"\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"prometheusSidecarImage\"\n            name=\"prometheusSidecarImage\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"prometheusSidecarImage\", e.target.value);\n              cleanValidation(\"prometheusSidecarImage\");\n            }}\n            label=\"Prometheus Sidecar\"\n            value={prometheusSidecarImage}\n            error={validationErrors[\"prometheusSidecarImage\"] || \"\"}\n            placeholder=\"library/alpine:latest\"\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"prometheusInitImage\"\n            name=\"prometheusInitImage\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"prometheusInitImage\", e.target.value);\n              cleanValidation(\"prometheusInitImage\");\n            }}\n            label=\"Prometheus Init\"\n            value={prometheusInitImage}\n            error={validationErrors[\"prometheusInitImage\"] || \"\"}\n            placeholder=\"library/busybox:1.33.1\"\n          />\n        </Grid>\n      </Fragment>\n\n      {customImage && (\n        <Fragment>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <h4>Custom Container Registry</h4>\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <FormSwitchWrapper\n              value=\"custom_docker_hub\"\n              id=\"custom_docker_hub\"\n              name=\"custom_docker_hub\"\n              checked={customDockerhub}\n              onChange={(e) => {\n                const targetD = e.target;\n                const checked = targetD.checked;\n\n                updateField(\"customDockerhub\", checked);\n              }}\n              label={\"Use a private container registry\"}\n            />\n          </Grid>\n        </Fragment>\n      )}\n      {customDockerhub && (\n        <Fragment>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"registry\"\n              name=\"registry\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"imageRegistry\", e.target.value);\n              }}\n              label=\"Endpoint\"\n              value={imageRegistry}\n              error={validationErrors[\"registry\"] || \"\"}\n              placeholder=\"https://index.docker.io/v1/\"\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"registryUsername\"\n              name=\"registryUsername\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"imageRegistryUsername\", e.target.value);\n              }}\n              label=\"Username\"\n              value={imageRegistryUsername}\n              error={validationErrors[\"registryUsername\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"registryPassword\"\n              name=\"registryPassword\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"imageRegistryPassword\", e.target.value);\n              }}\n              label=\"Password\"\n              value={imageRegistryPassword}\n              error={validationErrors[\"registryPassword\"] || \"\"}\n              required\n            />\n          </Grid>\n        </Fragment>\n      )}\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(Images);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { AppState } from \"../../../../../store\";\nimport {\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableRow from \"@mui/material/TableRow\";\nimport { niceBytes } from \"../../../../../common/utils\";\n\nimport { Divider } from \"@mui/material\";\n\ninterface ISizePreviewProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      margin: 4,\n    },\n    table: {\n      \"& .MuiTableCell-root\": {\n        fontSize: 13,\n      },\n    },\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst SizePreview = ({ classes }: ISizePreviewProps) => {\n  const nodes = useSelector(\n    (state: AppState) => state.createTenant.fields.tenantSize.nodes\n  );\n  const memoryNode = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.tenantSize.resourcesMemoryRequest\n  );\n  const ecParity = useSelector(\n    (state: AppState) => state.createTenant.fields.tenantSize.ecParity\n  );\n\n  const distribution = useSelector(\n    (state: AppState) => state.createTenant.fields.tenantSize.distribution\n  );\n  const ecParityCalc = useSelector(\n    (state: AppState) => state.createTenant.fields.tenantSize.ecParityCalc\n  );\n\n  const cpuToUse = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.tenantSize.resourcesCPURequest\n  );\n  const integrationSelection = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.tenantSize.integrationSelection\n  );\n\n  const usableInformation = ecParityCalc.storageFactors.find(\n    (element) => element.erasureCode === ecParity\n  );\n\n  return (\n    <div className={classes.root}>\n      <h4>Resource Allocation</h4>\n      <Divider />\n      <Table className={classes.table} aria-label=\"simple table\" size={\"small\"}>\n        <TableBody>\n          <TableRow>\n            <TableCell scope=\"row\">Number of Servers</TableCell>\n            <TableCell align=\"right\">\n              {parseInt(nodes) > 0 ? nodes : \"-\"}\n            </TableCell>\n          </TableRow>\n          {integrationSelection.typeSelection === \"\" &&\n            integrationSelection.storageClass === \"\" && (\n              <Fragment>\n                <TableRow>\n                  <TableCell scope=\"row\">Drives per Server</TableCell>\n                  <TableCell align=\"right\">\n                    {distribution ? distribution.disks : \"-\"}\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell scope=\"row\">Drive Capacity</TableCell>\n                  <TableCell align=\"right\">\n                    {distribution ? niceBytes(distribution.pvSize) : \"-\"}\n                  </TableCell>\n                </TableRow>\n              </Fragment>\n            )}\n\n          <TableRow>\n            <TableCell scope=\"row\">Total Volumes</TableCell>\n            <TableCell align=\"right\">\n              {distribution ? distribution.persistentVolumes : \"-\"}\n            </TableCell>\n          </TableRow>\n          {integrationSelection.typeSelection === \"\" &&\n            integrationSelection.storageClass === \"\" && (\n              <Fragment>\n                <TableRow>\n                  <TableCell scope=\"row\">Memory per Node</TableCell>\n                  <TableCell align=\"right\">{memoryNode} Gi</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell style={{ borderBottom: 0 }} scope=\"row\">\n                    CPU Selection\n                  </TableCell>\n                  <TableCell style={{ borderBottom: 0 }} align=\"right\">\n                    {cpuToUse}\n                  </TableCell>\n                </TableRow>\n              </Fragment>\n            )}\n        </TableBody>\n      </Table>\n      {ecParityCalc.error === 0 && usableInformation && (\n        <Fragment>\n          <h4>Erasure Code Configuration</h4>\n          <Divider />\n          <Table\n            className={classes.table}\n            aria-label=\"simple table\"\n            size={\"small\"}\n          >\n            <TableBody>\n              <TableRow>\n                <TableCell scope=\"row\">EC Parity</TableCell>\n                <TableCell align=\"right\">\n                  {ecParity !== \"\" ? ecParity : \"-\"}\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell scope=\"row\">Raw Capacity</TableCell>\n                <TableCell align=\"right\">\n                  {niceBytes(ecParityCalc.rawCapacity)}\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell scope=\"row\">Usable Capacity</TableCell>\n                <TableCell align=\"right\">\n                  {niceBytes(usableInformation.maxCapacity)}\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell style={{ borderBottom: 0 }} scope=\"row\">\n                  Server Failures Tolerated\n                </TableCell>\n                <TableCell style={{ borderBottom: 0 }} align=\"right\">\n                  {distribution\n                    ? Math.floor(\n                        usableInformation.maxFailureTolerations /\n                          distribution.disks\n                      )\n                    : \"-\"}\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </Fragment>\n      )}\n      {integrationSelection.typeSelection !== \"\" &&\n        integrationSelection.storageClass !== \"\" && (\n          <Fragment>\n            <h4>Single Instance Configuration</h4>\n            <Divider />\n            <Table\n              className={classes.table}\n              aria-label=\"simple table\"\n              size={\"small\"}\n            >\n              <TableBody>\n                <TableRow>\n                  <TableCell scope=\"row\">CPU</TableCell>\n                  <TableCell align=\"right\">\n                    {integrationSelection.CPU !== 0\n                      ? integrationSelection.CPU\n                      : \"-\"}\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell scope=\"row\">Memory</TableCell>\n                  <TableCell align=\"right\">\n                    {integrationSelection.memory !== 0\n                      ? `${integrationSelection.memory} Gi`\n                      : \"-\"}\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell scope=\"row\">Drives per Server</TableCell>\n                  <TableCell align=\"right\">\n                    {integrationSelection.drivesPerServer !== 0\n                      ? `${integrationSelection.drivesPerServer}`\n                      : \"-\"}\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell style={{ borderBottom: 0 }} scope=\"row\">\n                    Drive Size\n                  </TableCell>\n                  <TableCell style={{ borderBottom: 0 }} align=\"right\">\n                    {integrationSelection.driveSize.driveSize}\n                    {integrationSelection.driveSize.sizeUnit}\n                  </TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </Fragment>\n        )}\n    </div>\n  );\n};\n\nexport default withStyles(styles)(SizePreview);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { DialogContentText, LinearProgress } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  deleteDialogStyles,\n  modalBasic,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport ConfirmDialog from \"../../../../Common/ModalWrapper/ConfirmDialog\";\nimport { ConfirmModalIcon } from \"mds\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { closeAddNSModal } from \"../../createTenantSlice\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { createNamespaceAsync } from \"../../thunks/namespaceThunks\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    wrapText: {\n      maxWidth: \"200px\",\n      whiteSpace: \"normal\",\n      wordWrap: \"break-word\",\n    },\n    ...modalBasic,\n    ...deleteDialogStyles,\n  })\n);\n\nconst AddNamespaceModal = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const namespace = useSelector(\n    (state: AppState) => state.createTenant.fields.nameTenant.namespace\n  );\n  const addNamespaceLoading = useSelector(\n    (state: AppState) => state.createTenant.addNSLoading\n  );\n  const addNamespaceOpen = useSelector(\n    (state: AppState) => state.createTenant.addNSOpen\n  );\n\n  return (\n    <ConfirmDialog\n      title={`New namespace`}\n      confirmText={\"Create\"}\n      confirmButtonProps={{\n        variant: \"callAction\",\n      }}\n      isOpen={addNamespaceOpen}\n      titleIcon={<ConfirmModalIcon />}\n      isLoading={addNamespaceLoading}\n      onConfirm={() => {\n        dispatch(createNamespaceAsync());\n      }}\n      onClose={() => {\n        dispatch(closeAddNSModal());\n      }}\n      confirmationContent={\n        <React.Fragment>\n          {addNamespaceLoading && <LinearProgress />}\n          <DialogContentText>\n            Are you sure you want to add a namespace called\n            <br />\n            <b className={classes.wrapText}>{namespace}</b>?\n          </DialogContentText>\n        </React.Fragment>\n      }\n    />\n  );\n};\n\nexport default AddNamespaceModal;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useMemo } from \"react\";\nimport { AddIcon } from \"mds\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { openAddNSModal, setNamespace } from \"../../createTenantSlice\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport AddNamespaceModal from \"../helpers/AddNamespaceModal\";\nimport debounce from \"lodash/debounce\";\nimport { IMkEnvs } from \"./utils\";\nimport { validateNamespaceAsync } from \"../../thunks/namespaceThunks\";\n\nconst NamespaceSelector = ({ formToRender }: { formToRender?: IMkEnvs }) => {\n  const dispatch = useAppDispatch();\n\n  const namespace = useSelector(\n    (state: AppState) => state.createTenant.fields.nameTenant.namespace\n  );\n\n  const showNSCreateButton = useSelector(\n    (state: AppState) => state.createTenant.showNSCreateButton\n  );\n\n  const namespaceError = useSelector(\n    (state: AppState) => state.createTenant.validationErrors[\"namespace\"]\n  );\n  const openAddNSConfirm = useSelector(\n    (state: AppState) => state.createTenant.addNSOpen\n  );\n\n  const debounceNamespace = useMemo(\n    () =>\n      debounce(() => {\n        dispatch(validateNamespaceAsync());\n      }, 500),\n    [dispatch]\n  );\n\n  useEffect(() => {\n    if (namespace !== \"\") {\n      debounceNamespace();\n      // Cancel previous debounce calls during useEffect cleanup.\n      return debounceNamespace.cancel;\n    }\n  }, [debounceNamespace, namespace]);\n\n  const addNamespace = () => {\n    dispatch(openAddNSModal());\n  };\n\n  return (\n    <Fragment>\n      {openAddNSConfirm && <AddNamespaceModal />}\n      <InputBoxWrapper\n        id=\"namespace\"\n        name=\"namespace\"\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n          dispatch(setNamespace(e.target.value));\n        }}\n        label=\"Namespace\"\n        value={namespace}\n        error={namespaceError || \"\"}\n        overlayId={\"add-namespace\"}\n        overlayIcon={showNSCreateButton ? <AddIcon /> : null}\n        overlayAction={addNamespace}\n        required\n      />\n    </Fragment>\n  );\n};\nexport default NamespaceSelector;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport get from \"lodash/get\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport SelectWrapper from \"../../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport SizePreview from \"../SizePreview\";\nimport TenantSize from \"./TenantSize\";\nimport { Paper, SelectChangeEvent } from \"@mui/material\";\nimport { IMkEnvs, mkPanelConfigurations } from \"./utils\";\nimport {\n  isPageValid,\n  setStorageType,\n  setTenantName,\n  updateAddField,\n} from \"../../createTenantSlice\";\nimport { selFeatures } from \"../../../../consoleSlice\";\nimport NamespaceSelector from \"./NamespaceSelector\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    sizePreview: {\n      marginLeft: 10,\n      background: \"#FFFFFF\",\n      border: \"1px solid #EAEAEA\",\n      padding: 2,\n      marginTop: 20,\n    },\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst NameTenantField = () => {\n  const dispatch = useAppDispatch();\n  const tenantName = useSelector(\n    (state: AppState) => state.createTenant.fields.nameTenant.tenantName\n  );\n\n  const tenantNameError = useSelector(\n    (state: AppState) => state.createTenant.validationErrors[\"tenant-name\"]\n  );\n\n  return (\n    <InputBoxWrapper\n      id=\"tenant-name\"\n      name=\"tenant-name\"\n      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n        dispatch(setTenantName(e.target.value));\n      }}\n      label=\"Name\"\n      value={tenantName}\n      required\n      error={tenantNameError || \"\"}\n    />\n  );\n};\n\ninterface INameTenantMainScreen {\n  classes: any;\n  formToRender?: IMkEnvs;\n}\n\nconst NameTenantMain = ({ classes, formToRender }: INameTenantMainScreen) => {\n  const dispatch = useAppDispatch();\n\n  const selectedStorageClass = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.nameTenant.selectedStorageClass\n  );\n  const selectedStorageType = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.nameTenant.selectedStorageType\n  );\n  const storageClasses = useSelector(\n    (state: AppState) => state.createTenant.storageClasses\n  );\n  const features = useSelector(selFeatures);\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: string) => {\n      dispatch(\n        updateAddField({ pageName: \"nameTenant\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  // Validation\n  useEffect(() => {\n    const isValid =\n      (formToRender === IMkEnvs.default && storageClasses.length > 0) ||\n      (formToRender !== IMkEnvs.default && selectedStorageType !== \"\");\n\n    dispatch(isPageValid({ pageName: \"nameTenant\", valid: isValid }));\n  }, [storageClasses, dispatch, selectedStorageType, formToRender]);\n\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item sx={{ width: \"calc(100% - 300px)\" }}>\n          <Paper className={classes.paperWrapper} sx={{ minHeight: 550 }}>\n            <Grid container>\n              <Grid item xs={12}>\n                <div className={classes.headerElement}>\n                  <h3 className={classes.h3Section}>Name</h3>\n                  <span className={classes.descriptionText}>\n                    How would you like to name this new tenant?\n                  </span>\n                </div>\n                <div className={classes.formFieldRow}>\n                  <NameTenantField />\n                </div>\n              </Grid>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <NamespaceSelector formToRender={formToRender} />\n              </Grid>\n              {formToRender === IMkEnvs.default ? (\n                <Grid item xs={12} className={classes.formFieldRow}>\n                  <SelectWrapper\n                    id=\"storage_class\"\n                    name=\"storage_class\"\n                    onChange={(e: SelectChangeEvent<string>) => {\n                      updateField(\n                        \"selectedStorageClass\",\n                        e.target.value as string\n                      );\n                    }}\n                    label=\"Storage Class\"\n                    value={selectedStorageClass}\n                    options={storageClasses}\n                    disabled={storageClasses.length < 1}\n                  />\n                </Grid>\n              ) : (\n                <Grid item xs={12} className={classes.formFieldRow}>\n                  <SelectWrapper\n                    id=\"storage_type\"\n                    name=\"storage_type\"\n                    onChange={(e: SelectChangeEvent<string>) => {\n                      dispatch(\n                        setStorageType({\n                          storageType: e.target.value as string,\n                          features: features,\n                        })\n                      );\n                    }}\n                    label={get(\n                      mkPanelConfigurations,\n                      `${formToRender}.variantSelectorLabel`,\n                      \"Storage Type\"\n                    )}\n                    value={selectedStorageType}\n                    options={get(\n                      mkPanelConfigurations,\n                      `${formToRender}.variantSelectorValues`,\n                      []\n                    )}\n                  />\n                </Grid>\n              )}\n              {formToRender === IMkEnvs.default ? (\n                <TenantSize />\n              ) : (\n                get(\n                  mkPanelConfigurations,\n                  `${formToRender}.sizingComponent`,\n                  null\n                )\n              )}\n            </Grid>\n          </Paper>\n        </Grid>\n        <Grid item>\n          <div className={classes.sizePreview}>\n            <SizePreview />\n          </div>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(NameTenantMain);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport get from \"lodash/get\";\nimport NameTenantMain from \"./NameTenantMain\";\nimport { IMkEnvs, resourcesConfigurations } from \"./utils\";\nimport { selFeatures } from \"../../../../consoleSlice\";\n\nconst TenantResources = () => {\n  const features = useSelector(selFeatures);\n  const [formRender, setFormRender] = useState<IMkEnvs | null>(null);\n\n  useEffect(() => {\n    let setConfiguration = IMkEnvs.default;\n\n    if (features && features.length !== 0) {\n      const possibleVariables = Object.keys(resourcesConfigurations);\n\n      possibleVariables.forEach((element) => {\n        if (features.includes(element)) {\n          setConfiguration = get(\n            resourcesConfigurations,\n            element,\n            IMkEnvs.default\n          );\n        }\n      });\n    }\n\n    setFormRender(setConfiguration);\n  }, [features]);\n\n  if (formRender === null) {\n    return null;\n  }\n\n  return <NameTenantMain formToRender={formRender} />;\n};\n\nexport default TenantResources;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, Paper, SelectChangeEvent } from \"@mui/material\";\nimport {\n  createTenantCommon,\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport { AppState, useAppDispatch } from \"../../../../../store\";\nimport { clearValidationError } from \"../../utils\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../utils/validationFunctions\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport SelectWrapper from \"../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport InputUnitMenu from \"../../../Common/FormComponents/InputUnitMenu/InputUnitMenu\";\nimport SectionH1 from \"../../../Common/SectionH1\";\nimport { isPageValid, updateAddField } from \"../createTenantSlice\";\n\ninterface IConfigureProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    configSectionItem: {\n      marginRight: 15,\n\n      \"& .multiContainer\": {\n        border: \"1px solid red\",\n      },\n    },\n    fieldGroup: {\n      ...createTenantCommon.fieldGroup,\n      paddingTop: 15,\n      marginBottom: 25,\n    },\n    responsiveSectionItem: {\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n        alignItems: \"flex-start\",\n\n        \"& div > div\": {\n          marginBottom: 5,\n          marginRight: 0,\n        },\n      },\n    },\n\n    logSearchEnabledFields: {\n      marginLeft: 20, // 2nd Level(15+15)\n      padding: 10,\n      width: \"90%\",\n      margin: \"auto\",\n    },\n    fieldSpaceTop: {\n      marginTop: 15,\n    },\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst ConfigLogSearch = ({ classes }: IConfigureProps) => {\n  const dispatch = useAppDispatch();\n\n  const storageClasses = useSelector(\n    (state: AppState) => state.createTenant.storageClasses\n  );\n  const logSearchEnabled = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.logSearchEnabled\n  );\n  const logSearchVolumeSize = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.logSearchVolumeSize\n  );\n  const logSearchSelectedStorageClass = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.logSearchSelectedStorageClass\n  );\n  const logSearchImage = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.logSearchImage\n  );\n  const logSearchPostgresImage = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.logSearchPostgresImage\n  );\n  const logSearchPostgresInitImage = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.logSearchPostgresInitImage\n  );\n  const selectedStorageClass = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.nameTenant.selectedStorageClass\n  );\n  const tenantSecurityContext = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.tenantSecurityContext\n  );\n  const logSearchSecurityContext = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.logSearchSecurityContext\n  );\n  const logSearchPostgresSecurityContext = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.logSearchPostgresSecurityContext\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  const configureSTClasses = [\n    { label: \"Default\", value: \"default\" },\n    ...storageClasses,\n  ];\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"configure\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  // Validation\n  useEffect(() => {\n    let customAccountValidation: IValidation[] = [];\n\n    if (logSearchEnabled) {\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"log_search_storage_class\",\n          required: true,\n          value: logSearchSelectedStorageClass,\n          customValidation: logSearchSelectedStorageClass === \"\",\n          customValidationMessage: \"Field cannot be empty\",\n        },\n        {\n          fieldKey: \"log_search_volume_size\",\n          required: true,\n          value: logSearchVolumeSize,\n          customValidation:\n            logSearchVolumeSize === \"\" || parseInt(logSearchVolumeSize) <= 0,\n          customValidationMessage: `Volume size must be present and be greatter than 0`,\n        },\n        {\n          fieldKey: \"logSearch_securityContext_runAsUser\",\n          required: true,\n          value: logSearchSecurityContext.runAsUser,\n          customValidation:\n            logSearchSecurityContext.runAsUser === \"\" ||\n            parseInt(logSearchSecurityContext.runAsUser) < 0,\n          customValidationMessage: `runAsUser must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"logSearch_securityContext_runAsGroup\",\n          required: true,\n          value: logSearchSecurityContext.runAsGroup,\n          customValidation:\n            logSearchSecurityContext.runAsGroup === \"\" ||\n            parseInt(logSearchSecurityContext.runAsGroup) < 0,\n          customValidationMessage: `runAsGroup must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"logSearch_securityContext_fsGroup\",\n          required: true,\n          value: logSearchSecurityContext.fsGroup,\n          customValidation:\n            logSearchSecurityContext.fsGroup === \"\" ||\n            parseInt(logSearchSecurityContext.fsGroup) < 0,\n          customValidationMessage: `fsGroup must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"postgres_securityContext_runAsUser\",\n          required: true,\n          value: logSearchPostgresSecurityContext.runAsUser,\n          customValidation:\n            logSearchPostgresSecurityContext.runAsUser === \"\" ||\n            parseInt(logSearchPostgresSecurityContext.runAsUser) < 0,\n          customValidationMessage: `runAsUser must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"postgres_securityContext_runAsGroup\",\n          required: true,\n          value: logSearchSecurityContext.runAsGroup,\n          customValidation:\n            logSearchPostgresSecurityContext.runAsGroup === \"\" ||\n            parseInt(logSearchPostgresSecurityContext.runAsGroup) < 0,\n          customValidationMessage: `runAsGroup must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"postgres_securityContext_fsGroup\",\n          required: true,\n          value: logSearchPostgresSecurityContext.fsGroup,\n          customValidation:\n            logSearchPostgresSecurityContext.fsGroup === \"\" ||\n            parseInt(logSearchPostgresSecurityContext.fsGroup) < 0,\n          customValidationMessage: `fsGroup must be present and be 0 or more`,\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(customAccountValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"configure\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    logSearchImage,\n    logSearchPostgresImage,\n    logSearchPostgresInitImage,\n    dispatch,\n    logSearchEnabled,\n    logSearchSelectedStorageClass,\n    logSearchVolumeSize,\n    tenantSecurityContext,\n    logSearchSecurityContext,\n    logSearchPostgresSecurityContext,\n  ]);\n\n  useEffect(() => {\n    // New default values in current selection is invalid\n    if (storageClasses.length > 0) {\n      const filterLogSearch = storageClasses.filter(\n        (item: any) => item.value === logSearchSelectedStorageClass\n      );\n      if (filterLogSearch.length === 0) {\n        updateField(\"logSearchSelectedStorageClass\", \"default\");\n      }\n    }\n  }, [\n    logSearchSelectedStorageClass,\n    selectedStorageClass,\n    storageClasses,\n    updateField,\n  ]);\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <Grid container alignItems={\"center\"}>\n        <Grid item xs>\n          <SectionH1>Audit Log</SectionH1>\n        </Grid>\n        <Grid item xs={4}>\n          <FormSwitchWrapper\n            value=\"enableLogging\"\n            id=\"enableLogging\"\n            name=\"enableLogging\"\n            checked={logSearchEnabled}\n            onChange={(e) => {\n              const targetD = e.target;\n              const checked = targetD.checked;\n\n              updateField(\"logSearchEnabled\", checked);\n            }}\n            indicatorLabels={[\"Enabled\", \"Disabled\"]}\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <span className={classes.descriptionText}>\n            Deploys a small PostgreSQL database and stores access logs of all\n            calls into the tenant.\n          </span>\n        </Grid>\n        <Grid xs={12}>\n          <hr className={classes.hrClass} />\n        </Grid>\n        {logSearchEnabled && (\n          <Fragment>\n            <Grid item xs={12}>\n              <SelectWrapper\n                id=\"log_search_storage_class\"\n                name=\"log_search_storage_class\"\n                onChange={(e: SelectChangeEvent<string>) => {\n                  updateField(\n                    \"logSearchSelectedStorageClass\",\n                    e.target.value as string\n                  );\n                }}\n                label=\"Log Search Storage Class\"\n                value={logSearchSelectedStorageClass}\n                options={configureSTClasses}\n                disabled={configureSTClasses.length < 1}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <div className={classes.multiContainer}>\n                <InputBoxWrapper\n                  type=\"number\"\n                  id=\"log_search_volume_size\"\n                  name=\"log_search_volume_size\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"logSearchVolumeSize\", e.target.value);\n                    cleanValidation(\"log_search_volume_size\");\n                  }}\n                  label=\"Storage Size\"\n                  overlayObject={\n                    <InputUnitMenu\n                      id={\"size-unit\"}\n                      onUnitChange={() => {}}\n                      unitSelected={\"Gi\"}\n                      unitsList={[{ label: \"Gi\", value: \"Gi\" }]}\n                      disabled={true}\n                    />\n                  }\n                  value={logSearchVolumeSize}\n                  required\n                  error={validationErrors[\"log_search_volume_size\"] || \"\"}\n                  min=\"0\"\n                />\n              </div>\n            </Grid>\n\n            <fieldset\n              className={`${classes.fieldGroup} ${classes.fieldSpaceTop}`}\n            >\n              <legend className={classes.descriptionText}>\n                SecurityContext for LogSearch\n              </legend>\n\n              <Grid item xs={12}>\n                <div\n                  className={`${classes.multiContainer} ${classes.responsiveSectionItem}`}\n                >\n                  <div className={classes.configSectionItem}>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"logSearch_securityContext_runAsUser\"\n                      name=\"logSearch_securityContext_runAsUser\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"logSearchSecurityContext\", {\n                          ...logSearchSecurityContext,\n                          runAsUser: e.target.value,\n                        });\n                        cleanValidation(\"logSearch_securityContext_runAsUser\");\n                      }}\n                      label=\"Run As User\"\n                      value={logSearchSecurityContext.runAsUser}\n                      required\n                      error={\n                        validationErrors[\n                          \"logSearch_securityContext_runAsUser\"\n                        ] || \"\"\n                      }\n                      min=\"0\"\n                    />\n                  </div>\n                  <div className={classes.configSectionItem}>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"logSearch_securityContext_runAsGroup\"\n                      name=\"logSearch_securityContext_runAsGroup\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"logSearchSecurityContext\", {\n                          ...logSearchSecurityContext,\n                          runAsGroup: e.target.value,\n                        });\n                        cleanValidation(\"logSearch_securityContext_runAsGroup\");\n                      }}\n                      label=\"Run As Group\"\n                      value={logSearchSecurityContext.runAsGroup}\n                      required\n                      error={\n                        validationErrors[\n                          \"logSearch_securityContext_runAsGroup\"\n                        ] || \"\"\n                      }\n                      min=\"0\"\n                    />\n                  </div>\n                </div>\n              </Grid>\n              <br />\n              <Grid item xs={12}>\n                <div\n                  className={`${classes.multiContainer} ${classes.responsiveSectionItem}`}\n                >\n                  <div className={classes.configSectionItem}>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"logSearch_securityContext_fsGroup\"\n                      name=\"logSearch_securityContext_fsGroup\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"logSearchSecurityContext\", {\n                          ...logSearchSecurityContext,\n                          fsGroup: e.target.value,\n                        });\n                        cleanValidation(\"logSearch_securityContext_fsGroup\");\n                      }}\n                      label=\"FsGroup\"\n                      value={logSearchSecurityContext.fsGroup}\n                      required\n                      error={\n                        validationErrors[\"logSearch_securityContext_fsGroup\"] ||\n                        \"\"\n                      }\n                      min=\"0\"\n                    />\n                  </div>\n                  <div className={classes.configSectionItem}>\n                    <SelectWrapper\n                      label=\"FsGroupChangePolicy\"\n                      id=\"securityContext_fsGroupChangePolicy\"\n                      name=\"securityContext_fsGroupChangePolicy\"\n                      value={logSearchSecurityContext.fsGroupChangePolicy}\n                      onChange={(e: SelectChangeEvent<string>) => {\n                        updateField(\"logSearchSecurityContext\", {\n                          ...logSearchSecurityContext,\n                          fsGroupChangePolicy: e.target.value,\n                        });\n                      }}\n                      options={[\n                        {\n                          label: \"Always\",\n                          value: \"Always\",\n                        },\n                        {\n                          label: \"OnRootMismatch\",\n                          value: \"OnRootMismatch\",\n                        },\n                      ]}\n                    />\n                  </div>\n                </div>\n              </Grid>\n              <br />\n              <Grid item xs={12}>\n                <div className={classes.multiContainer}>\n                  <FormSwitchWrapper\n                    value=\"logSearchSecurityContextRunAsNonRoot\"\n                    id=\"logSearch_securityContext_runAsNonRoot\"\n                    name=\"logSearch_securityContext_runAsNonRoot\"\n                    checked={logSearchSecurityContext.runAsNonRoot}\n                    onChange={(e) => {\n                      const targetD = e.target;\n                      const checked = targetD.checked;\n                      updateField(\"logSearchSecurityContext\", {\n                        ...logSearchSecurityContext,\n                        runAsNonRoot: checked,\n                      });\n                    }}\n                    label={\"Do not run as Root\"}\n                  />\n                </div>\n              </Grid>\n            </fieldset>\n            <fieldset className={classes.fieldGroup}>\n              <legend className={classes.descriptionText}>\n                SecurityContext for PostgreSQL\n              </legend>\n\n              <Grid item xs={12}>\n                <div\n                  className={`${classes.multiContainer} ${classes.responsiveSectionItem}`}\n                >\n                  <div className={classes.configSectionItem}>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"postgres_securityContext_runAsUser\"\n                      name=\"postgres_securityContext_runAsUser\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"logSearchPostgresSecurityContext\", {\n                          ...logSearchPostgresSecurityContext,\n                          runAsUser: e.target.value,\n                        });\n                        cleanValidation(\"postgres_securityContext_runAsUser\");\n                      }}\n                      label=\"Run As User\"\n                      value={logSearchPostgresSecurityContext.runAsUser}\n                      required\n                      error={\n                        validationErrors[\n                          \"postgres_securityContext_runAsUser\"\n                        ] || \"\"\n                      }\n                      min=\"0\"\n                    />\n                  </div>\n                  <div className={classes.configSectionItem}>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"postgres_securityContext_runAsGroup\"\n                      name=\"postgres_securityContext_runAsGroup\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"logSearchPostgresSecurityContext\", {\n                          ...logSearchPostgresSecurityContext,\n                          runAsGroup: e.target.value,\n                        });\n                        cleanValidation(\"postgres_securityContext_runAsGroup\");\n                      }}\n                      label=\"Run As Group\"\n                      value={logSearchPostgresSecurityContext.runAsGroup}\n                      required\n                      error={\n                        validationErrors[\n                          \"postgres_securityContext_runAsGroup\"\n                        ] || \"\"\n                      }\n                      min=\"0\"\n                    />\n                  </div>\n                </div>\n              </Grid>\n              <br />\n              <Grid item xs={12}>\n                <div\n                  className={`${classes.multiContainer} ${classes.responsiveSectionItem}`}\n                >\n                  <div className={classes.configSectionItem}>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"postgres_securityContext_fsGroup\"\n                      name=\"postgres_securityContext_fsGroup\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"logSearchPostgresSecurityContext\", {\n                          ...logSearchPostgresSecurityContext,\n                          fsGroup: e.target.value,\n                        });\n                        cleanValidation(\"postgres_securityContext_fsGroup\");\n                      }}\n                      label=\"FsGroup\"\n                      value={logSearchPostgresSecurityContext.fsGroup}\n                      required\n                      error={\n                        validationErrors[\"postgres_securityContext_fsGroup\"] ||\n                        \"\"\n                      }\n                      min=\"0\"\n                    />\n                  </div>\n                  <div className={classes.configSectionItem}>\n                    <SelectWrapper\n                      label=\"FsGroupChangePolicy\"\n                      id=\"securityContext_fsGroupChangePolicy\"\n                      name=\"securityContext_fsGroupChangePolicy\"\n                      value={\n                        logSearchPostgresSecurityContext.fsGroupChangePolicy\n                      }\n                      onChange={(e: SelectChangeEvent<string>) => {\n                        updateField(\"logSearchPostgresSecurityContext\", {\n                          ...logSearchPostgresSecurityContext,\n                          fsGroupChangePolicy: e.target.value,\n                        });\n                      }}\n                      options={[\n                        {\n                          label: \"Always\",\n                          value: \"Always\",\n                        },\n                        {\n                          label: \"OnRootMismatch\",\n                          value: \"OnRootMismatch\",\n                        },\n                      ]}\n                    />\n                  </div>\n                </div>\n              </Grid>\n              <br />\n              <Grid item xs={12}>\n                <div className={classes.multiContainer}>\n                  <FormSwitchWrapper\n                    value=\"postgresSecurityContextRunAsNonRoot\"\n                    id=\"postgres_securityContext_runAsNonRoot\"\n                    name=\"postgres_securityContext_runAsNonRoot\"\n                    checked={logSearchPostgresSecurityContext.runAsNonRoot}\n                    onChange={(e) => {\n                      const targetD = e.target;\n                      const checked = targetD.checked;\n                      updateField(\"logSearchPostgresSecurityContext\", {\n                        ...logSearchPostgresSecurityContext,\n                        runAsNonRoot: checked,\n                      });\n                    }}\n                    label={\"Do not run as Root\"}\n                  />\n                </div>\n              </Grid>\n            </fieldset>\n          </Fragment>\n        )}\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(ConfigLogSearch);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, Paper, SelectChangeEvent } from \"@mui/material\";\nimport {\n  createTenantCommon,\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\n\nimport { AppState, useAppDispatch } from \"../../../../../store\";\nimport { clearValidationError } from \"../../utils\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../utils/validationFunctions\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport SelectWrapper from \"../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport InputUnitMenu from \"../../../Common/FormComponents/InputUnitMenu/InputUnitMenu\";\nimport SectionH1 from \"../../../Common/SectionH1\";\nimport { isPageValid, updateAddField } from \"../createTenantSlice\";\n\ninterface IConfigureProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    configSectionItem: {\n      marginRight: 15,\n\n      \"& .multiContainer\": {\n        border: \"1px solid red\",\n      },\n    },\n    fieldGroup: {\n      ...createTenantCommon.fieldGroup,\n      paddingTop: 15,\n      marginBottom: 25,\n    },\n    responsiveSectionItem: {\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n        alignItems: \"flex-start\",\n\n        \"& div > div\": {\n          marginBottom: 5,\n          marginRight: 0,\n        },\n      },\n    },\n    fieldSpaceTop: {\n      marginTop: 15,\n    },\n    prometheusEnabledFields: {\n      marginLeft: 20, // 2nd Level(15+15)\n      padding: 10,\n      width: \"90%\",\n      margin: \"auto\",\n    },\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst ConfigPrometheus = ({ classes }: IConfigureProps) => {\n  const dispatch = useAppDispatch();\n\n  const storageClasses = useSelector(\n    (state: AppState) => state.createTenant.storageClasses\n  );\n  const prometheusEnabled = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.prometheusEnabled\n  );\n  const prometheusVolumeSize = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.prometheusVolumeSize\n  );\n  const prometheusSelectedStorageClass = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.prometheusSelectedStorageClass\n  );\n  const prometheusImage = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.prometheusImage\n  );\n  const prometheusSidecarImage = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.prometheusSidecarImage\n  );\n  const prometheusInitImage = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.prometheusInitImage\n  );\n  const selectedStorageClass = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.nameTenant.selectedStorageClass\n  );\n  const tenantSecurityContext = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.tenantSecurityContext\n  );\n  const prometheusSecurityContext = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.prometheusSecurityContext\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  const configureSTClasses = [\n    { label: \"Default\", value: \"default\" },\n    ...storageClasses,\n  ];\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"configure\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  // Validation\n  useEffect(() => {\n    let customAccountValidation: IValidation[] = [];\n\n    if (prometheusEnabled) {\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"prometheus_storage_class\",\n          required: true,\n          value: prometheusSelectedStorageClass,\n          customValidation: prometheusSelectedStorageClass === \"\",\n          customValidationMessage: \"Field cannot be empty\",\n        },\n        {\n          fieldKey: \"prometheus_volume_size\",\n          required: true,\n          value: prometheusVolumeSize,\n          customValidation:\n            prometheusVolumeSize === \"\" || parseInt(prometheusVolumeSize) <= 0,\n          customValidationMessage: `Volume size must be present and be greater than 0`,\n        },\n        {\n          fieldKey: \"prometheus_securityContext_runAsUser\",\n          required: true,\n          value: prometheusSecurityContext.runAsUser,\n          customValidation:\n            prometheusSecurityContext.runAsUser === \"\" ||\n            parseInt(prometheusSecurityContext.runAsUser) < 0,\n          customValidationMessage: `runAsUser must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"prometheus_securityContext_runAsGroup\",\n          required: true,\n          value: prometheusSecurityContext.runAsGroup,\n          customValidation:\n            prometheusSecurityContext.runAsGroup === \"\" ||\n            parseInt(prometheusSecurityContext.runAsGroup) < 0,\n          customValidationMessage: `runAsGroup must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"prometheus_securityContext_fsGroup\",\n          required: true,\n          value: prometheusSecurityContext.fsGroup,\n          customValidation:\n            prometheusSecurityContext.fsGroup === \"\" ||\n            parseInt(prometheusSecurityContext.fsGroup) < 0,\n          customValidationMessage: `fsGroup must be present and be 0 or more`,\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(customAccountValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"configure\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    prometheusImage,\n    prometheusSidecarImage,\n    prometheusInitImage,\n    dispatch,\n    prometheusEnabled,\n    prometheusSelectedStorageClass,\n    prometheusVolumeSize,\n    tenantSecurityContext,\n    prometheusSecurityContext,\n  ]);\n\n  useEffect(() => {\n    // New default values in current selection is invalid\n    if (storageClasses.length > 0) {\n      const filterPrometheus = storageClasses.filter(\n        (item: any) => item.value === prometheusSelectedStorageClass\n      );\n      if (filterPrometheus.length === 0) {\n        updateField(\"prometheusSelectedStorageClass\", \"default\");\n      }\n    }\n  }, [\n    prometheusSelectedStorageClass,\n    selectedStorageClass,\n    storageClasses,\n    updateField,\n  ]);\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <Grid container alignItems={\"center\"}>\n        <Grid item xs>\n          <SectionH1>Monitoring</SectionH1>\n        </Grid>\n        <Grid item xs={4}>\n          <FormSwitchWrapper\n            indicatorLabels={[\"Enabled\", \"Disabled\"]}\n            checked={prometheusEnabled}\n            value={\"monitoring_status\"}\n            id=\"monitoring-status\"\n            name=\"monitoring-status\"\n            onChange={(e) => {\n              const targetD = e.target;\n              const checked = targetD.checked;\n\n              updateField(\"prometheusEnabled\", checked);\n            }}\n            description=\"\"\n          />\n        </Grid>\n      </Grid>\n      <Grid item xs={12}>\n        <span className={classes.descriptionText}>\n          A small Prometheus will be deployed to keep metrics about the tenant.\n        </span>\n      </Grid>\n      <Grid xs={12}>\n        <hr className={classes.hrClass} />\n      </Grid>\n      <Grid container spacing={1}>\n        {prometheusEnabled && (\n          <Fragment>\n            <Grid item xs={12}>\n              <SelectWrapper\n                id=\"prometheus_storage_class\"\n                name=\"prometheus_storage_class\"\n                onChange={(e: SelectChangeEvent<string>) => {\n                  updateField(\n                    \"prometheusSelectedStorageClass\",\n                    e.target.value as string\n                  );\n                }}\n                label=\"Storage Class\"\n                value={prometheusSelectedStorageClass}\n                options={configureSTClasses}\n                disabled={configureSTClasses.length < 1}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <div className={classes.multiContainer}>\n                <InputBoxWrapper\n                  type=\"number\"\n                  id=\"prometheus_volume_size\"\n                  name=\"prometheus_volume_size\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"prometheusVolumeSize\", e.target.value);\n                    cleanValidation(\"prometheus_volume_size\");\n                  }}\n                  label=\"Storage Size\"\n                  overlayObject={\n                    <InputUnitMenu\n                      id={\"size-unit\"}\n                      onUnitChange={() => {}}\n                      unitSelected={\"Gi\"}\n                      unitsList={[{ label: \"Gi\", value: \"Gi\" }]}\n                      disabled={true}\n                    />\n                  }\n                  value={prometheusVolumeSize}\n                  required\n                  error={validationErrors[\"prometheus_volume_size\"] || \"\"}\n                  min=\"0\"\n                />\n              </div>\n            </Grid>\n            <fieldset\n              className={`${classes.fieldGroup} ${classes.fieldSpaceTop}`}\n            >\n              <legend className={classes.descriptionText}>\n                SecurityContext\n              </legend>\n              <Grid item xs={12} className={classes.configSectionItem}>\n                <div\n                  className={`${classes.multiContainer} ${classes.responsiveSectionItem}`}\n                >\n                  <div className={classes.configSectionItem}>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"prometheus_securityContext_runAsUser\"\n                      name=\"prometheus_securityContext_runAsUser\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"prometheusSecurityContext\", {\n                          ...prometheusSecurityContext,\n                          runAsUser: e.target.value,\n                        });\n                        cleanValidation(\"prometheus_securityContext_runAsUser\");\n                      }}\n                      label=\"Run As User\"\n                      value={prometheusSecurityContext.runAsUser}\n                      required\n                      error={\n                        validationErrors[\n                          \"prometheus_securityContext_runAsUser\"\n                        ] || \"\"\n                      }\n                      min=\"0\"\n                    />\n                  </div>\n                  <div className={classes.configSectionItem}>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"prometheus_securityContext_runAsGroup\"\n                      name=\"prometheus_securityContext_runAsGroup\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"prometheusSecurityContext\", {\n                          ...prometheusSecurityContext,\n                          runAsGroup: e.target.value,\n                        });\n                        cleanValidation(\n                          \"prometheus_securityContext_runAsGroup\"\n                        );\n                      }}\n                      label=\"Run As Group\"\n                      value={prometheusSecurityContext.runAsGroup}\n                      required\n                      error={\n                        validationErrors[\n                          \"prometheus_securityContext_runAsGroup\"\n                        ] || \"\"\n                      }\n                      min=\"0\"\n                    />\n                  </div>\n                </div>\n              </Grid>\n              <br />\n              <Grid item xs={12} className={classes.configSectionItem}>\n                <div\n                  className={`${classes.multiContainer} ${classes.responsiveSectionItem}`}\n                >\n                  <div className={classes.configSectionItem}>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"prometheus_securityContext_fsGroup\"\n                      name=\"prometheus_securityContext_fsGroup\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"prometheusSecurityContext\", {\n                          ...prometheusSecurityContext,\n                          fsGroup: e.target.value,\n                        });\n                        cleanValidation(\"prometheus_securityContext_fsGroup\");\n                      }}\n                      label=\"FsGroup\"\n                      value={prometheusSecurityContext.fsGroup}\n                      required\n                      error={\n                        validationErrors[\n                          \"prometheus_securityContext_fsGroup\"\n                        ] || \"\"\n                      }\n                      min=\"0\"\n                    />\n                  </div>\n                  <div className={classes.configSectionItem}>\n                    <SelectWrapper\n                      label=\"FsGroupChangePolicy\"\n                      id=\"securityContext_fsGroupChangePolicy\"\n                      name=\"securityContext_fsGroupChangePolicy\"\n                      value={prometheusSecurityContext.fsGroupChangePolicy}\n                      onChange={(e: SelectChangeEvent<string>) => {\n                        updateField(\"prometheusSecurityContext\", {\n                          ...prometheusSecurityContext,\n                          fsGroupChangePolicy: e.target.value,\n                        });\n                      }}\n                      options={[\n                        {\n                          label: \"Always\",\n                          value: \"Always\",\n                        },\n                        {\n                          label: \"OnRootMismatch\",\n                          value: \"OnRootMismatch\",\n                        },\n                      ]}\n                    />\n                  </div>\n                </div>\n              </Grid>\n              <br />\n              <Grid item xs={12} className={classes.configSectionItem}>\n                <div\n                  className={`${classes.multiContainer} ${classes.fieldSpaceTop}`}\n                >\n                  <FormSwitchWrapper\n                    value=\"prometheusSecurityContextRunAsNonRoot\"\n                    id=\"prometheus_securityContext_runAsNonRoot\"\n                    name=\"prometheus_securityContext_runAsNonRoot\"\n                    checked={prometheusSecurityContext.runAsNonRoot}\n                    onChange={(e) => {\n                      const targetD = e.target;\n                      const checked = targetD.checked;\n                      updateField(\"prometheusSecurityContext\", {\n                        ...prometheusSecurityContext,\n                        runAsNonRoot: checked,\n                      });\n                    }}\n                    label={\"Do not run as Root\"}\n                  />\n                </div>\n              </Grid>\n            </fieldset>\n          </Fragment>\n        )}\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(ConfigPrometheus);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nexport const requiredPages = [\n  \"nameTenant\",\n  \"tenantSize\",\n  \"configure\",\n  \"affinity\",\n  \"identityProvider\",\n  \"security\",\n  \"encryption\",\n];\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Button } from \"mds\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport { requiredPages } from \"./common\";\nimport { createTenantAsync } from \"./thunks/createTenantThunk\";\n\nconst CreateTenantButton = () => {\n  const dispatch = useAppDispatch();\n\n  const addSending = useSelector(\n    (state: AppState) => state.createTenant.addingTenant\n  );\n\n  const validPages = useSelector(\n    (state: AppState) => state.createTenant.validPages\n  );\n\n  const selectedStorageClass = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.nameTenant.selectedStorageClass\n  );\n\n  const enabled =\n    !addSending &&\n    selectedStorageClass !== \"\" &&\n    requiredPages.every((v) => validPages.includes(v));\n\n  return (\n    <Button\n      id={\"wizard-button-Create\"}\n      variant=\"callAction\"\n      color=\"primary\"\n      onClick={() => {\n        dispatch(createTenantAsync());\n      }}\n      disabled={!enabled}\n      key={`button-AddTenant-Create`}\n      label={\"Create\"}\n    />\n  );\n};\n\nexport default CreateTenantButton;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport CredentialsPrompt from \"../../Common/CredentialsPrompt/CredentialsPrompt\";\nimport { resetAddTenantForm } from \"./createTenantSlice\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst NewTenantCredentials = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const showNewCredentials = useSelector(\n    (state: AppState) => state.createTenant.showNewCredentials\n  );\n  const createdAccount = useSelector(\n    (state: AppState) => state.createTenant.createdAccount\n  );\n\n  return (\n    <Fragment>\n      {showNewCredentials && (\n        <CredentialsPrompt\n          newServiceAccount={createdAccount}\n          open={showNewCredentials}\n          closeModal={() => {\n            dispatch(resetAddTenantForm());\n            navigate(\"/tenants\");\n          }}\n          entity=\"Tenant\"\n        />\n      )}\n    </Fragment>\n  );\n};\n\nexport default NewTenantCredentials;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport get from \"lodash/get\";\nimport { useSelector } from \"react-redux\";\nimport Grid from \"@mui/material/Grid\";\nimport { LinearProgress } from \"@mui/material\";\n\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  modalBasic,\n  settingsCommon,\n  wizardCommon,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport GenericWizard from \"../../Common/GenericWizard/GenericWizard\";\nimport {\n  IWizardButton,\n  IWizardElement,\n} from \"../../Common/GenericWizard/types\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport Configure from \"./Steps/Configure\";\nimport IdentityProvider from \"./Steps/IdentityProvider\";\nimport Security from \"./Steps/Security\";\nimport Encryption from \"./Steps/Encryption\";\nimport Affinity from \"./Steps/Affinity\";\nimport PageHeader from \"../../Common/PageHeader/PageHeader\";\nimport Images from \"./Steps/Images\";\nimport PageLayout from \"../../Common/Layout/PageLayout\";\nimport BackLink from \"../../../../common/BackLink\";\nimport TenantResources from \"./Steps/TenantResources/TenantResources\";\nimport ConfigLogSearch from \"./Steps/ConfigLogSearch\";\nimport ConfigPrometheus from \"./Steps/ConfigPrometheus\";\nimport {\n  IMkEnvs,\n  resourcesConfigurations,\n} from \"./Steps/TenantResources/utils\";\nimport HelpBox from \"../../../../common/HelpBox\";\nimport { StorageIcon } from \"mds\";\nimport { selFeatures } from \"../../consoleSlice\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { resetAddTenantForm } from \"./createTenantSlice\";\nimport CreateTenantButton from \"./CreateTenantButton\";\nimport NewTenantCredentials from \"./NewTenantCredentials\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    pageBox: {\n      border: \"1px solid #EAEAEA\",\n    },\n    ...modalBasic,\n    ...wizardCommon,\n    ...settingsCommon,\n  })\n);\n\nconst AddTenant = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const classes = useStyles();\n\n  const features = useSelector(selFeatures);\n\n  // Fields\n  const addSending = useSelector(\n    (state: AppState) => state.createTenant.addingTenant\n  );\n  const [formRender, setFormRender] = useState<IMkEnvs | null>(null);\n\n  useEffect(() => {\n    let setConfiguration = IMkEnvs.default;\n\n    if (features && features.length !== 0) {\n      const possibleVariables = Object.keys(resourcesConfigurations);\n\n      possibleVariables.forEach((element) => {\n        if (features.includes(element)) {\n          setConfiguration = get(\n            resourcesConfigurations,\n            element,\n            IMkEnvs.default\n          );\n        }\n      });\n    }\n\n    setFormRender(setConfiguration);\n  }, [features]);\n\n  const cancelButton = {\n    label: \"Cancel\",\n    type: \"other\",\n    enabled: true,\n    action: () => {\n      dispatch(resetAddTenantForm());\n      navigate(\"/tenants\");\n    },\n  };\n\n  const createButton: IWizardButton = {\n    componentRender: <CreateTenantButton key={\"create-tenant\"} />,\n  };\n\n  const wizardSteps: IWizardElement[] = [\n    {\n      label: \"Setup\",\n      componentRender: <TenantResources />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Configure\",\n      advancedOnly: true,\n      componentRender: <Configure />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Images\",\n      advancedOnly: true,\n      componentRender: <Images />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Pod Placement\",\n      advancedOnly: true,\n      componentRender: <Affinity />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Identity Provider\",\n      advancedOnly: true,\n      componentRender: <IdentityProvider />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Security\",\n      advancedOnly: true,\n      componentRender: <Security />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Encryption\",\n      advancedOnly: true,\n      componentRender: <Encryption />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Audit Log\",\n      advancedOnly: true,\n      componentRender: <ConfigLogSearch />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Monitoring\",\n      advancedOnly: true,\n      componentRender: <ConfigPrometheus />,\n      buttons: [cancelButton, createButton],\n    },\n  ];\n\n  let filteredWizardSteps = wizardSteps;\n\n  return (\n    <Fragment>\n      <NewTenantCredentials />\n      <PageHeader\n        label={\n          <BackLink\n            to={\"/tenants\"}\n            label={\"Tenants\"}\n            executeOnClick={() => {\n              dispatch(resetAddTenantForm());\n            }}\n          />\n        }\n      />\n\n      <PageLayout>\n        {addSending && (\n          <Grid item xs={12}>\n            <LinearProgress />\n          </Grid>\n        )}\n        <Grid item xs={12} className={classes.pageBox}>\n          <GenericWizard wizardSteps={filteredWizardSteps} />\n        </Grid>\n        {formRender === IMkEnvs.aws && (\n          <Grid item xs={12} style={{ marginTop: 16 }}>\n            <HelpBox\n              title={\"EBS Volume Configuration.\"}\n              iconComponent={<StorageIcon />}\n              help={\n                <Fragment>\n                  <b>Performance Optimized</b>: Uses the <i>gp3</i> EBS storage\n                  class class configured at 1,000Mi/s throughput and 16,000\n                  IOPS, however the minimum volume size for this type of EBS\n                  volume is <b>32Gi</b>.\n                  <br />\n                  <br />\n                  <b>Storage Optimized</b>: Uses the <i>sc1</i> EBS storage\n                  class, however the minimum volume size for this type of EBS\n                  volume is &nbsp;\n                  <b>16Ti</b> to unlock their maximum throughput speed of\n                  250Mi/s.\n                </Fragment>\n              }\n            />\n          </Grid>\n        )}\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default AddTenant;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Box } from \"@mui/material\";\nimport { CertificateIcon } from \"mds\";\nimport { useParams } from \"react-router-dom\";\nimport { AppState } from \"../../../../store\";\n\nconst FeatureItem = ({\n  icon,\n  description,\n}: {\n  icon: any;\n  description: string;\n}) => {\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        \"& .min-icon\": {\n          marginRight: \"10px\",\n          height: \"23px\",\n          width: \"23px\",\n          marginBottom: \"10px\",\n        },\n      }}\n    >\n      {icon}{\" \"}\n      <div style={{ fontSize: \"14px\", fontStyle: \"italic\", color: \"#5E5E5E\" }}>\n        {description}\n      </div>\n    </Box>\n  );\n};\nconst TLSHelpBox = () => {\n  const params = useParams();\n  const tenantNameParam = params.tenantName || \"\";\n  const tenantNamespaceParam = params.tenantNamespace || \"\";\n  const namespace = useSelector((state: AppState) => {\n    var defaultNamespace = \"<namespace>\";\n    if (tenantNamespaceParam !== \"\") {\n      return tenantNamespaceParam;\n    }\n    if (state.createTenant.fields.nameTenant.namespace !== \"\") {\n      return state.createTenant.fields.nameTenant.namespace;\n    }\n    return defaultNamespace;\n  });\n\n  const tenantName = useSelector((state: AppState) => {\n    var defaultTenantName = \"<tenant-name>\";\n    if (tenantNameParam !== \"\") {\n      return tenantNameParam;\n    }\n\n    if (state.createTenant.fields.nameTenant.tenantName !== \"\") {\n      return state.createTenant.fields.nameTenant.tenantName;\n    }\n    return defaultTenantName;\n  });\n\n  return (\n    <Box\n      sx={{\n        flex: 1,\n        border: \"1px solid #eaeaea\",\n        borderRadius: \"2px\",\n        display: \"flex\",\n        flexFlow: \"column\",\n        padding: \"20px\",\n        marginTop: {\n          xs: \"0px\",\n        },\n      }}\n    >\n      <Box\n        sx={{\n          display: \"flex\",\n          flexFlow: \"column\",\n        }}\n      >\n        <FeatureItem\n          icon={<CertificateIcon />}\n          description={`TLS Certificates Warning`}\n        />\n        <Box sx={{ fontSize: \"14px\", marginBottom: \"15px\" }}>\n          Automatic certificate generation is not enabled.\n          <br />\n          <br />\n          If you wish to continue only with <b>custom certificates</b> make sure\n          they are valid for the following internode hostnames, i.e.:\n          <br />\n          <br />\n          <div\n            style={{ fontSize: \"14px\", fontStyle: \"italic\", color: \"#5E5E5E\" }}\n          >\n            minio.{namespace}\n            <br />\n            minio.{namespace}.svc\n            <br />\n            minio.{namespace}.svc.&#x3C;cluster domain&#x3E;\n            <br />\n            *.{tenantName}-hl.{namespace}.svc.&#x3C;cluster domain&#x3E;\n            <br />\n            *.{namespace}.svc.&#x3C;cluster domain&#x3E;\n          </div>\n          <br />\n          Replace <em>&#x3C;tenant-name&#x3E;</em>,{\" \"}\n          <em>&#x3C;namespace&#x3E;</em> and\n          <em>&#x3C;cluster domain&#x3E;</em> with the actual values for your\n          MinIO tenant.\n          <br />\n          <br />\n          You can learn more at our{\" \"}\n          <a\n            href=\"https://min.io/docs/minio/kubernetes/upstream/operations/network-encryption.html?ref=op#id5\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            documentation\n          </a>\n          .\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default TLSHelpBox;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Grid } from \"@mui/material\";\nimport { LDAPIcon } from \"mds\";\nimport { OIDCIcon } from \"mds\";\nimport { UsersIcon } from \"mds\";\n\nexport const OIDCLogoElement = () => {\n  return (\n    <Grid container columnGap={1}>\n      <Grid>\n        <OIDCIcon width={\"16px\"} height={\"16px\"} />\n      </Grid>\n      <Grid item>Open ID</Grid>\n    </Grid>\n  );\n};\n\nexport const LDAPLogoElement = () => {\n  return (\n    <Grid container columnGap={1}>\n      <Grid>\n        <LDAPIcon width={\"16px\"} height={\"16px\"} />\n      </Grid>\n      <Grid item>LDAP / Active Directory</Grid>\n    </Grid>\n  );\n};\n\nexport const BuiltInLogoElement = () => {\n  return (\n    <Grid container columnGap={1}>\n      <Grid>\n        <UsersIcon width={\"16px\"} height={\"16px\"} />\n      </Grid>\n      <Grid item>Built-in</Grid>\n    </Grid>\n  );\n};\n","import React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport { Theme } from \"@mui/material/styles\";\n\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    errorBlock: {\n      color: theme.palette?.error.main || \"#C83B51\",\n    },\n  });\n\ninterface IErrorBlockProps {\n  classes: any;\n  errorMessage: string;\n  withBreak?: boolean;\n}\n\nconst ErrorBlock = ({\n  classes,\n  errorMessage,\n  withBreak = true,\n}: IErrorBlockProps) => {\n  return (\n    <React.Fragment>\n      {withBreak && <br />}\n      <Typography component=\"p\" variant=\"body1\" className={classes.errorBlock}>\n        {errorMessage}\n      </Typography>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(ErrorBlock);\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16.5 6v11.5c0 2.21-1.79 4-4 4s-4-1.79-4-4V5c0-1.38 1.12-2.5 2.5-2.5s2.5 1.12 2.5 2.5v10.5c0 .55-.45 1-1 1s-1-.45-1-1V6H10v9.5c0 1.38 1.12 2.5 2.5 2.5s2.5-1.12 2.5-2.5V5c0-2.21-1.79-4-4-4S7 2.79 7 5v12.5c0 3.04 2.46 5.5 5.5 5.5s5.5-2.46 5.5-5.5V6h-1.5z\"\n}), 'AttachFile');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM7.5 18c-.83 0-1.5-.67-1.5-1.5S6.67 15 7.5 15s1.5.67 1.5 1.5S8.33 18 7.5 18zm0-9C6.67 9 6 8.33 6 7.5S6.67 6 7.5 6 9 6.67 9 7.5 8.33 9 7.5 9zm4.5 4.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm4.5 4.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm0-9c-.83 0-1.5-.67-1.5-1.5S15.67 6 16.5 6s1.5.67 1.5 1.5S17.33 9 16.5 9z\"\n}), 'Casino');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"absolute\", \"children\", \"className\", \"component\", \"flexItem\", \"light\", \"orientation\", \"role\", \"textAlign\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDividerUtilityClass } from './dividerClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    absolute,\n    children,\n    classes,\n    flexItem,\n    light,\n    orientation,\n    textAlign,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', absolute && 'absolute', variant, light && 'light', orientation === 'vertical' && 'vertical', flexItem && 'flexItem', children && 'withChildren', children && orientation === 'vertical' && 'withChildrenVertical', textAlign === 'right' && orientation !== 'vertical' && 'textAlignRight', textAlign === 'left' && orientation !== 'vertical' && 'textAlignLeft'],\n    wrapper: ['wrapper', orientation === 'vertical' && 'wrapperVertical']\n  };\n  return composeClasses(slots, getDividerUtilityClass, classes);\n};\nconst DividerRoot = styled('div', {\n  name: 'MuiDivider',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.absolute && styles.absolute, styles[ownerState.variant], ownerState.light && styles.light, ownerState.orientation === 'vertical' && styles.vertical, ownerState.flexItem && styles.flexItem, ownerState.children && styles.withChildren, ownerState.children && ownerState.orientation === 'vertical' && styles.withChildrenVertical, ownerState.textAlign === 'right' && ownerState.orientation !== 'vertical' && styles.textAlignRight, ownerState.textAlign === 'left' && ownerState.orientation !== 'vertical' && styles.textAlignLeft];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 0,\n  // Reset browser default style.\n  flexShrink: 0,\n  borderWidth: 0,\n  borderStyle: 'solid',\n  borderColor: (theme.vars || theme).palette.divider,\n  borderBottomWidth: 'thin'\n}, ownerState.absolute && {\n  position: 'absolute',\n  bottom: 0,\n  left: 0,\n  width: '100%'\n}, ownerState.light && {\n  borderColor: theme.vars ? `rgba(${theme.vars.palette.dividerChannel} / 0.08)` : alpha(theme.palette.divider, 0.08)\n}, ownerState.variant === 'inset' && {\n  marginLeft: 72\n}, ownerState.variant === 'middle' && ownerState.orientation === 'horizontal' && {\n  marginLeft: theme.spacing(2),\n  marginRight: theme.spacing(2)\n}, ownerState.variant === 'middle' && ownerState.orientation === 'vertical' && {\n  marginTop: theme.spacing(1),\n  marginBottom: theme.spacing(1)\n}, ownerState.orientation === 'vertical' && {\n  height: '100%',\n  borderBottomWidth: 0,\n  borderRightWidth: 'thin'\n}, ownerState.flexItem && {\n  alignSelf: 'stretch',\n  height: 'auto'\n}), ({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.children && {\n  display: 'flex',\n  whiteSpace: 'nowrap',\n  textAlign: 'center',\n  border: 0,\n  '&::before, &::after': {\n    position: 'relative',\n    width: '100%',\n    borderTop: `thin solid ${(theme.vars || theme).palette.divider}`,\n    top: '50%',\n    content: '\"\"',\n    transform: 'translateY(50%)'\n  }\n}), ({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.children && ownerState.orientation === 'vertical' && {\n  flexDirection: 'column',\n  '&::before, &::after': {\n    height: '100%',\n    top: '0%',\n    left: '50%',\n    borderTop: 0,\n    borderLeft: `thin solid ${(theme.vars || theme).palette.divider}`,\n    transform: 'translateX(0%)'\n  }\n}), ({\n  ownerState\n}) => _extends({}, ownerState.textAlign === 'right' && ownerState.orientation !== 'vertical' && {\n  '&::before': {\n    width: '90%'\n  },\n  '&::after': {\n    width: '10%'\n  }\n}, ownerState.textAlign === 'left' && ownerState.orientation !== 'vertical' && {\n  '&::before': {\n    width: '10%'\n  },\n  '&::after': {\n    width: '90%'\n  }\n}));\nconst DividerWrapper = styled('span', {\n  name: 'MuiDivider',\n  slot: 'Wrapper',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.wrapper, ownerState.orientation === 'vertical' && styles.wrapperVertical];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'inline-block',\n  paddingLeft: `calc(${theme.spacing(1)} * 1.2)`,\n  paddingRight: `calc(${theme.spacing(1)} * 1.2)`\n}, ownerState.orientation === 'vertical' && {\n  paddingTop: `calc(${theme.spacing(1)} * 1.2)`,\n  paddingBottom: `calc(${theme.spacing(1)} * 1.2)`\n}));\nconst Divider = /*#__PURE__*/React.forwardRef(function Divider(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDivider'\n  });\n  const {\n      absolute = false,\n      children,\n      className,\n      component = children ? 'div' : 'hr',\n      flexItem = false,\n      light = false,\n      orientation = 'horizontal',\n      role = component !== 'hr' ? 'separator' : undefined,\n      textAlign = 'center',\n      variant = 'fullWidth'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    absolute,\n    component,\n    flexItem,\n    light,\n    orientation,\n    role,\n    textAlign,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DividerRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    role: role,\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: children ? /*#__PURE__*/_jsx(DividerWrapper, {\n      className: classes.wrapper,\n      ownerState: ownerState,\n      children: children\n    }) : null\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Divider.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Absolutely position the element.\n   * @default false\n   */\n  absolute: PropTypes.bool,\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, a vertical divider will have the correct height when used in flex container.\n   * (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.)\n   * @default false\n   */\n  flexItem: PropTypes.bool,\n  /**\n   * If `true`, the divider will have a lighter color.\n   * @default false\n   */\n  light: PropTypes.bool,\n  /**\n   * The component orientation.\n   * @default 'horizontal'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n  /**\n   * @ignore\n   */\n  role: PropTypes /* @typescript-to-proptypes-ignore */.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The text alignment.\n   * @default 'center'\n   */\n  textAlign: PropTypes.oneOf(['center', 'left', 'right']),\n  /**\n   * The variant to use.\n   * @default 'fullWidth'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['fullWidth', 'inset', 'middle']), PropTypes.string])\n} : void 0;\nexport default Divider;"],"names":["withStyles","theme","createStyles","root","border","borderRadius","backgroundColor","paddingLeft","paddingTop","paddingBottom","paddingRight","leftItems","fontSize","fontWeight","marginBottom","display","alignItems","marginRight","height","width","helpText","classes","iconComponent","title","help","className","container","item","xs","flexFlow","padding","inputWithCopy","background","inputLabel","fieldBasic","label","value","OutlinedInput","readOnly","endAdornment","InputAdornment","position","TooltipWrapper","tooltip","text","id","onClick","onMouseDown","style","icon","download","filename","element","document","createElement","setAttribute","body","appendChild","click","removeChild","warningBlock","color","margin","credentialTitle","buttonContainer","justifyContent","marginTop","credentialsPanel","overflowY","maxHeight","promptTitle","buttonSpacer","newServiceAccount","open","closeModal","entity","consoleCreds","get","idp","ModalWrapper","modalOpen","onClose","titleIcon","Grid","formScrollable","Array","isArray","map","credentialsPair","index","accessKey","secretKey","undefined","consoleExtras","itemMap","url","api","path","JSON","stringify","variant","length","allCredentials","mode","onBeforeChange","editorHeight","sx","tooltipContainer","placement","overflow","language","onChange","evn","target","fontFamily","minHeight","borderTop","marginLeft","type","tooltipHelper","valueString","maxWidth","whiteSpace","textOverflow","fileInputField","fileInputStyles","textBoxContainer","name","disabled","required","error","accept","useState","showFileSelector","setShowSelector","fieldBottom","fieldContainer","errorInField","InputLabel","htmlFor","fieldLabelError","Tooltip","e","fileName","evt","callback","file","files","reader","FileReader","readAsDataURL","onload","fileBase64","result","fileArray","toString","split","fileProcess","data","IconButton","component","disableRipple","disableFocusRipple","size","Cancel","ErrorBlock","errorMessage","fileReselect","AttachFile","deleteDialogStyles","content","customDialogSize","snackBarCommon","children","wideLimit","noContentPadding","dispatch","useAppDispatch","openSnackbar","setOpenSnackbar","modalSnackMessage","useSelector","state","system","modalSnackBar","useEffect","setModalSnackMessage","message","customSize","paper","fullWidth","detailedErrorMsg","scroll","event","reason","titleText","closeContainer","closeButton","isModal","snackBarModal","ContentProps","snackBar","errorSnackBar","autoHideDuration","configSectionItem","tenantCustomizationFields","containerItem","fieldGroup","createTenantCommon","responsiveSectionItem","wrapperContainer","envVarRow","borderBottom","flex","minWidth","fileItem","rowActions","overlayAction","modalBasic","wizardCommon","formFieldStyles","exposeMinIO","createTenant","fields","configure","exposeConsole","setDomains","consoleDomain","minioDomains","tenantCustom","tenantEnvVars","envVars","tenantSecurityContext","validationErrors","setValidationErrors","updateField","useCallback","field","updateAddField","pageName","customAccountValidation","fieldKey","runAsUser","customValidation","parseInt","customValidationMessage","runAsGroup","fsGroup","minioExtraValidations","validation","pattern","customPatternMessage","commonVal","commonFormValidation","isPageValid","valid","Object","keys","cleanValidation","fieldName","clearValidationError","Paper","paperWrapper","headerElement","h3Section","descriptionText","FormSwitchWrapper","checked","InputBoxWrapper","placeholder","domain","copyDomains","updateMinIODomain","addNewMinIODomain","Add","removeMinIODomain","multiContainer","min","SelectWrapper","fsGroupChangePolicy","options","runAsNonRoot","Divider","envVar","formFieldRow","key","existingEnvVars","setEnvVars","keyPair","i","push","filter","fIndex","useStyles","makeStyles","adUserDnRows","buttonTray","idpSelection","identityProvider","ADURL","ADSkipTLS","ADServerInsecure","ADGroupSearchBaseDN","ADGroupSearchFilter","ADUserDNs","ADGroupDNs","ADLookupBindDN","ADLookupBindPassword","ADUserDNSearchBaseDN","ADUserDNSearchFilter","ADServerStartTLS","customIDPValidation","Fragment","Typography","gutterBottom","_","setIDPADUsrAtIndex","userDN","addIDPADUsrAtIndex","removeIDPADUsrAtIndex","Delete","setIDPADGroupAtIndex","addIDPADGroupAtIndex","removeIDPADGroupAtIndex","openIDConfigurationURL","openIDClientID","openIDSecretID","openIDCallbackURL","openIDClaimName","openIDScopes","shortened","gridTemplateColumns","gridGap","accessKeys","secretKeys","setIDPUsrAtIndex","setIDPPwdAtIndex","addIDPNewKeyPair","removeIDPKeyPairAtIndex","getRandomString","Casino","protocolRadioOptions","RadioGroupSelector","currentSelection","setIDP","selectorOptions","minioCertificateRows","minioCertsContainer","minioCACertsRow","enableTLS","security","enableAutoCert","enableCustomCerts","minioCertificates","certificates","minioServerCertificates","minioClientCertificates","caCertificates","minioCAsCertificates","spacing","description","TLSHelpBox","FileSelector","encodedValue","addFileToKeyPair","cert","addKeyPair","deleteKeyPair","addFileToClientKeyPair","addClientKeyPair","deleteClientKeyPair","addFileToCaCertificates","addCaCertificate","deleteCaCertificate","encryptionTab","encryption","vaultEndpoint","vaultEngine","vaultNamespace","vaultPrefix","vaultAppRoleEngine","vaultId","vaultSecret","vaultRetry","vaultPing","encryptionValidation","azureEndpoint","azureTenantID","azureClientID","azureClientSecret","gcpProjectID","gcpEndpoint","gcpClientEmail","gcpClientID","gcpPrivateKeyID","gcpPrivateKey","gemaltoEndpoint","gemaltoToken","gemaltoDomain","gemaltoRetry","awsEndpoint","awsRegion","awsKMSKey","awsAccessKey","awsSecretKey","awsToken","encryptionTypeOptions","mutualTlsConfig","rightSpacer","responsiveContainer","replicas","rawConfiguration","enableEncryption","encryptionType","enableCustomCertsForKES","kesServerCertificate","minioMTLSCertificate","kmsMTLSCertificate","kmsCA","kesSecurityContext","encryptionAvailable","encoded_key","encoded_cert","textAlign","indicatorLabels","hrClass","Tabs","indicatorColor","textColor","scrollButtons","Tab","CodeMirrorWrapper","editor","addFileKESServerCert","addFileMinIOMTLSCert","addFileKMSMTLSCert","addFileKMSCa","affinityConfigField","affinityFieldLabel","radioField","affinityLabelKey","affinityLabelValue","affinityRow","podAffinity","affinity","nodeSelectorLabels","withPodAntiAffinity","keyValuePairs","nodeSelectorPairs","tolerations","loading","setLoading","keyValueMap","setKeyValueMap","keyOptions","setKeyOptions","then","res","k","catch","err","setModalErrorSnackMessage","vl","kvp","kvs","a","indexOf","join","splittedLabels","forEach","splitItem","updateToleration","alterToleration","setTolerationInfo","tolerationValue","affinityHelpText","newKey","newLKP","arrCp","setKeyValuePairs","v","tol","TolerationSelector","effect","onEffectChange","tolerationKey","onTolerationKeyChange","operator","onOperatorChange","onValueChange","tolerationSeconds","seconds","onSecondsChange","addNewToleration","removeToleration","customImage","imageName","customDockerhub","imageRegistry","imageRegistryUsername","imageRegistryPassword","prometheusCustom","prometheusEnabled","logSearchCustom","logSearchEnabled","logSearchVolumeSize","prometheusVolumeSize","logSearchSelectedStorageClass","logSearchImage","kesImage","logSearchPostgresImage","logSearchPostgresInitImage","prometheusSelectedStorageClass","prometheusImage","prometheusSidecarImage","prometheusInitImage","table","nodes","tenantSize","memoryNode","resourcesMemoryRequest","ecParity","distribution","ecParityCalc","cpuToUse","resourcesCPURequest","integrationSelection","usableInformation","storageFactors","find","erasureCode","Table","TableBody","TableRow","TableCell","scope","align","typeSelection","storageClass","disks","niceBytes","pvSize","persistentVolumes","rawCapacity","maxCapacity","Math","floor","maxFailureTolerations","CPU","memory","drivesPerServer","driveSize","sizeUnit","wrapText","wordWrap","namespace","nameTenant","addNamespaceLoading","addNSLoading","addNamespaceOpen","addNSOpen","ConfirmDialog","confirmText","confirmButtonProps","isOpen","isLoading","onConfirm","createNamespaceAsync","closeAddNSModal","confirmationContent","LinearProgress","DialogContentText","formToRender","showNSCreateButton","namespaceError","openAddNSConfirm","debounceNamespace","useMemo","debounce","validateNamespaceAsync","cancel","setNamespace","overlayId","overlayIcon","openAddNSModal","NameTenantField","tenantName","tenantNameError","setTenantName","sizePreview","selectedStorageClass","selectedStorageType","storageClasses","features","selFeatures","isValid","IMkEnvs","setStorageType","storageType","mkPanelConfigurations","TenantSize","formRender","setFormRender","setConfiguration","resourcesConfigurations","includes","logSearchEnabledFields","fieldSpaceTop","logSearchSecurityContext","logSearchPostgresSecurityContext","configureSTClasses","overlayObject","InputUnitMenu","onUnitChange","unitSelected","unitsList","prometheusEnabledFields","prometheusSecurityContext","requiredPages","addSending","addingTenant","validPages","enabled","every","createTenantAsync","navigate","useNavigate","showNewCredentials","createdAccount","CredentialsPrompt","resetAddTenantForm","pageBox","settingsCommon","cancelButton","action","createButton","componentRender","filteredWizardSteps","buttons","advancedOnly","PageHeader","BackLink","to","executeOnClick","PageLayout","GenericWizard","wizardSteps","HelpBox","FeatureItem","fontStyle","params","useParams","tenantNameParam","tenantNamespaceParam","tenantNamespace","href","rel","OIDCLogoElement","columnGap","LDAPLogoElement","BuiltInLogoElement","errorBlock","palette","main","withBreak","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","_excluded","DividerRoot","styled","slot","overridesResolver","props","styles","ownerState","absolute","light","orientation","vertical","flexItem","withChildren","withChildrenVertical","textAlignRight","textAlignLeft","_extends","flexShrink","borderWidth","borderStyle","borderColor","vars","divider","borderBottomWidth","bottom","left","dividerChannel","alpha","borderRightWidth","alignSelf","top","transform","flexDirection","borderLeft","DividerWrapper","wrapper","wrapperVertical","React","inProps","ref","useThemeProps","role","other","_objectWithoutPropertiesLoose","slots","composeClasses","getDividerUtilityClass","useUtilityClasses","_jsx","as","clsx"],"sourceRoot":""}