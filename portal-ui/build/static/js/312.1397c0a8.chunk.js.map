{"version":3,"file":"static/js/312.1397c0a8.chunk.js","mappings":"kOA4EA,UA3CqB,SAAH,GAIS,IAHzBA,EAA0B,EAA1BA,2BACAC,EAAU,EAAVA,WACAC,EAAc,EAAdA,eAEMC,GAAWC,EAAAA,EAAAA,MAMjB,GAAyCC,EAAAA,EAAAA,IALpB,WAAH,OAASL,GAA2B,EAAM,IACzC,SAACM,GAAyB,OAC3CH,GAASI,EAAAA,EAAAA,IAAqBD,GAAM,IAGmC,eAAlEE,EAAa,KAAEC,EAAe,KAErC,IAAKP,EACH,OAAO,KAUT,OACE,SAAC,IAAa,CACZQ,MAAK,gBACLC,YAAa,SACbC,OAAQX,EACRY,WAAW,SAAC,MAAiB,IAC7BC,UAAWN,EACXO,UAdoB,WACtBN,EACE,SAAS,kBAAD,QACUO,EAAAA,EAAAA,IAAgBd,IAEtC,EAUIe,QAvBY,WAAH,OAASjB,GAA2B,EAAO,EAwBpDkB,qBACE,UAAC,IAAiB,WAAC,2CACsB,mBACvC,uBAAIhB,IAAmB,QAKjC,C","sources":["screens/Console/Policies/DeletePolicy.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\n\nimport { DialogContentText } from \"@mui/material\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport useApi from \"../Common/Hooks/useApi\";\nimport ConfirmDialog from \"../Common/ModalWrapper/ConfirmDialog\";\nimport { ConfirmDeleteIcon } from \"mds\";\nimport { encodeURLString } from \"../../../common/utils\";\nimport { setErrorSnackMessage } from \"../../../systemSlice\";\nimport { useAppDispatch } from \"../../../store\";\n\ninterface IDeletePolicyProps {\n  closeDeleteModalAndRefresh: (refresh: boolean) => void;\n  deleteOpen: boolean;\n  selectedPolicy: string;\n}\n\nconst DeletePolicy = ({\n  closeDeleteModalAndRefresh,\n  deleteOpen,\n  selectedPolicy,\n}: IDeletePolicyProps) => {\n  const dispatch = useAppDispatch();\n  const onDelSuccess = () => closeDeleteModalAndRefresh(true);\n  const onDelError = (err: ErrorResponseHandler) =>\n    dispatch(setErrorSnackMessage(err));\n  const onClose = () => closeDeleteModalAndRefresh(false);\n\n  const [deleteLoading, invokeDeleteApi] = useApi(onDelSuccess, onDelError);\n\n  if (!selectedPolicy) {\n    return null;\n  }\n\n  const onConfirmDelete = () => {\n    invokeDeleteApi(\n      \"DELETE\",\n      `/api/v1/policy/${encodeURLString(selectedPolicy)}`\n    );\n  };\n\n  return (\n    <ConfirmDialog\n      title={`Delete Policy`}\n      confirmText={\"Delete\"}\n      isOpen={deleteOpen}\n      titleIcon={<ConfirmDeleteIcon />}\n      isLoading={deleteLoading}\n      onConfirm={onConfirmDelete}\n      onClose={onClose}\n      confirmationContent={\n        <DialogContentText>\n          Are you sure you want to delete policy <br />\n          <b>{selectedPolicy}</b>?\n        </DialogContentText>\n      }\n    />\n  );\n};\n\nexport default DeletePolicy;\n"],"names":["closeDeleteModalAndRefresh","deleteOpen","selectedPolicy","dispatch","useAppDispatch","useApi","err","setErrorSnackMessage","deleteLoading","invokeDeleteApi","title","confirmText","isOpen","titleIcon","isLoading","onConfirm","encodeURLString","onClose","confirmationContent"],"sourceRoot":""}