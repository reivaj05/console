{"version":3,"file":"static/js/3034.eeaa9de7.chunk.js","mappings":"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","sources":["screens/Console/Common/FormLayout.tsx","screens/Console/KMS/AddKeyForm.tsx","screens/Console/KMS/AddKey.tsx","screens/Console/KMS/KMSHelpbox.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Box } from \"@mui/material\";\nimport SectionTitle from \"./SectionTitle\";\n\ntype Props = {\n  title: string;\n  icon: React.ReactNode;\n  helpbox?: React.ReactNode;\n  children: React.ReactNode;\n};\n\nconst FormLayout: React.FC<Props> = ({ children, title, helpbox, icon }) => {\n  return (\n    <Box\n      sx={{\n        display: \"grid\",\n        padding: \"25px\",\n        gap: \"25px\",\n        gridTemplateColumns: {\n          md: \"2fr 1.2fr\",\n          xs: \"1fr\",\n        },\n        border: \"1px solid #eaeaea\",\n      }}\n    >\n      <Box>\n        <SectionTitle icon={icon}>{title}</SectionTitle>\n        <Box sx={{ height: 16 }} />\n        {children}\n      </Box>\n\n      {helpbox}\n    </Box>\n  );\n};\n\nexport default FormLayout;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState } from \"react\";\nimport { Box } from \"@mui/material\";\n\nimport Grid from \"@mui/material/Grid\";\nimport { AddAccessRuleIcon, Button } from \"mds\";\nimport PageLayout from \"../Common/Layout/PageLayout\";\nimport InputBoxWrapper from \"../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport FormLayout from \"../Common/FormLayout\";\nimport useApi from \"../Common/Hooks/useApi\";\nimport KMSHelpBox from \"./KMSHelpbox\";\n\ninterface IAddKeyFormProps {\n  onSuccess: () => void;\n  onError: (err: ErrorResponseHandler) => void;\n}\n\nconst AddKeyForm = ({ onSuccess, onError }: IAddKeyFormProps) => {\n  const [loading, invokeApi] = useApi(onSuccess, onError);\n  const [keyName, setKeyName] = useState<string>(\"\");\n\n  const addRecord = (event: React.FormEvent) => {\n    event.preventDefault();\n    invokeApi(\"POST\", \"/api/v1/kms/keys/\", { key: keyName });\n  };\n\n  const resetForm = () => {\n    setKeyName(\"\");\n  };\n\n  const validateKeyName = (keyName: string) => {\n    if (keyName.indexOf(\" \") !== -1) {\n      return \"Key name cannot contain spaces\";\n    } else return \"\";\n  };\n\n  const validSave = keyName.trim() !== \"\" && keyName.indexOf(\" \") === -1;\n\n  return (\n    <PageLayout>\n      <FormLayout\n        title={\"Create Key\"}\n        icon={<AddAccessRuleIcon />}\n        helpbox={\n          <KMSHelpBox\n            helpText={\"Encryption Key\"}\n            contents={[\n              \"Create a new cryptographic key in the Key Management Service server connected to MINIO.\",\n            ]}\n          />\n        }\n      >\n        <form\n          noValidate\n          autoComplete=\"off\"\n          onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n            addRecord(e);\n          }}\n        >\n          <Grid container item spacing={1}>\n            <Grid item xs={12}>\n              <InputBoxWrapper\n                id=\"key-name\"\n                name=\"key-name\"\n                label=\"Key Name\"\n                autoFocus={true}\n                value={keyName}\n                error={validateKeyName(keyName)}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setKeyName(e.target.value);\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} textAlign={\"right\"}>\n              <Box\n                sx={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"flex-end\",\n                  marginTop: \"20px\",\n                  gap: \"15px\",\n                }}\n              >\n                <Button\n                  id={\"clear\"}\n                  type=\"button\"\n                  variant=\"regular\"\n                  onClick={resetForm}\n                  label={\"Clear\"}\n                />\n\n                <Button\n                  id={\"save-key\"}\n                  type=\"submit\"\n                  variant=\"callAction\"\n                  color=\"primary\"\n                  disabled={loading || !validSave}\n                  label={\"Save\"}\n                />\n              </Box>\n            </Grid>\n          </Grid>\n        </form>\n      </FormLayout>\n    </PageLayout>\n  );\n};\n\nexport default AddKeyForm;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\n\nimport Grid from \"@mui/material/Grid\";\nimport PageHeader from \"../Common/PageHeader/PageHeader\";\nimport BackLink from \"../../../common/BackLink\";\nimport { IAM_PAGES } from \"../../../common/SecureComponent/permissions\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport { setErrorSnackMessage } from \"../../../systemSlice\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAppDispatch } from \"../../../store\";\nimport AddKeyForm from \"./AddKeyForm\";\n\nconst AddKey = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const onSuccess = () => navigate(`${IAM_PAGES.KMS_KEYS}`);\n\n  const onError = (err: ErrorResponseHandler) =>\n    dispatch(setErrorSnackMessage(err));\n\n  return (\n    <Fragment>\n      <Grid item xs={12}>\n        <PageHeader\n          label={<BackLink to={IAM_PAGES.KMS_KEYS} label={\"Keys\"} />}\n        />\n        <AddKeyForm onError={onError} onSuccess={onSuccess} />\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default AddKey;\n","import React from \"react\";\n\nimport { Box } from \"@mui/material\";\nimport { HelpIconFilled } from \"mds\";\n\ninterface IKMSHelpBoxProps {\n  helpText: string;\n  contents: string[];\n}\n\nconst KMSHelpBox = ({ helpText, contents }: IKMSHelpBoxProps) => {\n  return (\n    <Box\n      sx={{\n        flex: 1,\n        border: \"1px solid #eaeaea\",\n        borderRadius: \"2px\",\n        display: \"flex\",\n        flexFlow: \"column\",\n        padding: \"20px\",\n      }}\n    >\n      <Box\n        sx={{\n          fontSize: \"16px\",\n          fontWeight: 600,\n          display: \"flex\",\n          alignItems: \"center\",\n          marginBottom: \"16px\",\n          paddingBottom: \"20px\",\n\n          \"& .min-icon\": {\n            height: \"21px\",\n            width: \"21px\",\n            marginRight: \"15px\",\n          },\n        }}\n      >\n        <HelpIconFilled />\n        <div>{helpText}</div>\n      </Box>\n      <Box sx={{ fontSize: \"14px\", marginBottom: \"15px\" }}>\n        {contents.map((content) => (\n          <Box sx={{ paddingBottom: \"20px\" }}>{content}</Box>\n        ))}\n      </Box>\n    </Box>\n  );\n};\n\nexport default KMSHelpBox;\n"],"names":["children","title","helpbox","icon","sx","display","padding","gap","gridTemplateColumns","md","xs","border","height","onSuccess","onError","useApi","loading","invokeApi","useState","keyName","setKeyName","validSave","trim","indexOf","PageLayout","FormLayout","helpText","contents","noValidate","autoComplete","onSubmit","e","preventDefault","key","Grid","container","item","spacing","InputBoxWrapper","id","name","label","autoFocus","value","error","validateKeyName","onChange","target","textAlign","Box","alignItems","justifyContent","marginTop","type","variant","onClick","color","disabled","dispatch","useAppDispatch","navigate","useNavigate","Fragment","PageHeader","BackLink","to","IAM_PAGES","err","setErrorSnackMessage","flex","borderRadius","flexFlow","fontSize","fontWeight","marginBottom","paddingBottom","width","marginRight","map","content"],"sourceRoot":""}