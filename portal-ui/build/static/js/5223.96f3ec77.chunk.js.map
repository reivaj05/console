{"version":3,"file":"static/js/5223.96f3ec77.chunk.js","mappings":"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","sources":["screens/Console/Common/ModalWrapper/ModalWrapper.tsx","screens/Console/License/LicenseConsentModal.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  deleteDialogStyles,\n  snackBarCommon,\n} from \"../FormComponents/common/styleLibrary\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport MainError from \"../MainError/MainError\";\nimport { setModalSnackMessage } from \"../../../../systemSlice\";\n\ninterface IModalProps {\n  classes: any;\n  onClose: () => void;\n  modalOpen: boolean;\n  title: string | React.ReactNode;\n  children: any;\n  wideLimit?: boolean;\n  noContentPadding?: boolean;\n  titleIcon?: React.ReactNode;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...deleteDialogStyles,\n    content: {\n      padding: 25,\n      paddingBottom: 0,\n    },\n    customDialogSize: {\n      width: \"100%\",\n      maxWidth: 765,\n    },\n    ...snackBarCommon,\n  });\n\nconst ModalWrapper = ({\n  onClose,\n  modalOpen,\n  title,\n  children,\n  classes,\n  wideLimit = true,\n  noContentPadding,\n  titleIcon = null,\n}: IModalProps) => {\n  const dispatch = useAppDispatch();\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  const modalSnackMessage = useSelector(\n    (state: AppState) => state.system.modalSnackBar\n  );\n\n  useEffect(() => {\n    dispatch(setModalSnackMessage(\"\"));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (modalSnackMessage) {\n      if (modalSnackMessage.message === \"\") {\n        setOpenSnackbar(false);\n        return;\n      }\n      // Open SnackBar\n      if (modalSnackMessage.type !== \"error\") {\n        setOpenSnackbar(true);\n      }\n    }\n  }, [modalSnackMessage]);\n\n  const closeSnackBar = () => {\n    setOpenSnackbar(false);\n    dispatch(setModalSnackMessage(\"\"));\n  };\n\n  const customSize = wideLimit\n    ? {\n        classes: {\n          paper: classes.customDialogSize,\n        },\n      }\n    : { maxWidth: \"lg\" as const, fullWidth: true };\n\n  let message = \"\";\n\n  if (modalSnackMessage) {\n    message = modalSnackMessage.detailedErrorMsg;\n    if (\n      modalSnackMessage.detailedErrorMsg === \"\" ||\n      modalSnackMessage.detailedErrorMsg.length < 5\n    ) {\n      message = modalSnackMessage.message;\n    }\n  }\n\n  return (\n    <Dialog\n      open={modalOpen}\n      classes={classes}\n      {...customSize}\n      scroll={\"paper\"}\n      onClose={(event, reason) => {\n        if (reason !== \"backdropClick\") {\n          onClose(); // close on Esc but not on click outside\n        }\n      }}\n      className={classes.root}\n    >\n      <DialogTitle className={classes.title}>\n        <div className={classes.titleText}>\n          {titleIcon} {title}\n        </div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            id={\"close\"}\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <MainError isModal={true} />\n      <Snackbar\n        open={openSnackbar}\n        className={classes.snackBarModal}\n        onClose={() => {\n          closeSnackBar();\n        }}\n        message={message}\n        ContentProps={{\n          className: `${classes.snackBar} ${\n            modalSnackMessage && modalSnackMessage.type === \"error\"\n              ? classes.errorSnackBar\n              : \"\"\n          }`,\n        }}\n        autoHideDuration={\n          modalSnackMessage && modalSnackMessage.type === \"error\" ? 10000 : 5000\n        }\n      />\n      <DialogContent className={noContentPadding ? \"\" : classes.content}>\n        {children}\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default withStyles(styles)(ModalWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport ModalWrapper from \"../Common/ModalWrapper/ModalWrapper\";\nimport { Box } from \"@mui/material\";\nimport { Button } from \"mds\";\nimport { AGPLV3DarkLogo } from \"../../../icons\";\nimport { setLicenseConsent } from \"./utils\";\nimport LicenseLink from \"./LicenseLink\";\n\nconst LicenseConsentModal = ({\n  isOpen,\n  onClose,\n}: {\n  onClose: () => void;\n  isOpen: boolean;\n}) => {\n  const recordAgplConsent = () => {\n    setLicenseConsent(); //to Local storage.\n    onClose();\n  };\n\n  return (\n    <ModalWrapper\n      modalOpen={isOpen}\n      title=\"License\"\n      onClose={() => {\n        onClose();\n      }}\n    >\n      <Box\n        sx={{\n          display: \"flex\",\n          flexFlow: \"column\",\n          \"& .link-text\": {\n            color: \"#2781B0\",\n            fontSize: \"16px\",\n            fontWeight: 600,\n          },\n        }}\n      >\n        <Box\n          sx={{\n            display: \"flex\",\n            alignItems: \"center\",\n            marginBottom: \"40px\",\n            justifyContent: \"center\",\n            \"& .min-icon\": {\n              fill: \"blue\",\n              width: \"188px\",\n              height: \"62px\",\n            },\n          }}\n        >\n          <AGPLV3DarkLogo />\n        </Box>\n        <Box\n          sx={{\n            marginBottom: \"27px\",\n          }}\n        >\n          By using this software, you acknowledge that MinIO software is\n          licensed under the <LicenseLink />, for which, the full text can be\n          found here:{\" \"}\n          <a\n            href={`https://www.gnu.org/licenses/agpl-3.0.html`}\n            rel=\"noreferrer noopener\"\n            className={\"link-text\"}\n          >\n            https://www.gnu.org/licenses/agpl-3.0.html.\n          </a>\n        </Box>\n        <Box\n          sx={{\n            paddingBottom: \"23px\",\n          }}\n        >\n          Please review the terms carefully and ensure you are in compliance\n          with the obligations of the license. If you are not able to satisfy\n          the license obligations, we offer a commercial license which is\n          available here:{\" \"}\n          <a\n            href={`https://min.io/signup?ref=con`}\n            rel=\"noreferrer noopener\"\n            className={\"link-text\"}\n          >\n            https://min.io/signup.\n          </a>\n        </Box>\n\n        <Box\n          sx={{\n            marginTop: \"19px\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <Button\n            id={\"confirm\"}\n            type=\"button\"\n            variant=\"callAction\"\n            onClick={recordAgplConsent}\n            label={\"Acknowledge\"}\n          />\n        </Box>\n      </Box>\n    </ModalWrapper>\n  );\n};\n\nexport default LicenseConsentModal;\n"],"names":["withStyles","theme","createStyles","deleteDialogStyles","content","padding","paddingBottom","customDialogSize","width","maxWidth","snackBarCommon","onClose","modalOpen","title","children","classes","wideLimit","noContentPadding","titleIcon","dispatch","useAppDispatch","useState","openSnackbar","setOpenSnackbar","modalSnackMessage","useSelector","state","system","modalSnackBar","useEffect","setModalSnackMessage","message","type","customSize","paper","fullWidth","detailedErrorMsg","length","open","scroll","event","reason","className","root","titleText","closeContainer","id","closeButton","onClick","disableRipple","size","isModal","snackBarModal","ContentProps","snackBar","errorSnackBar","autoHideDuration","isOpen","sx","display","flexFlow","color","fontSize","fontWeight","alignItems","marginBottom","justifyContent","fill","height","href","rel","marginTop","variant","setLicenseConsent","label"],"sourceRoot":""}