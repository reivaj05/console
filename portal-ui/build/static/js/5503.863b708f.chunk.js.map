{"version":3,"file":"static/js/5503.863b708f.chunk.js","mappings":"sKA0EA,KAAeA,EAAAA,EAAAA,IApDA,SAACC,GAAD,OACbC,EAAAA,EAAAA,GAAa,CACXC,KAAM,CACJC,OAAQ,oBACRC,aAAc,EACdC,gBAAiB,UACjBC,YAAa,GACbC,WAAY,GACZC,cAAe,GACfC,aAAc,IAEhBC,UAAW,CACTC,SAAU,GACVC,WAAY,OACZC,aAAc,GACdC,QAAS,OACTC,WAAY,SACZ,cAAe,CACbC,YAAa,GACbC,OAAQ,GACRC,MAAO,KAGXC,SAAU,CACRR,SAAU,GACVL,YAAa,IAzBJ,GAoDf,EAhBgB,SAAC,GAAuD,IAArDc,EAAoD,EAApDA,QAASC,EAA2C,EAA3CA,cAAeC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,KAChD,OACE,gBAAKC,UAAWJ,EAAQlB,KAAxB,UACE,UAAC,KAAD,CAAMuB,WAAS,EAAf,WACE,UAAC,KAAD,CAAMC,MAAI,EAACC,GAAI,GAAIH,UAAWJ,EAAQV,UAAtC,UACGW,EACAC,MAEH,SAAC,KAAD,CAAMI,MAAI,EAACC,GAAI,GAAIH,UAAWJ,EAAQD,SAAtC,SACGI,QAKV,G,8FCHD,IA5CwB,SAAC,GAAiD,IAA/CF,EAA8C,EAA9CA,cAAeO,EAA+B,EAA/BA,OACxC,OACE,SAAC,KAAD,CAAMH,WAAS,EAACV,WAAY,SAA5B,UACE,SAAC,KAAD,CAAMW,MAAI,EAACC,GAAI,GAAf,UACE,SAAC,IAAD,CACEL,MAAK,UAAKM,EAAL,kBACLP,cAAeA,EACfE,MACE,UAAC,IAAD,CACEM,GAAI,CACFlB,SAAU,OACVG,QAAS,OACTX,OAAQ,OACR2B,SAAU,CACRH,GAAI,SACJI,GAAI,OAEN,MAAO,CACLC,MAAO,SAAChC,GAAD,OAAWA,EAAMiC,OAAOC,IAAxB,EACPC,eAAgB,cAXtB,WAeE,qFAEA,uDAC4B,KAC1B,cACEC,KAAK,oHACLC,OAAO,SACPC,IAAI,aAHN,8BAMK,IARP,kCAiBb,C,iOC6ED,KAAevC,EAAAA,EAAAA,IAtGA,SAACC,GAAD,OACbC,EAAAA,EAAAA,IAAa,UACRsC,EAAAA,IAFQ,GAsGf,EAjG0B,SAAC,GASN,IARnBC,EAQkB,EARlBA,MAQkB,IAPlBC,MAAAA,OAOkB,MAPV,GAOU,MANlBC,QAAAA,OAMkB,MANR,GAMQ,MALlBC,KAAAA,OAKkB,MALX,OAKW,EAJlBvB,EAIkB,EAJlBA,QACAwB,EAGkB,EAHlBA,eAGkB,KAFlBC,SAEkB,EADlBC,cAAAA,OACkB,MADH,QACG,EAClB,OACE,UAAC,WAAD,YACE,SAAC,KAAD,CAAMpB,MAAI,EAACC,GAAI,GAAIE,GAAI,CAAEhB,aAAc,QAAvC,UACE,UAAC,IAAD,CAAYW,UAAWJ,EAAQ2B,WAA/B,WACE,0BAAON,IACM,KAAZC,IACC,gBAAKlB,UAAWJ,EAAQ4B,iBAAxB,UACE,SAAC,IAAD,CAAS1B,MAAOoB,EAASO,UAAU,YAAnC,UACE,gBAAKzB,UAAWJ,EAAQsB,QAAxB,UACE,SAAC,IAAD,gBAQZ,SAAC,KAAD,CACEhB,MAAI,EACJC,GAAI,GACJuB,MAAO,CACLC,UAAWL,EACXM,SAAU,OACVjD,OAAQ,qBANZ,UASE,SAAC,IAAD,CACEqC,MAAOA,EACPa,SAAUV,EACVW,SAAU,SAACC,GACTX,EAAe,KAAM,KAAMW,EAAIlB,OAAOG,MACvC,EACDgB,GAAI,eACJC,QAAS,GACTP,MAAO,CACLvC,SAAU,GACVN,gBAAiB,UACjBqD,WACE,+EACFC,UAAWb,GAAgB,UAC3Bd,MAAO,gBAIb,SAAC,KAAD,CACEN,MAAI,EACJC,GAAI,GACJE,GAAI,CACF+B,WAAY,UACZzD,OAAQ,oBACR0D,UAAW,GANf,UASE,SAAC,IAAD,CACEhC,GAAI,CACFf,QAAS,OACTC,WAAY,SACZ0C,QAAS,MACThD,aAAc,MACdqD,eAAgB,WAChB,WAAY,CACV7C,OAAQ,OACRC,MAAO,OACPuC,QAAS,MACT,aAAc,CACZM,WAAY,OAZpB,UAiBE,SAAC,IAAD,CAAgBrB,QAAS,oBAAzB,UACE,SAAC,IAAD,CAAiBsB,KAAMxB,EAAvB,UACE,SAAC,KAAD,CACEyB,KAAM,SACNT,GAAI,mBACJU,MAAM,SAAC,MAAD,IACNlC,MAAO,UACPmC,QAAS,sBAQxB,G,+HC5GKC,GAAuBC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAAuB,2BAClDpD,OAAQ,GACRb,aAAc,IAFoC,qBAG5CmE,EAAAA,EAAAA,cAAuC,CAC3ClE,gBAAiB,aAJ+B,sBAM3CkE,EAAAA,EAAAA,KAA8B,CACnCnE,aAAc,IAPkC,KAU9CoE,GAA4BH,EAAAA,EAAAA,IAAOD,EAAPC,EAA6B,0BAC7DpD,OAAQ,EACRb,aAAc,GAF+C,aAGtDmE,EAAAA,EAAAA,KAA8B,CACnCnE,aAAc,GAJ6C,IAQ/D,SAASqE,EACPC,GAEA,IAAI1C,EAAQ,OACR2C,EAAO,GAUX,OARID,EAAME,OACR5C,EAAQ,UACR2C,EAAO,IACED,EAAMG,YACf7C,EAAQ,UACR2C,EAAO,KAIP,UAAC,IAAD,CAAK9C,GAAI,CAAEf,QAAS,OAAQC,WAAY,UAAxC,WACE,SAAC,IAAD,CAAKc,GAAI,CAAEX,MAAO,OAAQ4D,GAAI,GAA9B,UACE,SAACV,GAAD,QAAsBD,QAAQ,eAAkBO,OAElD,SAAC,IAAD,CACE7C,GAAI,CACFkD,SAAU,GACVpE,SAAUgE,EACV3C,MAAOA,GAETR,UAAW,QANb,SAQGkD,EAAMG,UACL,aAEA,SAAC,EAAAG,SAAD,UACGN,EAAME,MAAQ,SAAd,UAA4BK,KAAKC,MAAMR,EAAMlC,OAAS,GAAtD,WAMZ,CA2CD,IAzC2B,SAAC,GAQA,IAP1BA,EAOyB,EAPzBA,MACA2C,EAMyB,EANzBA,MACAC,EAKyB,EALzBA,cACAC,EAIyB,EAJzBA,UAIyB,IAHzBV,KAAAA,OAGyB,MAHlB,UAGkB,EAFzBC,EAEyB,EAFzBA,MACAC,EACyB,EADzBA,UAYMS,EAAsC,CAC1CnB,SACEiB,GAAkBD,GAAUN,EAA8B,cAAlB,gBAC1CrC,MAAO2C,EAAQ,IAAM3C,EACrBR,MAbE4C,EACM,QACCC,EACD,UACW,MAAVrC,GAAiB2C,EAClB,UAEA,WAQV,OAAIE,GAEA,SAACZ,GAAD,kBACMa,GADN,IAEEV,QAASA,EACTC,YAAaA,KAIN,UAATF,GACK,SAACH,GAAD,UAA+Bc,KAGjC,SAAClB,GAAD,UAA0BkB,GAClC,C,oFC3FD,IAduB,SAAC,GAIK,IAH3B5C,EAG0B,EAH1BA,QACA6C,EAE0B,EAF1BA,SAE0B,IAD1BC,WAAAA,OAC0B,MADb,KACa,EAC1B,OACE,SAAC,IAAD,CAASlE,MAAOoB,EAAhB,UACE,0BACG8C,GAAaC,EAAAA,EAAAA,cAAaF,GAAD,UAAgBC,IAAgBD,KAIjE,C,qYC2ED,GAAexF,EAAAA,EAAAA,IAzFA,SAACC,GAAD,OACbC,EAAAA,EAAAA,GAAa,CACXyF,mBAAoB,CAClBC,WAAY,EACZhF,SAAU,GACVqB,MAAO,WAET4D,YAAa,CACX5D,MAAO,OACPrB,SAAU,GACVC,WAAY,QAEdiF,YAAa,CACXlF,SAAU,GACVqB,MAAO,UACPpB,WAAY,OACZkF,UAAW,SAEbC,mBAAoB,CAClBJ,WAAY,EACZK,cAAe,UAEjBC,eAAgB,CACdtF,SAAU,GACVuF,UAAW,EACXlE,MAAO,UACPpB,WAAY,OACZkF,UAAW,SAEbK,YAAa,CACXnE,MAAO,UACPrB,SAAU,GACVC,WAAY,QAEdwF,OAAQ,CACNJ,cAAe,WAnCN,GAyFf,EAlDsB,SAAC,GAYhB,IAXL5E,EAWI,EAXJA,QACAE,EAUI,EAVJA,MACA4C,EASI,EATJA,KACAmC,EAQI,EARJA,WACAC,EAOI,EAPJA,QAQMC,GAAMC,EAAAA,EAAAA,IAAeH,GAEvBI,EAAQ,IACRC,EAAO,GAOX,OALkB,IAAdH,EAAIE,QACNA,EAAQF,EAAIE,MAAME,WAClBD,EAAI,UAAMH,EAAIG,KAAV,QAIJ,8BACE,2BACE,eAAIlF,UAAWJ,EAAQsE,mBAAvB,SAA4CpE,KAC5C,eAAIE,UAAWJ,EAAQgF,OAAvB,SAAgClC,QAElC,2BACE,eAAI1C,WAAWoF,EAAAA,EAAAA,GAAKxF,EAAQ2E,mBAAoB3E,EAAQyE,aAAxD,SACGY,KAEH,eAAIjF,WAAWoF,EAAAA,EAAAA,GAAKxF,EAAQ2E,mBAAoB3E,EAAQwE,aAAxD,SACGc,QAGL,2BACE,eACElF,WAAWoF,EAAAA,EAAAA,GAAKxF,EAAQ2E,mBAAoB3E,EAAQ6E,gBADtD,SAGGK,KAEH,eAAI9E,WAAWoF,EAAAA,EAAAA,GAAKxF,EAAQ2E,mBAAoB3E,EAAQ+E,aAAxD,SACe,IAAZG,GAAiB,gBAK3B,ICkVD,GAAevG,EAAAA,EAAAA,IA1ZA,SAACC,GAAD,OACbC,EAAAA,EAAAA,GAAa,CACX4G,cAAe,CACbf,UAAW,SAEbgB,gBAAiB,CACflG,WAAY,OACZD,SAAU,IAEZoG,iBAAkB,CAChB1G,gBAAiB,UACjBwD,UAAW,oBACXqC,UAAW,GACXzC,QAAS,IAEXuD,YAAa,CACXlG,QAAS,OACTC,WAAY,SACZ,QAAS,CACPkG,KAAM,YAGVC,aAAc,CACZpG,QAAS,OACTC,WAAY,SACZ+C,eAAgB,cAElBqD,gBAAiB,CACfrG,QAAS,OACTC,WAAY,SACZ+C,eAAgB,YAElBsD,aAAc,CACZlG,MAAO,OACPgF,UAAW,GACX,oBAAqB,CACnBJ,UAAW,OACXrC,QAAS,GACT9C,SAAU,GACVC,WAAY,QAEd,eAAgB,CACd,iBAAkB,CAChB,SAAU,CACRyG,aAAc,sBAGlB,SAAU,CACRxD,UAAW,oBACXJ,QAAS,GACT9C,SAAU,GACV,kBAAmB,CACjB2G,WAAY,qBAEd,iBAAkB,CAChBC,YAAa,wBAKrBC,WAAY,CACVtG,MAAO,IAETuG,YAAa,CACXvG,MAAO,KAETwG,WAAY,CACVC,SAAU,IACVvE,SAAU,SACVwE,aAAc,WACdC,WAAY,UAEdC,cAAe,CACbC,UAAW,OACXvH,cAAe,IAEjBwH,cAAe,CACb9B,UAAW,IAEb+B,SAAU,CACR,cAAe,CACb/G,MAAO,GACPD,OAAQ,GACRe,MAAO,qBAGXkG,OAAQ,CACN,cAAe,CACbhH,MAAO,GACPD,OAAQ,GACRe,MAAO,qBA1FA,GA0Zf,EArTkB,SAAC,GAA6C,IAA3CZ,EAA0C,EAA1CA,QAAS+G,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,MACrC,GAAgCC,EAAAA,EAAAA,WAAkB,GAAlD,eAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAAWL,EAAQA,EAAQM,OAAS,IAAM,GAE1CC,EAAyBC,IAAIH,EAAU,mBAAoB,KAAO,GAClEI,EAAyBD,IAAIH,EAAU,mBAAoB,KAAO,GAElEK,EAAgBF,IAAIH,EAAU,4BAA6B,GAC3DM,EAAaH,IAAIH,EAAU,yBAA0B,GAErDO,EAAgBJ,IAAIH,EAAU,4BAA6B,GAC3DQ,EAAaL,IAAIH,EAAU,yBAA0B,GAEvDS,EAA+B,GAEnCP,EAAWQ,SAAQ,SAACxH,GAClB,IAAMyH,EAAWzH,EAAK0H,SAChBC,EAAYT,EAAWU,MAAK,SAAC5H,GAAD,OAAUA,EAAK0H,WAAaD,CAA5B,IAE9BI,EAA6B,CAC/BC,QAAS,IACTC,SAAU,MACVC,KAAMhI,EAAK0H,SACXO,QAAS,IACTC,SAAU,OAGZ,GAAIlI,EAAKmI,KAAoB,KAAbnI,EAAKmI,IACnBN,EAASO,SAAWpI,EAAKmI,IACzBN,EAASC,QAAU,IACnBD,EAASE,SAAW,UACf,CACL,IAAMM,GAAUvD,EAAAA,EAAAA,IAAe9E,EAAKsI,iBAAiBrD,YAErD4C,EAASC,QAAUO,EAAQrD,KAC3B6C,EAASE,SAAWM,EAAQtD,MAAME,UACnC,CAED,GAAI0C,EACF,GAAIA,EAAUQ,KAAyB,KAAlBR,EAAUQ,IAC7BN,EAASU,SAAWZ,EAAUQ,IAC9BN,EAASI,QAAU,IACnBJ,EAASK,SAAW,UACf,CACL,IAAMM,GAAU1D,EAAAA,EAAAA,IAAe6C,EAAUW,iBAAiBrD,YAE1D4C,EAASI,QAAUO,EAAQxD,KAC3B6C,EAASK,SAAWM,EAAQzD,MAAME,UACnC,CAGHsC,EAASkB,KAAKZ,EACf,IAED,IAwBMa,EAAe5B,EAAW6B,KAAKC,UAAU9B,EAAU,KAAM,GAAK,GAC9D+B,EC1MoB,SAACpC,GAC3B,IAIMqC,EAJWrC,EAAQsC,QACvB,SAAC/I,GAAD,MAA2B,MAAjBA,EAAKgJ,SAAkC,IAAfhJ,EAAKiJ,KAAvC,IAGsBC,KAAI,SAACC,GAAa,IAAD,IACvC,MAAO,CACLlC,KAAK,UAAAkC,EAAQC,gBAAR,eAAkBd,mBAAoB,EAC3Ce,KAAK,UAAAF,EAAQG,gBAAR,eAAkBhB,mBAAoB,EAE9C,IAED,MAAM,CAAE,CAAErB,IAAK,EAAGoC,IAAK,IAAvB,eAA+BP,GAChC,CD6LoBS,CAAa9C,GAEhC,OACE,UAAC,EAAAnD,SAAD,YACE,UAACkG,EAAA,GAAD,CAAMzJ,WAAS,EAACD,UAAWJ,EAAQ4G,cAAnC,WACE,SAACkD,EAAA,GAAD,CAAMxJ,MAAI,EAACC,GAAI,GAAII,GAAI,EAAGoJ,GAAI,EAA9B,UACE,UAACD,EAAA,GAAD,CAAMzJ,WAAS,EAACD,UAAWJ,EAAQ4G,cAAnC,WACE,SAACkD,EAAA,GAAD,CAAMxJ,MAAI,EAACC,GAAI,GAAII,GAAI,EAAGoJ,GAAI,EAA9B,UACE,SAAC,EAAD,CACEjH,MACE,gBAAK1C,UAAWJ,EAAQ6G,SAAxB,UACE,SAAC,MAAD,MAGJ3G,MAAO,MACP+E,WAAYwC,EACZvC,QAASwC,OAGb,SAACoC,EAAA,GAAD,CAAMxJ,MAAI,EAACC,GAAI,GAAII,GAAI,EAAGoJ,GAAI,EAA9B,UACE,SAAC,EAAD,CACEjH,MACE,gBAAK1C,UAAWJ,EAAQ8G,OAAxB,UACE,SAAC,MAAD,MAGJ5G,MAAO,MACP+E,WAAY0C,EACZzC,QAAS0C,YAKjB,SAACkC,EAAA,GAAD,CAAMxJ,MAAI,EAACC,GAAI,GAAII,GAAI,EAAGoJ,GAAI,EAA9B,UACE,SAACC,EAAA,EAAD,CAAqBlK,MAAM,MAA3B,UACE,UAACmK,EAAA,EAAD,CAAWC,KAAMf,EAAjB,WACE,6BACE,4BAAgB/G,GAAG,WAAW+H,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAtD,WACE,iBAAMC,OAAO,KAAKC,UAAU,UAAUC,YAAa,MACnD,iBAAMF,OAAO,MAAMC,UAAU,OAAOC,YAAa,QAEnD,4BAAgBrI,GAAG,WAAW+H,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAtD,WACE,iBAAMC,OAAO,KAAKC,UAAU,UAAUC,YAAa,MACnD,iBAAMF,OAAO,MAAMC,UAAU,OAAOC,YAAa,WAIrD,SAACC,EAAA,EAAD,CACEC,gBAAiB,MACjBC,YAAa,EACbC,cAAe,GACfC,OAAQ,UACRC,UAAU,KAGZ,SAACC,EAAA,EAAD,CACEnI,KAAK,WACLoI,QAAS,MACTH,OAAQ,UACRjF,KAAM,iBACNqF,YAAa,GACbN,YAAa,EACbO,KAAK,KAEP,SAACH,EAAA,EAAD,CACEnI,KAAK,WACLoI,QAAS,MACTH,OAAQ,UACRjF,KAAM,iBACNqF,YAAa,GACbN,YAAa,EACbO,KAAK,eAMf,kBACChC,EAAW9B,OAAS,IACnB,UAAC,EAAAzD,SAAD,YACE,UAACkG,EAAA,GAAD,CAAMzJ,WAAS,EAAf,WACE,SAACyJ,EAAA,GAAD,CAAMxJ,MAAI,EAACC,GAAI,GAAII,GAAI,EAAGP,UAAWJ,EAAQ0F,gBAA7C,SACGsB,GACC,SAAC,EAAApD,SAAD,mCAEA,SAAC,EAAAA,SAAD,UACGsD,EAAW,gBAAkB,yBAIpC,SAAC4C,EAAA,GAAD,CAAMxJ,MAAI,EAACC,GAAI,GAAII,GAAI,EAAGP,UAAWJ,EAAQyF,cAA7C,UACIuB,IACA,UAAC,EAAApD,SAAD,YACE,SAAC,KAAD,CACExB,GAAI,mBACJ,aAAW,mBACXgJ,QAzHM,WACtB,IAAMC,EAAO,IAAIC,KACbC,EAAUC,SAASC,cAAc,KACrCF,EAAQG,aACN,OACA,iCAAmCzC,KAAKC,UAAU9B,IAEpDmE,EAAQG,aACN,WADF,4BAEuBL,EAAKM,cAF5B,SAKAJ,EAAQzJ,MAAMpC,QAAU,OACxB8L,SAASI,KAAKC,YAAYN,GAE1BA,EAAQO,QAERN,SAASI,KAAKG,YAAYR,EAC3B,EAwGiBzI,MAAM,SAAC,MAAD,MALV,QAQE,SAAC,KAAD,CACEV,GAAI,cACJ,aAAW,cACXgJ,QA5GK,WACrBjE,GAAaD,EACd,EA2GiBpE,MAAM,SAAC,MAAD,eAMhB,SAACgH,EAAA,GAAD,CAAMzJ,WAAS,EAACD,UAAWJ,EAAQ2F,iBAAnC,SACGuB,GACC,SAAC,EAAAtD,SAAD,WACE,SAACoI,EAAA,EAAD,CACE5K,MAAO4H,EACPvH,UAAQ,EACRD,eAAgB,WAAQ,OAI5B,UAAC,EAAAoC,SAAD,YACE,SAACkG,EAAA,GAAD,CACExJ,MAAI,EACJC,GAAI,GACJ0L,GAAI,GACJtL,GAAI,EACJoJ,GAAI,EACJ3J,UAAWJ,EAAQ4F,YACnBjG,WAAY,WAPd,UASE,SAAC,MAAD,CAAkBG,MAAO,QAE3B,UAACgK,EAAA,GAAD,CACExJ,MAAI,EACJC,GAAI,GACJ0L,GAAI,EACJtL,GAAI,EACJoJ,GAAI,EACJ3J,UAAWJ,EAAQ8F,aANrB,wBAQc,4BAASsB,EAAS8E,cAEhC,UAACpC,EAAA,GAAD,CACExJ,MAAI,EACJC,GAAI,GACJ0L,GAAI,EACJtL,GAAI,EACJoJ,GAAI,EACJ3J,UAAWJ,EAAQ8F,aANrB,yBAQe,4BAASsB,EAASmC,YAEjC,UAACO,EAAA,GAAD,CACExJ,MAAI,EACJC,GAAI,GACJ0L,GAAI,EACJtL,GAAI,EACJoJ,GAAI,EACJ3J,UAAWJ,EAAQ8F,aANrB,6BAQmB,4BAASsB,EAAS+E,iBAErC,UAACrC,EAAA,GAAD,CACExJ,MAAI,EACJC,GAAI,GACJ0L,GAAI,GACJtL,GAAI,GACJoJ,GAAI,EACJ3J,UAAWJ,EAAQ+F,gBANrB,WAQE,iBAAM3F,UAAWJ,EAAQoM,YAAzB,UACE,SAAC,MAAD,MACM,IAVV,qBAWqB,4BAAShF,EAASkC,cAEvC,SAACQ,EAAA,GAAD,CAAMxJ,MAAI,EAACC,GAAI,GAAIH,UAAWJ,EAAQ0G,cAAtC,UACE,mBACEtG,UAAWJ,EAAQgG,aACnBqG,YAAa,EACbC,YAAa,EAHf,WAKE,4BACE,2BACE,eAAIC,QAAS,EAAb,sBACA,iCACA,sCAGJ,2BACG1E,EAAS2B,KAAI,SAACgD,EAAOC,GAAR,OACZ,2BACE,eAAIrM,UAAWJ,EAAQoG,WAAvB,UACE,SAAC,MAAD,OAEF,eAAIhG,UAAWJ,EAAQsG,WAAvB,SAAoCkG,EAAMlE,OACzCkE,EAAM9D,UAA+B,KAAnB8D,EAAM9D,UACvB,wBAAK8D,EAAM9D,YAEX,SAAC,EAAA9E,SAAD,WACE,gBAAIxD,UAAWJ,EAAQqG,YAAvB,WACGqG,EAAAA,EAAAA,IAAaC,WAAWH,EAAMnE,WADjC,OAEGmE,EAAMpE,QAFT,WAMHoE,EAAM3D,UAA+B,KAAnB2D,EAAM3D,UACvB,wBAAK2D,EAAM3D,YAEX,SAAC,EAAAjF,SAAD,WACE,gBAAIxD,UAAWJ,EAAQqG,YAAvB,WACGqG,EAAAA,EAAAA,IAAaC,WAAWH,EAAMhE,WADjC,OAEGgE,EAAMjE,QAFT,aAnBN,kBAAoBkE,EAAMlH,YADd,qBAsCnC,I,oIExYKqH,GAAYC,EAAAA,EAAAA,IAAW,SAACjO,GAAD,OAC3BC,EAAAA,EAAAA,IAAa,wCACXiO,gBAAiB,CACf7N,gBAAiB,UACjB8C,UAAW,EACXgL,mBAAoB,OACpB/K,SAAU,SACVK,QAAS,SACTyC,UAAW,GACXpC,eAAgB,gBAChB,SAAU,CACRX,UAAW,IACX3C,cAAe,KAInB4N,iBAAkB,CAChBzN,SAAU,GACVE,aAAc,IAEbwN,EAAAA,GACAC,EAAAA,IACAC,EAAAA,IACAC,EAAAA,KACAC,EAAAA,EAAAA,IAAmBzO,EAAM0O,QAAQ,KAxBX,IAkT7B,EAtRkB,WAChB,IAAMC,GAAmBC,EAAAA,EAAAA,IAAYC,EAAAA,IAC/BC,GAAcF,EAAAA,EAAAA,KAClB,SAACG,GAAD,oBAAqBA,QAArB,IAAqBA,GAArB,UAAqBA,EAAOC,cAA5B,aAAqB,EAAeF,WAApC,IAEIG,GAAWC,EAAAA,EAAAA,MAEjB,GAAsBJ,GAAe,CAAC,GAA9BK,KAAAA,OAAR,MAAe,GAAf,EACMC,EAA6B,aAATD,GAAgC,eAATA,EAE3C/N,EAAU4M,IAChB,GAA0B3F,EAAAA,EAAAA,WAAkB,GAA5C,eAAOD,EAAP,KAAciH,EAAd,KAEA,GAAoChH,EAAAA,EAAAA,UAClC,MADF,eAAOiH,EAAP,KAAmBC,EAAnB,KAIA,GAAwBlH,EAAAA,EAAAA,UAAiB,MAAzC,eAAO1D,EAAP,KAAa6K,EAAb,KACA,GAAgCnH,EAAAA,EAAAA,UAAiB,MAAjD,eAAOoH,EAAP,KAAiBC,EAAjB,KACA,GAAgCrH,EAAAA,EAAAA,UAAiB,MAAjD,eAAOsH,EAAP,KAAiBC,EAAjB,KAEA,IAA8BvH,EAAAA,EAAAA,UAAiB,GAA/C,iBAAOwH,GAAP,MAAgBC,GAAhB,MACA,IAAwCzH,EAAAA,EAAAA,UAAiB,GAAzD,iBAAO0H,GAAP,MAAqBC,GAArB,MACA,IAAwC3H,EAAAA,EAAAA,UAAiB,GAAzD,iBAAO4H,GAAP,MAAqBC,GAArB,MACA,IAAgD7H,EAAAA,EAAAA,UAAiB,GAAjE,iBAAO8H,GAAP,MAAyBC,GAAzB,OAEAC,EAAAA,EAAAA,YAAU,WAER,GAAIjI,EAAO,CACT,IAAMkI,EAAM,IAAIC,IAAIC,OAAOC,SAAS9J,YAE9B+J,EAAwBJ,EAAII,KAI5BC,EADe,IAAIJ,IAAI3D,SAASgE,SACTC,SAEvBC,GAASC,EAAAA,EAAAA,IAAWT,EAAIU,UACxBC,EAAI,IAAIC,EAAAA,aAAJ,UACLJ,EADK,cACOR,EAAIa,SADX,YACuBT,GADvB,OAC8BC,EAD9B,8BAC2DhM,GAD3D,OACkE8K,EADlE,qBACuFE,EADvF,MAIJyB,EAAWC,MAEXC,EAAcF,EAASG,OAAS,IAEhCC,EACJJ,EACGK,IAAqB,EAAjBC,SAAS,MAAW,KACxBH,OAAS,IAERtB,GAAgBuB,EAAgBF,GAAe,IAErDxB,GAAW0B,GACXxB,GAAgBsB,GAChBpB,GAAgBD,GAEhB,IAAI0B,EAAuB,KAC3B,GAAU,OAANV,EA8BF,OA7BAA,EAAEW,OAAS,WACTC,QAAQC,IAAI,8BACZb,EAAEc,KAAK,MACPJ,EAAWK,aAAY,WACrBf,EAAEc,KAAK,KACR,GAAE,IACJ,EACDd,EAAEgB,UAAY,SAACC,GACb,IAAM5G,EAA0BjB,KAAK8H,MAAMD,EAAQ5G,KAAK3E,YAExD4I,GAAc,SAAC6C,GACb,IAAIC,EAA4B,GAC5BD,IACFC,GAAI,OAAOD,IAGb,IAAME,EAA8B,IAAjBhH,EAAKgC,QAAgB,CAAChC,GAAQ,GACjD,MAAM,GAAN,eAAW+G,GAASC,EACrB,IAED,IAAMC,EAAWlB,MAASE,OAAS,IACnCvB,GAAgBuC,EACjB,EACDtB,EAAEuB,QAAU,WACVC,cAAcd,GACdE,QAAQC,IAAI,+BAEZzC,GAAS,EACV,EACM,WAEL4B,EAAEyB,MAAM,KACRD,cAAcd,GACdE,QAAQC,IAAI,qBACb,CAEJ,MAECzC,GAAS,EAEZ,GAAE,CAAC1K,EAAM8K,EAAUrH,EAAOuH,KAE3BU,EAAAA,EAAAA,YAAU,WACR,IAEIsC,EAAgB,IAAuB,MAFpB9C,GAAUE,IAAgB,KAECE,GAE9C0C,EAAgB,MAClBA,EAAgB,KAGlBvC,GAAoBuC,EACrB,GAAE,CAACvK,EAAO2H,GAAcF,GAASI,KAElC,IAEM2C,GAAcxK,EAAQ,QAFQ,OAAfkH,EAAsB,SAAW,QActD,OACE,UAAC,EAAAtK,SAAD,YACE,SAAC6N,EAAA,EAAD,CAAYpQ,MAAM,iBAClB,UAACqQ,EAAA,EAAD,YACI1D,IAAqB,SAAC2D,EAAA,EAAD,CAAiBC,aAAW,IACjDrE,GAMA,UAACsE,EAAA,EAAD,CACEC,OAAQ,CAACC,EAAAA,GAAAA,YACTC,SAAUC,EAAAA,GAFZ,WAIE,UAACnI,EAAA,GAAD,CAAMxJ,MAAI,EAACC,GAAI,GAAIH,UAAWJ,EAAQkS,KAAtC,WACE,UAACpI,EAAA,GAAD,CAAMzJ,WAAS,EAAf,WACE,UAACyJ,EAAA,GAAD,CAAMxJ,MAAI,EAACK,GAAI,EAAGsL,GAAI,GAAtB,WACE,gBAAK7L,UAAWJ,EAAQgN,iBAAxB,SACGhG,GACC,UAAC,EAAApD,SAAD,uCAEE,SAACuO,EAAA,EAAD,CAAQrQ,MAAO,CAAEhC,MAAO,GAAID,OAAQ,UAGtC,SAAC,EAAA+D,SAAD,UACGsK,IAAelH,GACd,gDAEA,iDAKR,0BACE,SAACoL,EAAA,EAAD,CACEhR,MAAO2N,GACPhL,MAAsB,OAAfmK,IAAwBlH,EAC/BhD,cAAegD,EACfzD,KAAM,gBAIZ,SAACuG,EAAA,GAAD,CAAMxJ,MAAI,EAACK,IAAE,EAACsL,GAAI,GAAlB,UACE,gBAAKnK,MAAO,CAAEa,WAAY,GAAI7C,MAAO,KAArC,UACE,SAACuS,EAAA,EAAD,CACEjQ,GAAI,OACJkQ,KAAM,OACNjR,MAAO,cACPa,SAAU,SAACqQ,GACTnE,EAAQmE,EAAEtR,OAAOG,MAClB,EACDoR,iBAAiB,EACjBpR,MAAOmC,EACPkP,SAAUzL,EACV0L,eACE,SAACC,EAAA,EAAD,CACEvQ,GAAI,YACJwQ,aAActE,EACduE,aAAcxE,EACdyE,UAAW,CACT,CAAEzR,MAAO,MAAOD,MAAO,OACvB,CAAEC,MAAO,MAAOD,MAAO,OACvB,CAAEC,MAAO,MAAOD,MAAO,QAEzBqR,SAAUzL,WAMpB,SAAC8C,EAAA,GAAD,CAAMxJ,MAAI,EAACK,IAAE,EAACsL,GAAI,GAAlB,UACE,gBAAKnK,MAAO,CAAEa,WAAY,GAAI7C,MAAO,KAArC,UACE,SAACuS,EAAA,EAAD,CACEjQ,GAAI,WACJkQ,KAAM,WACNjR,MAAO,WACPa,SAAU,SAACqQ,GACLA,EAAEtR,OAAO8R,SAASC,OACpBxE,EAAY+D,EAAEtR,OAAOG,MAExB,EACDoR,iBAAiB,EACjBpR,MAAOmN,EACPkE,SAAUzL,EACV0L,eACE,SAACC,EAAA,EAAD,CACEvQ,GAAI,YACJwQ,aAAc,WAAQ,EACtBC,aAAc,IACdC,UAAW,CAAC,CAAEzR,MAAO,IAAKD,MAAO,MACjCqR,SAAUzL,IAGdiM,QAAS,gBAIf,SAACnJ,EAAA,GAAD,CAAMxJ,MAAI,EAACK,GAAI,EAAGsL,GAAI,GAAIvH,UAAW,QAArC,UACE,SAAC,KAAD,CACE0G,QA9GW,WACd,aAAT2C,GAAgC,eAATA,GAK3BI,EAAc,MACdF,GAAS,IALPJ,EAAS,oBAMZ,EAuGiBjN,MAAM,UACNiC,KAAK,SACLT,GAAI,mBACJW,QACEiL,GAAoC,OAAfE,IAAwBlH,EACzC,aACA,UAEN5G,UAAS,UAAKJ,EAAQkT,iBAAb,YAAiClT,EAAQmT,YAClDV,SACsB,KAApBlE,EAAS6E,QAAiC,KAAhB7P,EAAK6P,QAAiBpM,EAElD3F,MAAOmQ,WAIb,SAAC1H,EAAA,GAAD,CAAMzJ,WAAS,EAACD,UAAWJ,EAAQqT,YAAnC,UACE,SAACvJ,EAAA,GAAD,CAAMxJ,MAAI,EAACC,GAAI,GAAf,UACE,SAAC,EAAAqD,SAAD,WACE,SAACkG,EAAA,GAAD,CAAMxJ,MAAI,EAACC,GAAI,GAAf,SACkB,OAAf2N,IACC,SAAC,EAAAtK,SAAD,WACE,SAAC,EAAD,CAAWmD,QAASmH,EAAYlH,MAAOA,kBASnDA,IAAUkH,GAAcF,IACxB,UAAC,EAAApK,SAAD,YACE,mBACA,SAAC0P,EAAA,EAAD,CACEpT,MACE,mFAEFD,eAAe,SAACsT,EAAA,EAAD,IACfpT,MAAM,SAAC,EAAAyD,SAAD,aAtId,SAAC4P,EAAA,EAAD,CACEvT,eAAe,SAAC,MAAD,IACfO,OAAQ,mBA6InB,C,iIC5MD,IAhIwB,SAAC,GAA+C,IAAD,IAA5CoR,YAAAA,OAA4C,SAC/D/D,GAAWC,EAAAA,EAAAA,MAEX2F,GACJ,SAAC,IAAD,CACE5Q,KAAK,SACLE,QAAQ,YACRnC,MAAM,UACNwK,QAAS,kBAAMyC,EAAS,oBAAf,EAJX,mCAUI6F,EACJ,kFAEF,OAAI9B,GAEA,UAAC,EAAAhO,SAAD,YACE,SAAC,IAAD,CACE1D,OACE,iBACE4B,MAAO,CACLpC,QAAS,OACTgD,eAAgB,gBAChB/C,WAAY,SACZgU,SAAU,GALd,WAQE,0BAAOD,IART,IAQkCD,KAGpCxT,eAAe,SAAC,IAAD,IACfE,MAAM,SAAC,EAAAyD,SAAD,OAER,sBAMJ,SAAC,IAAD,CACEnD,GAAI,CACF4B,QAAS,OACTtD,OAAQ,oBACRW,QAAS,OACTC,WAAY,SACZ+C,eAAgB,SAChBhC,SAAU,CACRuL,GAAI,MACJ1L,GAAI,UAENd,aAAc,QAXlB,UAcE,UAAC,KAAD,CAAMY,WAAS,EAAf,WACE,SAAC,KAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,UACE,SAAC,IAAD,CACEE,GAAI,CACFb,YAAa,MACbL,SAAU,OACVC,WAAY,IACZE,QAAS,OACTC,WAAY,SAEZ,cAAe,CACbG,MAAO,OACPD,OAAQ,OACR8C,WAAY,MACZ/C,YAAa,QAZnB,sCAmBF,SAAC,KAAD,CAAMU,MAAI,EAACC,GAAI,GAAf,UACE,SAAC,IAAD,CACEE,GAAI,CACFf,QAAS,OACTgB,SAAU,CACRH,GAAI,SACJI,GAAI,QALV,UASE,UAAC,IAAD,CACEF,GAAI,CACFf,QAAS,OACTgB,SAAU,SACVkT,KAAM,KAJV,WAOE,SAAC,IAAD,CACEnT,GAAI,CACFlB,SAAU,OACVG,QAAS,OACTgB,SAAU,SACVoE,UAAW,OACXrF,aAAc,QANlB,SASGiU,KAEH,SAAC,IAAD,CACEjT,GAAI,CACFmT,KAAM,KAFV,UAKE,SAAC,IAAD,CACEnT,GAAI,CACFf,QAAS,OACTC,WAAY,SACZ+C,eAAgB,YAJpB,SAOG+Q,iBASlB,C,8ICxIM,IAEMI,EAAyB,KACzBC,EAAyB,KACzBC,EAA2B,KAE3BpE,EAAa,SAACC,GACzB,IAAID,EAAa,KAIjB,MAHiB,WAAbC,IACFD,EAAa,OAERA,CACR,C,oBC7BD,IAAIqE,EAAgB,WACnB,GAAoB,kBAATC,MAAqBA,KAAM,OAAOA,KAC7C,GAAsB,kBAAX7E,QAAuBA,OAAQ,OAAOA,OACjD,MAAM,IAAI8E,MAAM,kCAChB,EAEDC,EAAOC,QAAW,WACjB,GAAIC,KAAM,OAAOA,KAKjB,GAA0B,kBAAfC,YAA2BA,WAAY,OAAOA,WAKzD,IACCC,OAAOC,eAAeD,OAAOE,UAAW,aAAc,CACrDlN,IAAK,WAAc,OAAO8M,IAAO,EACjCK,cAAc,GAMf,CAJC,MAAOlR,GAGR,OAAOwQ,GACP,CACD,IAEC,OAAKW,YAAmBX,GAIxB,CAND,eAKQO,OAAOE,UAAUE,UACxB,CACD,CA5BiB,E,wBCNlB,IAAIC,EACJ,GAA0B,kBAAfN,WACVM,EAAcN,gBAEd,IACCM,EAAcC,EAAQ,MAKtB,CAJC,MAAOrR,GACR,CAHD,QAKC,GADKoR,GAAiC,qBAAXxF,SAA0BwF,EAAcxF,SAC9DwF,EAAe,MAAM,IAAIV,MAAM,kCACpC,CAGF,IAAIY,EAAkBF,EAAYG,WAAaH,EAAYI,aACvDC,EAAoBJ,EAAQ,OAMhC,SAAS/E,EAAaoF,EAAKC,GAiB1B,OAdIA,EACe,IAAIL,EAAgBI,EAAKC,GAGzB,IAAIL,EAAgBI,EAWvC,CACGJ,GACH,CAAC,aAAc,OAAQ,UAAW,UAAUhN,SAAQ,SAASsN,GAC5Db,OAAOC,eAAe1E,EAAcsF,EAAM,CACzC7N,IAAK,WAAa,OAAOuN,EAAgBM,EAAQ,GAElD,IAMFjB,EAAOC,QAAU,CACb,aAAiBU,EAAkBhF,EAAe,KAClD,QAAiBmF,E,wBCpDrBd,EAAOC,QAAU,EAAjBD,OAAAA,O","sources":["common/HelpBox.tsx","screens/Console/Common/DistributedOnly/DistributedOnly.tsx","screens/Console/Common/FormComponents/CodeMirrorWrapper/CodeMirrorWrapper.tsx","screens/Console/Common/ProgressBarWrapper/ProgressBarWrapper.tsx","screens/Console/Common/TooltipWrapper/TooltipWrapper.tsx","screens/Console/Speedtest/SpeedTestUnit.tsx","screens/Console/Speedtest/STResults.tsx","screens/Console/Speedtest/utils.ts","screens/Console/Speedtest/Speedtest.tsx","screens/Console/Support/RegisterCluster.tsx","utils/wsUtils.ts","../node_modules/es5-ext/global.js","../node_modules/websocket/lib/browser.js","../node_modules/websocket/lib/version.js"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      border: \"1px solid #E2E2E2\",\n      borderRadius: 2,\n      backgroundColor: \"#FBFAFA\",\n      paddingLeft: 25,\n      paddingTop: 31,\n      paddingBottom: 21,\n      paddingRight: 30,\n    },\n    leftItems: {\n      fontSize: 16,\n      fontWeight: \"bold\",\n      marginBottom: 15,\n      display: \"flex\",\n      alignItems: \"center\",\n      \"& .min-icon\": {\n        marginRight: 15,\n        height: 28,\n        width: 38,\n      },\n    },\n    helpText: {\n      fontSize: 16,\n      paddingLeft: 5,\n    },\n  });\n\ninterface IHelpBox {\n  classes: any;\n  iconComponent: any;\n  title: string | React.ReactNode;\n  help: any;\n}\n\nconst HelpBox = ({ classes, iconComponent, title, help }: IHelpBox) => {\n  return (\n    <div className={classes.root}>\n      <Grid container>\n        <Grid item xs={12} className={classes.leftItems}>\n          {iconComponent}\n          {title}\n        </Grid>\n        <Grid item xs={12} className={classes.helpText}>\n          {help}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(HelpBox);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Box, Grid } from \"@mui/material\";\nimport HelpBox from \"../../../../common/HelpBox\";\n\ninterface IDistributedOnly {\n  iconComponent: any;\n  entity: string;\n}\n\nconst DistributedOnly = ({ iconComponent, entity }: IDistributedOnly) => {\n  return (\n    <Grid container alignItems={\"center\"}>\n      <Grid item xs={12}>\n        <HelpBox\n          title={`${entity} not available`}\n          iconComponent={iconComponent}\n          help={\n            <Box\n              sx={{\n                fontSize: \"14px\",\n                display: \"flex\",\n                border: \"none\",\n                flexFlow: {\n                  xs: \"column\",\n                  md: \"row\",\n                },\n                \"& a\": {\n                  color: (theme) => theme.colors.link,\n                  textDecoration: \"underline\",\n                },\n              }}\n            >\n              <div>This feature is not available for a single-disk setup.</div>\n\n              <div>\n                Please deploy a server in{\" \"}\n                <a\n                  href=\"https://min.io/docs/minio/linux/operations/install-deploy-manage/deploy-minio-multi-node-multi-drive.html?ref=con\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  Distributed Mode\n                </a>{\" \"}\n                to use this feature.\n              </div>\n            </Box>\n          }\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default DistributedOnly;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Box, InputLabel, Tooltip } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport { fieldBasic } from \"../common/styleLibrary\";\nimport { CopyIcon } from \"../../../../../icons\";\nimport { Button } from \"mds\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport CodeEditor from \"@uiw/react-textarea-code-editor\";\nimport TooltipWrapper from \"../../TooltipWrapper/TooltipWrapper\";\n\ninterface ICodeWrapper {\n  value: string;\n  label?: string;\n  mode?: string;\n  tooltip?: string;\n  classes: any;\n  onChange?: (editor: any, data: any, value: string) => any;\n  onBeforeChange: (editor: any, data: any, value: string) => any;\n  readOnly?: boolean;\n  editorHeight?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n  });\n\nconst CodeMirrorWrapper = ({\n  value,\n  label = \"\",\n  tooltip = \"\",\n  mode = \"json\",\n  classes,\n  onBeforeChange,\n  readOnly = false,\n  editorHeight = \"250px\",\n}: ICodeWrapper) => {\n  return (\n    <React.Fragment>\n      <Grid item xs={12} sx={{ marginBottom: \"10px\" }}>\n        <InputLabel className={classes.inputLabel}>\n          <span>{label}</span>\n          {tooltip !== \"\" && (\n            <div className={classes.tooltipContainer}>\n              <Tooltip title={tooltip} placement=\"top-start\">\n                <div className={classes.tooltip}>\n                  <HelpIcon />\n                </div>\n              </Tooltip>\n            </div>\n          )}\n        </InputLabel>\n      </Grid>\n\n      <Grid\n        item\n        xs={12}\n        style={{\n          maxHeight: editorHeight,\n          overflow: \"auto\",\n          border: \"1px solid #eaeaea\",\n        }}\n      >\n        <CodeEditor\n          value={value}\n          language={mode}\n          onChange={(evn) => {\n            onBeforeChange(null, null, evn.target.value);\n          }}\n          id={\"code_wrapper\"}\n          padding={15}\n          style={{\n            fontSize: 12,\n            backgroundColor: \"#fefefe\",\n            fontFamily:\n              \"ui-monospace,SFMono-Regular,SF Mono,Consolas,Liberation Mono,Menlo,monospace\",\n            minHeight: editorHeight || \"initial\",\n            color: \"#000000\",\n          }}\n        />\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        sx={{\n          background: \"#f7f7f7\",\n          border: \"1px solid #eaeaea\",\n          borderTop: 0,\n        }}\n      >\n        <Box\n          sx={{\n            display: \"flex\",\n            alignItems: \"center\",\n            padding: \"2px\",\n            paddingRight: \"5px\",\n            justifyContent: \"flex-end\",\n            \"& button\": {\n              height: \"26px\",\n              width: \"26px\",\n              padding: \"2px\",\n              \" .min-icon\": {\n                marginLeft: \"0\",\n              },\n            },\n          }}\n        >\n          <TooltipWrapper tooltip={\"Copy to Clipboard\"}>\n            <CopyToClipboard text={value}>\n              <Button\n                type={\"button\"}\n                id={\"copy-code-mirror\"}\n                icon={<CopyIcon />}\n                color={\"primary\"}\n                variant={\"regular\"}\n              />\n            </CopyToClipboard>\n          </TooltipWrapper>\n        </Box>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(CodeMirrorWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { styled } from \"@mui/material/styles\";\nimport LinearProgress, {\n  linearProgressClasses,\n  LinearProgressProps,\n} from \"@mui/material/LinearProgress\";\nimport Box from \"@mui/material/Box\";\n\ninterface IProgressBarWrapper {\n  value: number;\n  ready: boolean;\n  indeterminate?: boolean;\n  withLabel?: boolean;\n  size?: string;\n  error?: boolean;\n  cancelled?: boolean;\n}\n\nconst BorderLinearProgress = styled(LinearProgress)(() => ({\n  height: 10,\n  borderRadius: 5,\n  [`&.${linearProgressClasses.colorPrimary}`]: {\n    backgroundColor: \"#f1f1f1\",\n  },\n  [`& .${linearProgressClasses.bar}`]: {\n    borderRadius: 5,\n  },\n}));\nconst SmallBorderLinearProgress = styled(BorderLinearProgress)(() => ({\n  height: 6,\n  borderRadius: 3,\n  [`& .${linearProgressClasses.bar}`]: {\n    borderRadius: 3,\n  },\n}));\n\nfunction LinearProgressWithLabel(\n  props: { error: boolean; cancelled: boolean } & LinearProgressProps\n) {\n  let color = \"#000\";\n  let size = 18;\n\n  if (props.error) {\n    color = \"#C83B51\";\n    size = 14;\n  } else if (props.cancelled) {\n    color = \"#FFBD62\";\n    size = 14;\n  }\n\n  return (\n    <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n      <Box sx={{ width: \"100%\", mr: 3 }}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box\n        sx={{\n          minWidth: 35,\n          fontSize: size,\n          color: color,\n        }}\n        className={\"value\"}\n      >\n        {props.cancelled ? (\n          \"Cancelled\"\n        ) : (\n          <Fragment>\n            {props.error ? \"Failed\" : `${Math.round(props.value || 0)}%`}\n          </Fragment>\n        )}\n      </Box>\n    </Box>\n  );\n}\n\nconst ProgressBarWrapper = ({\n  value,\n  ready,\n  indeterminate,\n  withLabel,\n  size = \"regular\",\n  error,\n  cancelled,\n}: IProgressBarWrapper) => {\n  let color: any;\n  if (error) {\n    color = \"error\";\n  } else if (cancelled) {\n    color = \"warning\";\n  } else if (value === 100 && ready) {\n    color = \"success\";\n  } else {\n    color = \"primary\";\n  }\n  const propsComponent: LinearProgressProps = {\n    variant:\n      indeterminate && !ready && !cancelled ? \"indeterminate\" : \"determinate\",\n    value: ready ? 100 : value,\n    color: color,\n  };\n  if (withLabel) {\n    return (\n      <LinearProgressWithLabel\n        {...propsComponent}\n        error={!!error}\n        cancelled={!!cancelled}\n      />\n    );\n  }\n  if (size === \"small\") {\n    return <SmallBorderLinearProgress {...propsComponent} />;\n  }\n\n  return <BorderLinearProgress {...propsComponent} />;\n};\n\nexport default ProgressBarWrapper;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { cloneElement } from \"react\";\nimport { Tooltip } from \"@mui/material\";\n\ninterface ITooltipWrapperProps {\n  tooltip: string;\n  children: any;\n  errorProps?: any;\n}\n\nconst TooltipWrapper = ({\n  tooltip,\n  children,\n  errorProps = null,\n}: ITooltipWrapperProps) => {\n  return (\n    <Tooltip title={tooltip}>\n      <span>\n        {errorProps ? cloneElement(children, { ...errorProps }) : children}\n      </span>\n    </Tooltip>\n  );\n};\n\nexport default TooltipWrapper;\n","//  This file is part of MinIO Console Server\n//  Copyright (c) 2022 MinIO, Inc.\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU Affero General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//  This program is distributed in the hope that it will be useful,\n//  but WITHOUT ANY WARRANTY; without even the implied warranty of\n//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//  GNU Affero General Public License for more details.\n//\n//  You should have received a copy of the GNU Affero General Public License\n//  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { calculateBytes } from \"../../../common/utils\";\nimport React from \"react\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport clsx from \"clsx\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    objectGeneralTitle: {\n      lineHeight: 1,\n      fontSize: 50,\n      color: \"#696969\",\n    },\n    generalUnit: {\n      color: \"#000\",\n      fontSize: 12,\n      fontWeight: \"bold\",\n    },\n    testUnitRes: {\n      fontSize: 60,\n      color: \"#081C42\",\n      fontWeight: \"bold\",\n      textAlign: \"right\",\n    },\n    metricValContainer: {\n      lineHeight: 1,\n      verticalAlign: \"bottom\",\n    },\n    objectsUnitRes: {\n      fontSize: 22,\n      marginTop: 6,\n      color: \"#696969\",\n      fontWeight: \"bold\",\n      textAlign: \"right\",\n    },\n    objectsUnit: {\n      color: \"#696969\",\n      fontSize: 16,\n      fontWeight: \"bold\",\n    },\n    iconTd: {\n      verticalAlign: \"bottom\",\n    },\n  });\n\nconst SpeedTestUnit = ({\n  classes,\n  title,\n  icon,\n  throughput,\n  objects,\n}: {\n  classes: any;\n  title: any;\n  icon: any;\n  throughput: string;\n  objects: number;\n}) => {\n  const avg = calculateBytes(throughput);\n\n  let total = \"0\";\n  let unit = \"\";\n\n  if (avg.total !== 0) {\n    total = avg.total.toString();\n    unit = `${avg.unit}/s`;\n  }\n\n  return (\n    <table>\n      <tr>\n        <td className={classes.objectGeneralTitle}>{title}</td>\n        <td className={classes.iconTd}>{icon}</td>\n      </tr>\n      <tr>\n        <td className={clsx(classes.metricValContainer, classes.testUnitRes)}>\n          {total}\n        </td>\n        <td className={clsx(classes.metricValContainer, classes.generalUnit)}>\n          {unit}\n        </td>\n      </tr>\n      <tr>\n        <td\n          className={clsx(classes.metricValContainer, classes.objectsUnitRes)}\n        >\n          {objects}\n        </td>\n        <td className={clsx(classes.metricValContainer, classes.objectsUnit)}>\n          {objects !== 0 && \"Objs/S\"}\n        </td>\n      </tr>\n    </table>\n  );\n};\nexport default withStyles(styles)(SpeedTestUnit);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useState } from \"react\";\nimport get from \"lodash/get\";\nimport { Theme } from \"@mui/material/styles\";\nimport { Button } from \"mds\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid } from \"@mui/material\";\nimport { IndvServerMetric, SpeedTestResponse, STServer } from \"./types\";\nimport { calculateBytes, prettyNumber } from \"../../../common/utils\";\nimport {\n  ComputerLineIcon,\n  DownloadIcon,\n  DownloadStatIcon,\n  JSONIcon,\n  StorageIcon,\n  UploadStatIcon,\n  VersionIcon,\n} from \"../../../icons\";\nimport CodeMirrorWrapper from \"../Common/FormComponents/CodeMirrorWrapper/CodeMirrorWrapper\";\nimport { Area, AreaChart, CartesianGrid, ResponsiveContainer } from \"recharts\";\nimport { cleanMetrics } from \"./utils\";\nimport SpeedTestUnit from \"./SpeedTestUnit\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    actionButtons: {\n      textAlign: \"right\",\n    },\n    descriptorLabel: {\n      fontWeight: \"bold\",\n      fontSize: 14,\n    },\n    resultsContainer: {\n      backgroundColor: \"#FBFAFA\",\n      borderTop: \"#F1F1F1 1px solid\",\n      marginTop: 30,\n      padding: 25,\n    },\n    resultsIcon: {\n      display: \"flex\",\n      alignItems: \"center\",\n      \"& svg\": {\n        fill: \"#07193E\",\n      },\n    },\n    detailedItem: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-start\",\n    },\n    detailedVersion: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-end\",\n    },\n    serversTable: {\n      width: \"100%\",\n      marginTop: 15,\n      \"& thead > tr > th\": {\n        textAlign: \"left\",\n        padding: 15,\n        fontSize: 14,\n        fontWeight: \"bold\",\n      },\n      \"& tbody > tr\": {\n        \"&:last-of-type\": {\n          \"& > td\": {\n            borderBottom: \"#E2E2E2 1px solid\",\n          },\n        },\n        \"& > td\": {\n          borderTop: \"#E2E2E2 1px solid\",\n          padding: 15,\n          fontSize: 14,\n          \"&:first-of-type\": {\n            borderLeft: \"#E2E2E2 1px solid\",\n          },\n          \"&:last-of-type\": {\n            borderRight: \"#E2E2E2 1px solid\",\n          },\n        },\n      },\n    },\n    serverIcon: {\n      width: 55,\n    },\n    serverValue: {\n      width: 140,\n    },\n    serverHost: {\n      maxWidth: 540,\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      whiteSpace: \"nowrap\",\n    },\n    tableOverflow: {\n      overflowX: \"auto\",\n      paddingBottom: 15,\n    },\n    objectGeneral: {\n      marginTop: 15,\n    },\n    download: {\n      \"& .min-icon\": {\n        width: 35,\n        height: 35,\n        color: \"rgb(113,200,150)\",\n      },\n    },\n    upload: {\n      \"& .min-icon\": {\n        width: 35,\n        height: 35,\n        color: \"rgb(66,127,172)\",\n      },\n    },\n  });\n\ninterface ISTResults {\n  classes: any;\n  results: SpeedTestResponse[];\n  start: boolean;\n}\n\nconst STResults = ({ classes, results, start }: ISTResults) => {\n  const [jsonView, setJsonView] = useState<boolean>(false);\n\n  const finalRes = results[results.length - 1] || [];\n\n  const getServers: STServer[] = get(finalRes, \"GETStats.servers\", []) || [];\n  const putServers: STServer[] = get(finalRes, \"PUTStats.servers\", []) || [];\n\n  const getThroughput = get(finalRes, \"GETStats.throughputPerSec\", 0);\n  const getObjects = get(finalRes, \"GETStats.objectsPerSec\", 0);\n\n  const putThroughput = get(finalRes, \"PUTStats.throughputPerSec\", 0);\n  const putObjects = get(finalRes, \"PUTStats.objectsPerSec\", 0);\n\n  let statJoin: IndvServerMetric[] = [];\n\n  getServers.forEach((item) => {\n    const hostName = item.endpoint;\n    const putMetric = putServers.find((item) => item.endpoint === hostName);\n\n    let itemJoin: IndvServerMetric = {\n      getUnit: \"-\",\n      getValue: \"N/A\",\n      host: item.endpoint,\n      putUnit: \"-\",\n      putValue: \"N/A\",\n    };\n\n    if (item.err && item.err !== \"\") {\n      itemJoin.getError = item.err;\n      itemJoin.getUnit = \"-\";\n      itemJoin.getValue = \"N/A\";\n    } else {\n      const niceGet = calculateBytes(item.throughputPerSec.toString());\n\n      itemJoin.getUnit = niceGet.unit;\n      itemJoin.getValue = niceGet.total.toString();\n    }\n\n    if (putMetric) {\n      if (putMetric.err && putMetric.err !== \"\") {\n        itemJoin.putError = putMetric.err;\n        itemJoin.putUnit = \"-\";\n        itemJoin.putValue = \"N/A\";\n      } else {\n        const nicePut = calculateBytes(putMetric.throughputPerSec.toString());\n\n        itemJoin.putUnit = nicePut.unit;\n        itemJoin.putValue = nicePut.total.toString();\n      }\n    }\n\n    statJoin.push(itemJoin);\n  });\n\n  const downloadResults = () => {\n    const date = new Date();\n    let element = document.createElement(\"a\");\n    element.setAttribute(\n      \"href\",\n      \"data:text/plain;charset=utf-8,\" + JSON.stringify(finalRes)\n    );\n    element.setAttribute(\n      \"download\",\n      `speedtest_results-${date.toISOString()}.log`\n    );\n\n    element.style.display = \"none\";\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n  };\n\n  const toggleJSONView = () => {\n    setJsonView(!jsonView);\n  };\n\n  const finalResJSON = finalRes ? JSON.stringify(finalRes, null, 4) : \"\";\n  const clnMetrics = cleanMetrics(results);\n\n  return (\n    <Fragment>\n      <Grid container className={classes.objectGeneral}>\n        <Grid item xs={12} md={6} lg={6}>\n          <Grid container className={classes.objectGeneral}>\n            <Grid item xs={12} md={6} lg={6}>\n              <SpeedTestUnit\n                icon={\n                  <div className={classes.download}>\n                    <DownloadStatIcon />\n                  </div>\n                }\n                title={\"GET\"}\n                throughput={getThroughput}\n                objects={getObjects}\n              />\n            </Grid>\n            <Grid item xs={12} md={6} lg={6}>\n              <SpeedTestUnit\n                icon={\n                  <div className={classes.upload}>\n                    <UploadStatIcon />\n                  </div>\n                }\n                title={\"PUT\"}\n                throughput={putThroughput}\n                objects={putObjects}\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={12} md={6} lg={6}>\n          <ResponsiveContainer width=\"99%\">\n            <AreaChart data={clnMetrics}>\n              <defs>\n                <linearGradient id=\"colorPut\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                  <stop offset=\"0%\" stopColor=\"#2781B0\" stopOpacity={0.9} />\n                  <stop offset=\"95%\" stopColor=\"#fff\" stopOpacity={0} />\n                </linearGradient>\n                <linearGradient id=\"colorGet\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                  <stop offset=\"0%\" stopColor=\"#4CCB92\" stopOpacity={0.9} />\n                  <stop offset=\"95%\" stopColor=\"#fff\" stopOpacity={0} />\n                </linearGradient>\n              </defs>\n\n              <CartesianGrid\n                strokeDasharray={\"0 0\"}\n                strokeWidth={1}\n                strokeOpacity={0.5}\n                stroke={\"#F1F1F1\"}\n                vertical={false}\n              />\n\n              <Area\n                type=\"monotone\"\n                dataKey={\"get\"}\n                stroke={\"#4CCB92\"}\n                fill={\"url(#colorGet)\"}\n                fillOpacity={0.3}\n                strokeWidth={2}\n                dot={false}\n              />\n              <Area\n                type=\"monotone\"\n                dataKey={\"put\"}\n                stroke={\"#2781B0\"}\n                fill={\"url(#colorPut)\"}\n                fillOpacity={0.3}\n                strokeWidth={2}\n                dot={false}\n              />\n            </AreaChart>\n          </ResponsiveContainer>\n        </Grid>\n      </Grid>\n      <br />\n      {clnMetrics.length > 1 && (\n        <Fragment>\n          <Grid container>\n            <Grid item xs={12} md={6} className={classes.descriptorLabel}>\n              {start ? (\n                <Fragment>Preliminar Results:</Fragment>\n              ) : (\n                <Fragment>\n                  {jsonView ? \"JSON Results:\" : \"Detailed Results:\"}\n                </Fragment>\n              )}\n            </Grid>\n            <Grid item xs={12} md={6} className={classes.actionButtons}>\n              {!start && (\n                <Fragment>\n                  <Button\n                    id={\"download-results\"}\n                    aria-label=\"Download Results\"\n                    onClick={downloadResults}\n                    icon={<DownloadIcon />}\n                  />\n                  &nbsp;\n                  <Button\n                    id={\"toggle-json\"}\n                    aria-label=\"Toogle JSON\"\n                    onClick={toggleJSONView}\n                    icon={<JSONIcon />}\n                  />\n                </Fragment>\n              )}\n            </Grid>\n          </Grid>\n          <Grid container className={classes.resultsContainer}>\n            {jsonView ? (\n              <Fragment>\n                <CodeMirrorWrapper\n                  value={finalResJSON}\n                  readOnly\n                  onBeforeChange={() => {}}\n                />\n              </Fragment>\n            ) : (\n              <Fragment>\n                <Grid\n                  item\n                  xs={12}\n                  sm={12}\n                  md={1}\n                  lg={1}\n                  className={classes.resultsIcon}\n                  alignItems={\"flex-end\"}\n                >\n                  <ComputerLineIcon width={45} />\n                </Grid>\n                <Grid\n                  item\n                  xs={12}\n                  sm={6}\n                  md={3}\n                  lg={2}\n                  className={classes.detailedItem}\n                >\n                  Nodes:&nbsp;<strong>{finalRes.servers}</strong>\n                </Grid>\n                <Grid\n                  item\n                  xs={12}\n                  sm={6}\n                  md={3}\n                  lg={2}\n                  className={classes.detailedItem}\n                >\n                  Drives:&nbsp;<strong>{finalRes.disks}</strong>\n                </Grid>\n                <Grid\n                  item\n                  xs={12}\n                  sm={6}\n                  md={3}\n                  lg={2}\n                  className={classes.detailedItem}\n                >\n                  Concurrent:&nbsp;<strong>{finalRes.concurrent}</strong>\n                </Grid>\n                <Grid\n                  item\n                  xs={12}\n                  sm={12}\n                  md={12}\n                  lg={5}\n                  className={classes.detailedVersion}\n                >\n                  <span className={classes.versionIcon}>\n                    <VersionIcon />\n                  </span>{\" \"}\n                  MinIO VERSION&nbsp;<strong>{finalRes.version}</strong>\n                </Grid>\n                <Grid item xs={12} className={classes.tableOverflow}>\n                  <table\n                    className={classes.serversTable}\n                    cellSpacing={0}\n                    cellPadding={0}\n                  >\n                    <thead>\n                      <tr>\n                        <th colSpan={2}>Servers</th>\n                        <th>GET</th>\n                        <th>PUT</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {statJoin.map((stats, index) => (\n                        <tr key={`storage-${index.toString()}`}>\n                          <td className={classes.serverIcon}>\n                            <StorageIcon />\n                          </td>\n                          <td className={classes.serverHost}>{stats.host}</td>\n                          {stats.getError && stats.getError !== \"\" ? (\n                            <td>{stats.getError}</td>\n                          ) : (\n                            <Fragment>\n                              <td className={classes.serverValue}>\n                                {prettyNumber(parseFloat(stats.getValue))}&nbsp;\n                                {stats.getUnit}/s.\n                              </td>\n                            </Fragment>\n                          )}\n                          {stats.putError && stats.putError !== \"\" ? (\n                            <td>{stats.putError}</td>\n                          ) : (\n                            <Fragment>\n                              <td className={classes.serverValue}>\n                                {prettyNumber(parseFloat(stats.putValue))}&nbsp;\n                                {stats.putUnit}/s.\n                              </td>\n                            </Fragment>\n                          )}\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </Grid>\n              </Fragment>\n            )}\n          </Grid>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(STResults);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { SpeedTestResponse } from \"./types\";\n\nexport const cleanMetrics = (results: SpeedTestResponse[]) => {\n  const cleanRes = results.filter(\n    (item) => item.version !== \"0\" && item.disks !== 0\n  );\n\n  const states = cleanRes.map((itemRes) => {\n    return {\n      get: itemRes.GETStats?.throughputPerSec || 0,\n      put: itemRes.PUTStats?.throughputPerSec || 0,\n    };\n  });\n\n  return [{ get: 0, put: 0 }, ...states];\n};\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { IMessageEvent, w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport { Grid } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AppState } from \"../../../store\";\nimport { Button } from \"mds\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport moment from \"moment/moment\";\nimport PageHeader from \"../Common/PageHeader/PageHeader\";\nimport {\n  actionsTray,\n  advancedFilterToggleStyles,\n  containerForHeader,\n  formFieldStyles,\n  searchField,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport { wsProtocol } from \"../../../utils/wsUtils\";\nimport { SpeedTestResponse } from \"./types\";\nimport { SpeedtestIcon } from \"../../../icons\";\nimport {\n  CONSOLE_UI_RESOURCE,\n  IAM_SCOPES,\n} from \"../../../common/SecureComponent/permissions\";\nimport STResults from \"./STResults\";\nimport InputBoxWrapper from \"../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport ProgressBarWrapper from \"../Common/ProgressBarWrapper/ProgressBarWrapper\";\nimport InputUnitMenu from \"../Common/FormComponents/InputUnitMenu/InputUnitMenu\";\nimport PageLayout from \"../Common/Layout/PageLayout\";\nimport { SecureComponent } from \"../../../common/SecureComponent\";\nimport DistributedOnly from \"../Common/DistributedOnly/DistributedOnly\";\nimport HelpBox from \"../../../common/HelpBox\";\nimport WarnIcon from \"../../../icons/WarnIcon\";\nimport Loader from \"../Common/Loader/Loader\";\nimport { selDistSet } from \"../../../systemSlice\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport RegisterCluster from \"../Support/RegisterCluster\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    advancedContent: {\n      backgroundColor: \"#FBFAFA\",\n      maxHeight: 0,\n      transitionDuration: \"0.3s\",\n      overflow: \"hidden\",\n      padding: \"0 15px\",\n      marginTop: 15,\n      justifyContent: \"space-between\",\n      \"&.open\": {\n        maxHeight: 400,\n        paddingBottom: 15,\n      },\n    },\n\n    stepProgressText: {\n      fontSize: 13,\n      marginBottom: 8,\n    },\n    ...advancedFilterToggleStyles,\n    ...actionsTray,\n    ...searchField,\n    ...formFieldStyles,\n    ...containerForHeader(theme.spacing(4)),\n  })\n);\n\nconst Speedtest = () => {\n  const distributedSetup = useSelector(selDistSet);\n  const licenseInfo = useSelector(\n    (state: AppState) => state?.system?.licenseInfo\n  );\n  const navigate = useNavigate();\n\n  const { plan = \"\" } = licenseInfo || {};\n  const registeredCluster = plan === \"STANDARD\" || plan === \"ENTERPRISE\";\n\n  const classes = useStyles();\n  const [start, setStart] = useState<boolean>(false);\n\n  const [currStatus, setCurrStatus] = useState<SpeedTestResponse[] | null>(\n    null\n  );\n\n  const [size, setSize] = useState<string>(\"64\");\n  const [sizeUnit, setSizeUnit] = useState<string>(\"MB\");\n  const [duration, setDuration] = useState<string>(\"10\");\n\n  const [topDate, setTopDate] = useState<number>(0);\n  const [currentValue, setCurrentValue] = useState<number>(0);\n  const [totalSeconds, setTotalSeconds] = useState<number>(0);\n  const [speedometerValue, setSpeedometerValue] = useState<number>(0);\n\n  useEffect(() => {\n    // begin watch if bucketName in bucketList and start pressed\n    if (start) {\n      const url = new URL(window.location.toString());\n      const isDev = process.env.NODE_ENV === \"development\";\n      const port = isDev ? \"9090\" : url.port;\n\n      // check if we are using base path, if not this always is `/`\n      const baseLocation = new URL(document.baseURI);\n      const baseUrl = baseLocation.pathname;\n\n      const wsProt = wsProtocol(url.protocol);\n      const c = new W3CWebSocket(\n        `${wsProt}://${url.hostname}:${port}${baseUrl}ws/speedtest?&size=${size}${sizeUnit}&duration=${duration}s`\n      );\n\n      const baseDate = moment();\n\n      const currentTime = baseDate.unix() / 1000;\n\n      const incrementDate =\n        baseDate\n          .add(parseInt(\"10\") * 2, \"s\" as moment.unitOfTime.DurationConstructor)\n          .unix() / 1000;\n\n      const totalSeconds = (incrementDate - currentTime) / 1000;\n\n      setTopDate(incrementDate);\n      setCurrentValue(currentTime);\n      setTotalSeconds(totalSeconds);\n\n      let interval: any | null = null;\n      if (c !== null) {\n        c.onopen = () => {\n          console.log(\"WebSocket Client Connected\");\n          c.send(\"ok\");\n          interval = setInterval(() => {\n            c.send(\"ok\");\n          }, 10 * 1000);\n        };\n        c.onmessage = (message: IMessageEvent) => {\n          const data: SpeedTestResponse = JSON.parse(message.data.toString());\n\n          setCurrStatus((prevStatus) => {\n            let prSt: SpeedTestResponse[] = [];\n            if (prevStatus) {\n              prSt = [...prevStatus];\n            }\n\n            const insertData = data.servers !== 0 ? [data] : [];\n            return [...prSt, ...insertData];\n          });\n\n          const currTime = moment().unix() / 1000;\n          setCurrentValue(currTime);\n        };\n        c.onclose = () => {\n          clearInterval(interval);\n          console.log(\"connection closed by server\");\n          // reset start status\n          setStart(false);\n        };\n        return () => {\n          // close websocket on useEffect cleanup\n          c.close(1000);\n          clearInterval(interval);\n          console.log(\"closing websockets\");\n        };\n      }\n    } else {\n      // reset start status\n      setStart(false);\n    }\n  }, [size, sizeUnit, start, duration]);\n\n  useEffect(() => {\n    const actualSeconds = (topDate - currentValue) / 1000;\n\n    let percToDisplay = 100 - (actualSeconds * 100) / totalSeconds;\n\n    if (percToDisplay > 100) {\n      percToDisplay = 100;\n    }\n\n    setSpeedometerValue(percToDisplay);\n  }, [start, currentValue, topDate, totalSeconds]);\n\n  const stoppedLabel = currStatus !== null ? \"Retest\" : \"Start\";\n\n  const buttonLabel = start ? \"Start\" : stoppedLabel;\n\n  const startSpeedtestButton = () => {\n    if (plan !== \"STANDARD\" && plan !== \"ENTERPRISE\") {\n      navigate(\"/support/register\");\n      return;\n    }\n\n    setCurrStatus(null);\n    setStart(true);\n  };\n\n  return (\n    <Fragment>\n      <PageHeader label=\"Performance\" />\n      <PageLayout>\n        {!registeredCluster && <RegisterCluster compactMode />}\n        {!distributedSetup ? (\n          <DistributedOnly\n            iconComponent={<SpeedtestIcon />}\n            entity={\"Speedtest\"}\n          />\n        ) : (\n          <SecureComponent\n            scopes={[IAM_SCOPES.ADMIN_HEAL]}\n            resource={CONSOLE_UI_RESOURCE}\n          >\n            <Grid item xs={12} className={classes.boxy}>\n              <Grid container>\n                <Grid item md={4} sm={12}>\n                  <div className={classes.stepProgressText}>\n                    {start ? (\n                      <Fragment>\n                        Speedtest in progress...\n                        <Loader style={{ width: 15, height: 15 }} />\n                      </Fragment>\n                    ) : (\n                      <Fragment>\n                        {currStatus && !start ? (\n                          <b>Speed Test results:</b>\n                        ) : (\n                          <b>Performance test</b>\n                        )}\n                      </Fragment>\n                    )}\n                  </div>\n                  <div>\n                    <ProgressBarWrapper\n                      value={speedometerValue}\n                      ready={currStatus !== null && !start}\n                      indeterminate={start}\n                      size={\"small\"}\n                    />\n                  </div>\n                </Grid>\n                <Grid item md sm={12}>\n                  <div style={{ marginLeft: 10, width: 300 }}>\n                    <InputBoxWrapper\n                      id={\"size\"}\n                      name={\"size\"}\n                      label={\"Object Size\"}\n                      onChange={(e) => {\n                        setSize(e.target.value);\n                      }}\n                      noLabelMinWidth={true}\n                      value={size}\n                      disabled={start}\n                      overlayObject={\n                        <InputUnitMenu\n                          id={\"size-unit\"}\n                          onUnitChange={setSizeUnit}\n                          unitSelected={sizeUnit}\n                          unitsList={[\n                            { label: \"KiB\", value: \"KiB\" },\n                            { label: \"MiB\", value: \"MiB\" },\n                            { label: \"GiB\", value: \"GiB\" },\n                          ]}\n                          disabled={start}\n                        />\n                      }\n                    />\n                  </div>\n                </Grid>\n                <Grid item md sm={12}>\n                  <div style={{ marginLeft: 10, width: 300 }}>\n                    <InputBoxWrapper\n                      id={\"duration\"}\n                      name={\"duration\"}\n                      label={\"Duration\"}\n                      onChange={(e) => {\n                        if (e.target.validity.valid) {\n                          setDuration(e.target.value);\n                        }\n                      }}\n                      noLabelMinWidth={true}\n                      value={duration}\n                      disabled={start}\n                      overlayObject={\n                        <InputUnitMenu\n                          id={\"size-unit\"}\n                          onUnitChange={() => {}}\n                          unitSelected={\"s\"}\n                          unitsList={[{ label: \"s\", value: \"s\" }]}\n                          disabled={start}\n                        />\n                      }\n                      pattern={\"[0-9]*\"}\n                    />\n                  </div>\n                </Grid>\n                <Grid item md={1} sm={12} textAlign={\"right\"}>\n                  <Button\n                    onClick={startSpeedtestButton}\n                    color=\"primary\"\n                    type=\"button\"\n                    id={\"start-speed-test\"}\n                    variant={\n                      registeredCluster && currStatus !== null && !start\n                        ? \"callAction\"\n                        : \"regular\"\n                    }\n                    className={`${classes.buttonBackground} ${classes.speedStart}`}\n                    disabled={\n                      duration.trim() === \"\" || size.trim() === \"\" || start\n                    }\n                    label={buttonLabel}\n                  />\n                </Grid>\n              </Grid>\n              <Grid container className={classes.multiModule}>\n                <Grid item xs={12}>\n                  <Fragment>\n                    <Grid item xs={12}>\n                      {currStatus !== null && (\n                        <Fragment>\n                          <STResults results={currStatus} start={start} />\n                        </Fragment>\n                      )}\n                    </Grid>\n                  </Fragment>\n                </Grid>\n              </Grid>\n            </Grid>\n\n            {!start && !currStatus && registeredCluster && (\n              <Fragment>\n                <br />\n                <HelpBox\n                  title={\n                    \"During the speed test all your production traffic will be temporarily suspended.\"\n                  }\n                  iconComponent={<WarnIcon />}\n                  help={<Fragment />}\n                />\n              </Fragment>\n            )}\n          </SecureComponent>\n        )}\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default Speedtest;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Box, Button } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport WarnIcon from \"../../../icons/WarnIcon\";\nimport HelpBox from \"../../../common/HelpBox\";\n\ninterface IRegisterCluster {\n  compactMode?: boolean;\n}\n\nconst RegisterCluster = ({ compactMode = false }: IRegisterCluster) => {\n  const navigate = useNavigate();\n\n  const redirectButton = (\n    <Button\n      type=\"submit\"\n      variant=\"contained\"\n      color=\"primary\"\n      onClick={() => navigate(\"/support/register\")}\n    >\n      Register your Cluster\n    </Button>\n  );\n\n  const registerMessage =\n    \"Use your MinIO Subscription Network login credentials to register this cluster.\";\n\n  if (compactMode) {\n    return (\n      <Fragment>\n        <HelpBox\n          title={\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                flexGrow: 1,\n              }}\n            >\n              <span>{registerMessage}</span> {redirectButton}\n            </div>\n          }\n          iconComponent={<WarnIcon />}\n          help={<Fragment />}\n        />\n        <br />\n      </Fragment>\n    );\n  }\n\n  return (\n    <Box\n      sx={{\n        padding: \"25px\",\n        border: \"1px solid #eaeaea\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        flexFlow: {\n          sm: \"row\",\n          xs: \"column\",\n        },\n        marginBottom: \"15px\",\n      }}\n    >\n      <Grid container>\n        <Grid item xs={12}>\n          <Box\n            sx={{\n              marginRight: \"8px\",\n              fontSize: \"16px\",\n              fontWeight: 600,\n              display: \"flex\",\n              alignItems: \"center\",\n\n              \"& .min-icon\": {\n                width: \"83px\",\n                height: \"14px\",\n                marginLeft: \"5px\",\n                marginRight: \"5px\",\n              },\n            }}\n          >\n            Register your cluster\n          </Box>\n        </Grid>\n        <Grid item xs={12}>\n          <Box\n            sx={{\n              display: \"flex\",\n              flexFlow: {\n                xs: \"column\",\n                md: \"row\",\n              },\n            }}\n          >\n            <Box\n              sx={{\n                display: \"flex\",\n                flexFlow: \"column\",\n                flex: \"2\",\n              }}\n            >\n              <Box\n                sx={{\n                  fontSize: \"16px\",\n                  display: \"flex\",\n                  flexFlow: \"column\",\n                  marginTop: \"15px\",\n                  marginBottom: \"15px\",\n                }}\n              >\n                {registerMessage}\n              </Box>\n              <Box\n                sx={{\n                  flex: \"1\",\n                }}\n              >\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"flex-end\",\n                  }}\n                >\n                  {redirectButton}\n                </Box>\n              </Box>\n            </Box>\n          </Box>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default RegisterCluster;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n// Close codes for websockets defined in RFC 6455\nexport const WSCloseNormalClosure = 1000;\nexport const WSCloseCloseGoingAway = 1001;\nexport const WSCloseAbnormalClosure = 1006;\nexport const WSClosePolicyViolation = 1008;\nexport const WSCloseInternalServerErr = 1011;\n\nexport const wsProtocol = (protocol: string): string => {\n  let wsProtocol = \"ws\";\n  if (protocol === \"https:\") {\n    wsProtocol = \"wss\";\n  }\n  return wsProtocol;\n};\n","var naiveFallback = function () {\n\tif (typeof self === \"object\" && self) return self;\n\tif (typeof window === \"object\" && window) return window;\n\tthrow new Error(\"Unable to resolve global `this`\");\n};\n\nmodule.exports = (function () {\n\tif (this) return this;\n\n\t// Unexpected strict mode (may happen if e.g. bundled into ESM module)\n\n\t// Fallback to standard globalThis if available\n\tif (typeof globalThis === \"object\" && globalThis) return globalThis;\n\n\t// Thanks @mathiasbynens -> https://mathiasbynens.be/notes/globalthis\n\t// In all ES5+ engines global object inherits from Object.prototype\n\t// (if you approached one that doesn't please report)\n\ttry {\n\t\tObject.defineProperty(Object.prototype, \"__global__\", {\n\t\t\tget: function () { return this; },\n\t\t\tconfigurable: true\n\t\t});\n\t} catch (error) {\n\t\t// Unfortunate case of updates to Object.prototype being restricted\n\t\t// via preventExtensions, seal or freeze\n\t\treturn naiveFallback();\n\t}\n\ttry {\n\t\t// Safari case (window.__global__ works, but __global__ does not)\n\t\tif (!__global__) return naiveFallback();\n\t\treturn __global__;\n\t} finally {\n\t\tdelete Object.prototype.__global__;\n\t}\n})();\n","var _globalThis;\nif (typeof globalThis === 'object') {\n\t_globalThis = globalThis;\n} else {\n\ttry {\n\t\t_globalThis = require('es5-ext/global');\n\t} catch (error) {\n\t} finally {\n\t\tif (!_globalThis && typeof window !== 'undefined') { _globalThis = window; }\n\t\tif (!_globalThis) { throw new Error('Could not determine global this'); }\n\t}\n}\n\nvar NativeWebSocket = _globalThis.WebSocket || _globalThis.MozWebSocket;\nvar websocket_version = require('./version');\n\n\n/**\n * Expose a W3C WebSocket class with just one or two arguments.\n */\nfunction W3CWebSocket(uri, protocols) {\n\tvar native_instance;\n\n\tif (protocols) {\n\t\tnative_instance = new NativeWebSocket(uri, protocols);\n\t}\n\telse {\n\t\tnative_instance = new NativeWebSocket(uri);\n\t}\n\n\t/**\n\t * 'native_instance' is an instance of nativeWebSocket (the browser's WebSocket\n\t * class). Since it is an Object it will be returned as it is when creating an\n\t * instance of W3CWebSocket via 'new W3CWebSocket()'.\n\t *\n\t * ECMAScript 5: http://bclary.com/2004/11/07/#a-13.2.2\n\t */\n\treturn native_instance;\n}\nif (NativeWebSocket) {\n\t['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'].forEach(function(prop) {\n\t\tObject.defineProperty(W3CWebSocket, prop, {\n\t\t\tget: function() { return NativeWebSocket[prop]; }\n\t\t});\n\t});\n}\n\n/**\n * Module exports.\n */\nmodule.exports = {\n    'w3cwebsocket' : NativeWebSocket ? W3CWebSocket : null,\n    'version'      : websocket_version\n};\n","module.exports = require('../package.json').version;\n"],"names":["withStyles","theme","createStyles","root","border","borderRadius","backgroundColor","paddingLeft","paddingTop","paddingBottom","paddingRight","leftItems","fontSize","fontWeight","marginBottom","display","alignItems","marginRight","height","width","helpText","classes","iconComponent","title","help","className","container","item","xs","entity","sx","flexFlow","md","color","colors","link","textDecoration","href","target","rel","fieldBasic","value","label","tooltip","mode","onBeforeChange","readOnly","editorHeight","inputLabel","tooltipContainer","placement","style","maxHeight","overflow","language","onChange","evn","id","padding","fontFamily","minHeight","background","borderTop","justifyContent","marginLeft","text","type","icon","variant","BorderLinearProgress","styled","LinearProgress","linearProgressClasses","SmallBorderLinearProgress","LinearProgressWithLabel","props","size","error","cancelled","mr","minWidth","Fragment","Math","round","ready","indeterminate","withLabel","propsComponent","children","errorProps","cloneElement","objectGeneralTitle","lineHeight","generalUnit","testUnitRes","textAlign","metricValContainer","verticalAlign","objectsUnitRes","marginTop","objectsUnit","iconTd","throughput","objects","avg","calculateBytes","total","unit","toString","clsx","actionButtons","descriptorLabel","resultsContainer","resultsIcon","fill","detailedItem","detailedVersion","serversTable","borderBottom","borderLeft","borderRight","serverIcon","serverValue","serverHost","maxWidth","textOverflow","whiteSpace","tableOverflow","overflowX","objectGeneral","download","upload","results","start","useState","jsonView","setJsonView","finalRes","length","getServers","get","putServers","getThroughput","getObjects","putThroughput","putObjects","statJoin","forEach","hostName","endpoint","putMetric","find","itemJoin","getUnit","getValue","host","putUnit","putValue","err","getError","niceGet","throughputPerSec","putError","nicePut","push","finalResJSON","JSON","stringify","clnMetrics","states","filter","version","disks","map","itemRes","GETStats","put","PUTStats","cleanMetrics","Grid","lg","ResponsiveContainer","AreaChart","data","x1","y1","x2","y2","offset","stopColor","stopOpacity","CartesianGrid","strokeDasharray","strokeWidth","strokeOpacity","stroke","vertical","Area","dataKey","fillOpacity","dot","onClick","date","Date","element","document","createElement","setAttribute","toISOString","body","appendChild","click","removeChild","CodeMirrorWrapper","sm","servers","concurrent","versionIcon","cellSpacing","cellPadding","colSpan","stats","index","prettyNumber","parseFloat","useStyles","makeStyles","advancedContent","transitionDuration","stepProgressText","advancedFilterToggleStyles","actionsTray","searchField","formFieldStyles","containerForHeader","spacing","distributedSetup","useSelector","selDistSet","licenseInfo","state","system","navigate","useNavigate","plan","registeredCluster","setStart","currStatus","setCurrStatus","setSize","sizeUnit","setSizeUnit","duration","setDuration","topDate","setTopDate","currentValue","setCurrentValue","totalSeconds","setTotalSeconds","speedometerValue","setSpeedometerValue","useEffect","url","URL","window","location","port","baseUrl","baseURI","pathname","wsProt","wsProtocol","protocol","c","W3CWebSocket","hostname","baseDate","moment","currentTime","unix","incrementDate","add","parseInt","interval","onopen","console","log","send","setInterval","onmessage","message","parse","prevStatus","prSt","insertData","currTime","onclose","clearInterval","close","percToDisplay","buttonLabel","PageHeader","PageLayout","RegisterCluster","compactMode","SecureComponent","scopes","IAM_SCOPES","resource","CONSOLE_UI_RESOURCE","boxy","Loader","ProgressBarWrapper","InputBoxWrapper","name","e","noLabelMinWidth","disabled","overlayObject","InputUnitMenu","onUnitChange","unitSelected","unitsList","validity","valid","pattern","buttonBackground","speedStart","trim","multiModule","HelpBox","WarnIcon","DistributedOnly","redirectButton","registerMessage","flexGrow","flex","WSCloseAbnormalClosure","WSClosePolicyViolation","WSCloseInternalServerErr","naiveFallback","self","Error","module","exports","this","globalThis","Object","defineProperty","prototype","configurable","__global__","_globalThis","require","NativeWebSocket","WebSocket","MozWebSocket","websocket_version","uri","protocols","prop"],"sourceRoot":""}