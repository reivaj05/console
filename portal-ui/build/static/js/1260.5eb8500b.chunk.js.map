{"version":3,"file":"static/js/1260.5eb8500b.chunk.js","mappings":"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","sources":["common/HelpBox.tsx","icons/CertificateIcon.tsx","screens/Console/Common/CredentialsPrompt/CredentialItem.tsx","screens/Console/Common/CredentialsPrompt/CredentialsPrompt.tsx","screens/Console/Common/FormComponents/FileSelector/FileSelector.tsx","screens/Console/Common/FormComponents/FileSelector/utils.ts","screens/Console/Common/ModalWrapper/ModalWrapper.tsx","screens/Console/Tenants/AddTenant/Steps/Configure.tsx","screens/Console/Tenants/AddTenant/Steps/IdentityProvider/IDPActiveDirectory.tsx","screens/Console/Tenants/AddTenant/Steps/IdentityProvider/IDPOpenID.tsx","screens/Console/Tenants/AddTenant/Steps/IdentityProvider/IDPBuiltIn.tsx","screens/Console/Tenants/AddTenant/Steps/IdentityProvider.tsx","screens/Console/Tenants/HelpBox/TLSHelpBox.tsx","screens/Console/Tenants/AddTenant/Steps/Security.tsx","screens/Console/Common/SectionH1.tsx","screens/Console/Tenants/AddTenant/Steps/Encryption/VaultKMSAdd.tsx","screens/Console/Tenants/AddTenant/Steps/Encryption/AzureKMSAdd.tsx","screens/Console/Tenants/AddTenant/Steps/Encryption/GCPKMSAdd.tsx","screens/Console/Tenants/AddTenant/Steps/Encryption/GemaltoKMSAdd.tsx","screens/Console/Tenants/AddTenant/Steps/Encryption/AWSKMSAdd.tsx","screens/Console/Tenants/AddTenant/Steps/Encryption.tsx","screens/Console/Tenants/AddTenant/Steps/Affinity.tsx","screens/Console/Tenants/AddTenant/Steps/Images.tsx","screens/Console/Tenants/AddTenant/Steps/SizePreview.tsx","screens/Console/Tenants/AddTenant/Steps/helpers/AddNamespaceModal.tsx","screens/Console/Tenants/AddTenant/Steps/TenantResources/NamespaceSelector.tsx","screens/Console/Tenants/AddTenant/Steps/TenantResources/NameTenantMain.tsx","screens/Console/Tenants/AddTenant/Steps/TenantResources/TenantResources.tsx","screens/Console/Tenants/AddTenant/Steps/ConfigLogSearch.tsx","screens/Console/Tenants/AddTenant/Steps/ConfigPrometheus.tsx","screens/Console/Tenants/AddTenant/common.ts","screens/Console/Tenants/AddTenant/CreateTenantButton.tsx","screens/Console/Tenants/AddTenant/NewTenantCredentials.tsx","screens/Console/Tenants/AddTenant/AddTenant.tsx","screens/shared/ErrorBlock.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      border: \"1px solid #E2E2E2\",\n      borderRadius: 2,\n      backgroundColor: \"#FBFAFA\",\n      paddingLeft: 25,\n      paddingTop: 31,\n      paddingBottom: 21,\n      paddingRight: 30,\n    },\n    leftItems: {\n      fontSize: 16,\n      fontWeight: \"bold\",\n      marginBottom: 15,\n      display: \"flex\",\n      alignItems: \"center\",\n      \"& .min-icon\": {\n        marginRight: 15,\n        height: 28,\n        width: 38,\n      },\n    },\n    helpText: {\n      fontSize: 16,\n      paddingLeft: 5,\n    },\n  });\n\ninterface IHelpBox {\n  classes: any;\n  iconComponent: any;\n  title: string;\n  help: any;\n}\n\nconst HelpBox = ({ classes, iconComponent, title, help }: IHelpBox) => {\n  return (\n    <div className={classes.root}>\n      <Grid container>\n        <Grid item xs={12} className={classes.leftItems}>\n          {iconComponent}\n          {title}\n        </Grid>\n        <Grid item xs={12} className={classes.helpText}>\n          {help}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(HelpBox);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport * as React from \"react\";\nimport { SVGProps } from \"react\";\n\nconst CertificateIcon = (props: SVGProps<SVGSVGElement>) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className={`min-icon`}\n      fill={\"currentcolor\"}\n      viewBox=\"0 0 256 256\"\n      {...props}\n    >\n      <defs>\n        <clipPath id=\"certificate_svg__a\">\n          <path\n            data-name=\"Rect\\xE1ngulo 2156\"\n            fill=\"#07193e\"\n            d=\"M0 0h256v222.048H0z\"\n          />\n        </clipPath>\n      </defs>\n      <g\n        data-name=\"Grupo 4763\"\n        transform=\"translate(0 17)\"\n        clipPath=\"url(#certificate_svg__a)\"\n        fill=\"#07193e\"\n      >\n        <path\n          data-name=\"Trazado 8152\"\n          d=\"M240-.002H16a16 16 0 0 0-16 16v160a16 16 0 0 0 16 16h120l4.64-5.6 7.44-9.12A66.72 66.72 0 0 1 256 98.958v-82.96a16 16 0 0 0-16-16m-130.96 149.7H47.3a7.3 7.3 0 1 1 0-14.592h61.74a7.3 7.3 0 1 1 0 14.592m0-56H47.3a7.3 7.3 0 1 1 0-14.592h61.74a7.3 7.3 0 0 1 0 14.592m66.96-39.3a6.419 6.419 0 0 1-6.4 6.4H46.4a6.419 6.419 0 0 1-6.4-6.4v-1.792a6.419 6.419 0 0 1 6.4-6.4h123.2a6.419 6.419 0 0 1 6.4 6.4Z\"\n        />\n        <path\n          data-name=\"Trazado 8153\"\n          d=\"M256 137.486a50.96 50.96 0 1 0-86.16 36.72l-15.52 18.96 7.2 28.88 29.28-35.68a50.018 50.018 0 0 0 28.4 0l29.28 35.68 7.2-28.88-15.52-18.96a50.75 50.75 0 0 0 15.84-36.72m-50.928 29.688a29.688 29.688 0 0 1-.072-59.376h.072a29.688 29.688 0 0 1 0 59.376\"\n        />\n      </g>\n      <path data-name=\"Rect\\xE1ngulo 2157\" fill=\"none\" d=\"M0 0h256v256H0z\" />\n    </svg>\n  );\n};\nexport default CertificateIcon;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { InputAdornment, OutlinedInput } from \"@mui/material\";\nimport BoxIconButton from \"../BoxIconButton/BoxIconButton\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport { CopyIcon } from \"../../../../icons\";\nimport { fieldBasic } from \"../FormComponents/common/styleLibrary\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    container: {\n      display: \"flex\",\n      flexFlow: \"column\",\n      padding: \"20px 0 8px 0\",\n    },\n    inputWithCopy: {\n      \"& .MuiInputBase-root \": {\n        width: \"100%\",\n        background: \"#FBFAFA\",\n        \"& .MuiInputBase-input\": {\n          height: \".8rem\",\n        },\n        \"& .MuiInputAdornment-positionEnd\": {\n          marginRight: \".5rem\",\n          \"& .MuiButtonBase-root\": {\n            height: \"2rem\",\n          },\n        },\n      },\n      \"& .MuiButtonBase-root .min-icon\": {\n        width: \".8rem\",\n        height: \".8rem\",\n      },\n    },\n    inputLabel: {\n      ...fieldBasic.inputLabel,\n      fontSize: \".8rem\",\n    },\n  });\n\nconst CredentialItem = ({\n  label = \"\",\n  value = \"\",\n  classes = {},\n}: {\n  label: string;\n  value: string;\n  classes: any;\n}) => {\n  return (\n    <div className={classes.container}>\n      <div className={classes.inputLabel}>{label}:</div>\n      <div className={classes.inputWithCopy}>\n        <OutlinedInput\n          value={value}\n          readOnly\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <CopyToClipboard text={value}>\n                <BoxIconButton\n                  aria-label=\"copy\"\n                  tooltip={\"Copy\"}\n                  onClick={() => {}}\n                  onMouseDown={() => {}}\n                  edge=\"end\"\n                >\n                  <CopyIcon />\n                </BoxIconButton>\n              </CopyToClipboard>\n            </InputAdornment>\n          }\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(CredentialItem);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport get from \"lodash/get\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { NewServiceAccount } from \"./types\";\nimport ModalWrapper from \"../ModalWrapper/ModalWrapper\";\nimport Grid from \"@mui/material/Grid\";\nimport CredentialItem from \"./CredentialItem\";\nimport WarnIcon from \"../../../../icons/WarnIcon\";\nimport { DownloadIcon, ServiceAccountCredentialsIcon } from \"../../../../icons\";\n\nimport RBIconButton from \"../../Buckets/BucketDetails/SummaryItems/RBIconButton\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    warningBlock: {\n      color: \"red\",\n      fontSize: \".85rem\",\n      margin: \".5rem 0 .5rem 0\",\n      display: \"flex\",\n      alignItems: \"center\",\n      \"& svg \": {\n        marginRight: \".3rem\",\n        height: 16,\n        width: 16,\n      },\n    },\n    credentialTitle: {\n      padding: \".8rem 0 0 0\",\n      fontWeight: 600,\n      fontSize: \".9rem\",\n    },\n    buttonContainer: {\n      textAlign: \"right\",\n      marginTop: \"1rem\",\n    },\n    credentialsPanel: {\n      overflowY: \"auto\",\n      maxHeight: 350,\n    },\n    promptTitle: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    buttonSpacer: {\n      marginRight: \".9rem\",\n    },\n  });\n\ninterface ICredentialsPromptProps {\n  classes: any;\n  newServiceAccount: NewServiceAccount | null;\n  open: boolean;\n  entity: string;\n  closeModal: () => void;\n}\n\nconst download = (filename: string, text: string) => {\n  let element = document.createElement(\"a\");\n  element.setAttribute(\"href\", \"data:text/plain;charset=utf-8,\" + text);\n  element.setAttribute(\"download\", filename);\n\n  element.style.display = \"none\";\n  document.body.appendChild(element);\n\n  element.click();\n  document.body.removeChild(element);\n};\n\nconst CredentialsPrompt = ({\n  classes,\n  newServiceAccount,\n  open,\n  closeModal,\n  entity,\n}: ICredentialsPromptProps) => {\n  if (!newServiceAccount) {\n    return null;\n  }\n  const consoleCreds = get(newServiceAccount, \"console\", null);\n  const idp = get(newServiceAccount, \"idp\", false);\n\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={() => {\n        closeModal();\n      }}\n      title={\n        <div className={classes.promptTitle}>\n          <div>New {entity} Created</div>\n        </div>\n      }\n      titleIcon={<ServiceAccountCredentialsIcon />}\n    >\n      <Grid container>\n        <Grid item xs={12} className={classes.formScrollable}>\n          A new {entity} has been created with the following details:\n          {!idp && consoleCreds && (\n            <React.Fragment>\n              <Grid item xs={12} className={classes.credentialsPanel}>\n                <div className={classes.credentialTitle}>\n                  Console Credentials\n                </div>\n                {Array.isArray(consoleCreds) &&\n                  consoleCreds.map((credentialsPair, index) => {\n                    return (\n                      <>\n                        <CredentialItem\n                          label=\"Access Key\"\n                          value={credentialsPair.accessKey}\n                        />\n                        <CredentialItem\n                          label=\"Secret Key\"\n                          value={credentialsPair.secretKey}\n                        />\n                      </>\n                    );\n                  })}\n                {!Array.isArray(consoleCreds) && (\n                  <>\n                    <CredentialItem\n                      label=\"Access Key\"\n                      value={consoleCreds.accessKey}\n                    />\n                    <CredentialItem\n                      label=\"Secret Key\"\n                      value={consoleCreds.secretKey}\n                    />\n                  </>\n                )}\n              </Grid>\n            </React.Fragment>\n          )}\n          {(consoleCreds === null || consoleCreds === undefined) && (\n            <>\n              <CredentialItem\n                label=\"Access Key\"\n                value={newServiceAccount.accessKey || \"\"}\n              />\n              <CredentialItem\n                label=\"Secret Key\"\n                value={newServiceAccount.secretKey || \"\"}\n              />\n            </>\n          )}\n          {idp ? (\n            <div className={classes.warningBlock}>\n              Please Login via the configured external identity provider.\n            </div>\n          ) : (\n            <div className={classes.warningBlock}>\n              <WarnIcon />\n              <span>\n                Write these down, as this is the only time the secret will be\n                displayed.\n              </span>\n            </div>\n          )}\n        </Grid>\n        <Grid item xs={12} className={classes.buttonContainer}>\n          {!idp && (\n            <>\n              <RBIconButton\n                id={\"download-button\"}\n                tooltip={\n                  \"Download credentials in a JSON file formatted for import using mc alias import. This will only include the default login credentials.\"\n                }\n                text={\"Download for import\"}\n                className={classes.buttonSpacer}\n                onClick={() => {\n                  let consoleExtras = {};\n\n                  if (consoleCreds) {\n                    if (!Array.isArray(consoleCreds)) {\n                      consoleExtras = {\n                        url: consoleCreds.url,\n                        accessKey: consoleCreds.accessKey,\n                        secretKey: consoleCreds.secretKey,\n                        api: \"s3v4\",\n                        path: \"auto\",\n                      };\n                    } else {\n                      const cCreds = consoleCreds.map((itemMap) => {\n                        return {\n                          url: itemMap.url,\n                          accessKey: itemMap.accessKey,\n                          secretKey: itemMap.secretKey,\n                          api: \"s3v4\",\n                          path: \"auto\",\n                        };\n                      });\n                      consoleExtras = cCreds[0];\n                    }\n                  } else {\n                    consoleExtras = {\n                      url: newServiceAccount.url,\n                      accessKey: newServiceAccount.accessKey,\n                      secretKey: newServiceAccount.secretKey,\n                      api: \"s3v4\",\n                      path: \"auto\",\n                    };\n                  }\n\n                  download(\n                    \"credentials.json\",\n                    JSON.stringify({\n                      ...consoleExtras,\n                    })\n                  );\n                }}\n                icon={<DownloadIcon />}\n                variant=\"contained\"\n                color=\"primary\"\n              />\n\n              {Array.isArray(consoleCreds) && consoleCreds.length > 1 && (\n                <RBIconButton\n                  id={\"download-all-button\"}\n                  tooltip={\n                    \"Download all access credentials to a JSON file. NOTE: This file is not formatted for import using mc alias import. If you plan to import this alias from the file, please use the Download for Import button. \"\n                  }\n                  text={\"Download all access credentials\"}\n                  className={classes.buttonSpacer}\n                  onClick={() => {\n                    let allCredentials = {};\n                    if (consoleCreds) {\n                      const cCreds = consoleCreds.map((itemMap) => {\n                        return {\n                          accessKey: itemMap.accessKey,\n                          secretKey: itemMap.secretKey,\n                        };\n                      });\n                      allCredentials = cCreds;\n                    }\n                    download(\n                      \"all_credentials.json\",\n                      JSON.stringify({\n                        ...allCredentials,\n                      })\n                    );\n                  }}\n                  icon={<DownloadIcon />}\n                  variant=\"contained\"\n                  color=\"primary\"\n                />\n              )}\n            </>\n          )}\n        </Grid>\n      </Grid>\n    </ModalWrapper>\n  );\n};\n\nexport default withStyles(styles)(CredentialsPrompt);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState } from \"react\";\nimport get from \"lodash/get\";\nimport { Grid, InputLabel, Tooltip } from \"@mui/material\";\nimport IconButton from \"@mui/material/IconButton\";\nimport AttachFileIcon from \"@mui/icons-material/AttachFile\";\nimport CancelIcon from \"@mui/icons-material/Cancel\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  fileInputStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport { fileProcess } from \"./utils\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport ErrorBlock from \"../../../../shared/ErrorBlock\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: string, i: string) => void;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  required?: boolean;\n  error?: string;\n  accept?: string;\n  value?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    valueString: {\n      maxWidth: 350,\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      marginTop: 2,\n    },\n    fileInputField: {\n      margin: \"13px 0\",\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n      },\n    },\n    ...fileInputStyles,\n    inputLabel: {\n      ...fieldBasic.inputLabel,\n      fontWeight: \"normal\",\n    },\n    textBoxContainer: {\n      ...fieldBasic.textBoxContainer,\n      maxWidth: \"100%\",\n      border: \"1px solid #eaeaea\",\n      paddingLeft: \"15px\",\n    },\n  });\n\nconst FileSelector = ({\n  label,\n  classes,\n  onChange,\n  id,\n  name,\n  disabled = false,\n  tooltip = \"\",\n  required,\n  error = \"\",\n  accept = \"\",\n  value = \"\",\n}: InputBoxProps) => {\n  const [showFileSelector, setShowSelector] = useState(false);\n\n  return (\n    <React.Fragment>\n      <Grid\n        item\n        xs={12}\n        className={`${classes.fileInputField} ${classes.fieldBottom} ${\n          classes.fieldContainer\n        } ${error !== \"\" ? classes.errorInField : \"\"}`}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={`${error !== \"\" ? classes.fieldLabelError : \"\"} ${\n              classes.inputLabel\n            }`}\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        {showFileSelector || value === \"\" ? (\n          <div className={classes.textBoxContainer}>\n            <input\n              type=\"file\"\n              name={name}\n              onChange={(e) => {\n                const fileName = get(e, \"target.files[0].name\", \"\");\n                fileProcess(e, (data: any) => {\n                  onChange(data, fileName);\n                });\n              }}\n              accept={accept}\n              required={required}\n              disabled={disabled}\n              className={classes.fileInputField}\n            />\n\n            {value !== \"\" && (\n              <IconButton\n                color=\"primary\"\n                aria-label=\"upload picture\"\n                component=\"span\"\n                onClick={() => {\n                  setShowSelector(false);\n                }}\n                disableRipple={false}\n                disableFocusRipple={false}\n                size=\"small\"\n              >\n                <CancelIcon />\n              </IconButton>\n            )}\n\n            {error !== \"\" && <ErrorBlock errorMessage={error} />}\n          </div>\n        ) : (\n          <div className={classes.fileReselect}>\n            <div className={classes.valueString}>{value}</div>\n            <IconButton\n              color=\"primary\"\n              aria-label=\"upload picture\"\n              component=\"span\"\n              onClick={() => {\n                setShowSelector(true);\n              }}\n              disableRipple={false}\n              disableFocusRipple={false}\n              size=\"small\"\n            >\n              <AttachFileIcon />\n            </IconButton>\n          </div>\n        )}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(FileSelector);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nexport const fileProcess = (evt: any, callback: any) => {\n  const file = evt.target.files[0];\n  const reader = new FileReader();\n  reader.readAsDataURL(file);\n\n  reader.onload = () => {\n    // reader.readAsDataURL(file) output will be something like: data:application/x-x509-ca-cert;base64,LS0tLS1CRUdJTiBDRVJUSU\n    // we care only about the actual base64 part (everything after \"data:application/x-x509-ca-cert;base64,\")\n    const fileBase64 = reader.result;\n    if (fileBase64) {\n      const fileArray = fileBase64.toString().split(\"base64,\");\n\n      if (fileArray.length === 2) {\n        callback(fileArray[1]);\n      }\n    }\n  };\n};\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  deleteDialogStyles,\n  snackBarCommon,\n} from \"../FormComponents/common/styleLibrary\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport MainError from \"../MainError/MainError\";\nimport { setModalSnackMessage } from \"../../../../systemSlice\";\n\ninterface IModalProps {\n  classes: any;\n  onClose: () => void;\n  modalOpen: boolean;\n  title: string | React.ReactNode;\n  children: any;\n  wideLimit?: boolean;\n  noContentPadding?: boolean;\n  titleIcon?: React.ReactNode;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...deleteDialogStyles,\n    content: {\n      padding: 25,\n      paddingBottom: 0,\n    },\n    customDialogSize: {\n      width: \"100%\",\n      maxWidth: 765,\n    },\n    ...snackBarCommon,\n  });\n\nconst ModalWrapper = ({\n  onClose,\n  modalOpen,\n  title,\n  children,\n  classes,\n  wideLimit = true,\n  noContentPadding,\n  titleIcon = null,\n}: IModalProps) => {\n  const dispatch = useAppDispatch();\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  const modalSnackMessage = useSelector(\n    (state: AppState) => state.system.modalSnackBar\n  );\n\n  useEffect(() => {\n    dispatch(setModalSnackMessage(\"\"));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (modalSnackMessage) {\n      if (modalSnackMessage.message === \"\") {\n        setOpenSnackbar(false);\n        return;\n      }\n      // Open SnackBar\n      if (modalSnackMessage.type !== \"error\") {\n        setOpenSnackbar(true);\n      }\n    }\n  }, [modalSnackMessage]);\n\n  const closeSnackBar = () => {\n    setOpenSnackbar(false);\n    dispatch(setModalSnackMessage(\"\"));\n  };\n\n  const customSize = wideLimit\n    ? {\n        classes: {\n          paper: classes.customDialogSize,\n        },\n      }\n    : { maxWidth: \"lg\" as const, fullWidth: true };\n\n  let message = \"\";\n\n  if (modalSnackMessage) {\n    message = modalSnackMessage.detailedErrorMsg;\n    if (\n      modalSnackMessage.detailedErrorMsg === \"\" ||\n      modalSnackMessage.detailedErrorMsg.length < 5\n    ) {\n      message = modalSnackMessage.message;\n    }\n  }\n\n  return (\n    <Dialog\n      open={modalOpen}\n      classes={classes}\n      {...customSize}\n      scroll={\"paper\"}\n      onClose={(event, reason) => {\n        if (reason !== \"backdropClick\") {\n          onClose(); // close on Esc but not on click outside\n        }\n      }}\n      className={classes.root}\n    >\n      <DialogTitle className={classes.title}>\n        <div className={classes.titleText}>\n          {titleIcon} {title}\n        </div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            id={\"close\"}\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <MainError isModal={true} />\n      <Snackbar\n        open={openSnackbar}\n        className={classes.snackBarModal}\n        onClose={() => {\n          closeSnackBar();\n        }}\n        message={message}\n        ContentProps={{\n          className: `${classes.snackBar} ${\n            modalSnackMessage && modalSnackMessage.type === \"error\"\n              ? classes.errorSnackBar\n              : \"\"\n          }`,\n        }}\n        autoHideDuration={\n          modalSnackMessage && modalSnackMessage.type === \"error\" ? 10000 : 5000\n        }\n      />\n      <DialogContent className={noContentPadding ? \"\" : classes.content}>\n        {children}\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default withStyles(styles)(ModalWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, IconButton, Paper } from \"@mui/material\";\nimport {\n  createTenantCommon,\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\n\nimport { AppState, useAppDispatch } from \"../../../../../store\";\nimport { clearValidationError } from \"../../utils\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../utils/validationFunctions\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport RemoveIcon from \"../../../../../icons/RemoveIcon\";\nimport {\n  addNewMinIODomain,\n  isPageValid,\n  removeMinIODomain,\n  updateAddField,\n} from \"../createTenantSlice\";\n\ninterface IConfigureProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    configSectionItem: {\n      marginRight: 15,\n      marginBottom: 15,\n\n      \"& .multiContainer\": {\n        border: \"1px solid red\",\n      },\n    },\n    tenantCustomizationFields: {\n      marginLeft: 30, // 2nd Level(15+15)\n      width: \"88%\",\n      margin: \"auto\",\n    },\n    containerItem: {\n      marginRight: 15,\n    },\n    fieldGroup: {\n      ...createTenantCommon.fieldGroup,\n      paddingTop: 15,\n      marginBottom: 25,\n    },\n    responsiveSectionItem: {\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n        alignItems: \"flex-start\",\n\n        \"& div > div\": {\n          marginBottom: 5,\n          marginRight: 0,\n        },\n      },\n    },\n    wrapperContainer: {\n      display: \"flex\",\n      marginBottom: 15,\n    },\n    overlayAction: {\n      marginLeft: 10,\n      display: \"flex\",\n      alignItems: \"center\",\n      \"& svg\": {\n        width: 15,\n        height: 15,\n      },\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst Configure = ({ classes }: IConfigureProps) => {\n  const dispatch = useAppDispatch();\n\n  const exposeMinIO = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.exposeMinIO\n  );\n  const exposeConsole = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.exposeConsole\n  );\n  const setDomains = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.setDomains\n  );\n  const consoleDomain = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.consoleDomain\n  );\n  const minioDomains = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.minioDomains\n  );\n  const tenantCustom = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.tenantCustom\n  );\n  const tenantSecurityContext = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.tenantSecurityContext\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"configure\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  // Validation\n  useEffect(() => {\n    let customAccountValidation: IValidation[] = [];\n    if (tenantCustom) {\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"tenant_securityContext_runAsUser\",\n          required: true,\n          value: tenantSecurityContext.runAsUser,\n          customValidation:\n            tenantSecurityContext.runAsUser === \"\" ||\n            parseInt(tenantSecurityContext.runAsUser) < 0,\n          customValidationMessage: `runAsUser must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"tenant_securityContext_runAsGroup\",\n          required: true,\n          value: tenantSecurityContext.runAsGroup,\n          customValidation:\n            tenantSecurityContext.runAsGroup === \"\" ||\n            parseInt(tenantSecurityContext.runAsGroup) < 0,\n          customValidationMessage: `runAsGroup must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"tenant_securityContext_fsGroup\",\n          required: true,\n          value: tenantSecurityContext.fsGroup,\n          customValidation:\n            tenantSecurityContext.fsGroup === \"\" ||\n            parseInt(tenantSecurityContext.fsGroup) < 0,\n          customValidationMessage: `fsGroup must be present and be 0 or more`,\n        },\n      ];\n    }\n\n    if (setDomains) {\n      const minioExtraValidations = minioDomains.map((validation, index) => {\n        return {\n          fieldKey: `minio-domain-${index.toString()}`,\n          required: false,\n          value: validation,\n          pattern: /^(https?):\\/\\/([a-zA-Z0-9\\-.]+)(:[0-9]+)?$/,\n          customPatternMessage:\n            \"MinIO domain is not in the form of http|https://subdomain.domain\",\n        };\n      });\n\n      customAccountValidation = [\n        ...customAccountValidation,\n        ...minioExtraValidations,\n        {\n          fieldKey: \"console_domain\",\n          required: false,\n          value: consoleDomain,\n          pattern:\n            /^(https?):\\/\\/([a-zA-Z0-9\\-.]+)(:[0-9]+)?(\\/[a-zA-Z0-9\\-./]*)?$/,\n          customPatternMessage:\n            \"Console domain is not in the form of http|https://subdomain.domain:port/subpath1/subpath2\",\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(customAccountValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"configure\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    dispatch,\n    tenantCustom,\n    tenantSecurityContext,\n    setDomains,\n    consoleDomain,\n    minioDomains,\n  ]);\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  const updateMinIODomain = (value: string, index: number) => {\n    const copyDomains = [...minioDomains];\n    copyDomains[index] = value;\n\n    updateField(\"minioDomains\", copyDomains);\n  };\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <h3 className={classes.h3Section}>Configure</h3>\n        <span className={classes.descriptionText}>\n          Basic configurations for tenant management\n        </span>\n      </div>\n      <div className={classes.headerElement}>\n        <h3 className={classes.h3Section}>Services</h3>\n        <span className={classes.descriptionText}>\n          Whether the tenant's services should request an external IP via\n          LoadBalancer service type.\n        </span>\n      </div>\n      <Grid item xs={12} className={classes.configSectionItem}>\n        <FormSwitchWrapper\n          value=\"expose_minio\"\n          id=\"expose_minio\"\n          name=\"expose_minio\"\n          checked={exposeMinIO}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"exposeMinIO\", checked);\n          }}\n          label={\"Expose MinIO Service\"}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.configSectionItem}>\n        <FormSwitchWrapper\n          value=\"expose_console\"\n          id=\"expose_console\"\n          name=\"expose_console\"\n          checked={exposeConsole}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"exposeConsole\", checked);\n          }}\n          label={\"Expose Console Service\"}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.configSectionItem}>\n        <FormSwitchWrapper\n          value=\"custom_domains\"\n          id=\"custom_domains\"\n          name=\"custom_domains\"\n          checked={setDomains}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"setDomains\", checked);\n          }}\n          label={\"Set Custom Domains\"}\n        />\n      </Grid>\n      {setDomains && (\n        <Grid item xs={12} className={classes.tenantCustomizationFields}>\n          <fieldset className={classes.fieldGroup}>\n            <legend className={classes.descriptionText}>\n              Custom Domains for MinIO\n            </legend>\n            <Grid item xs={12} className={`${classes.configSectionItem}`}>\n              <div className={classes.containerItem}>\n                <InputBoxWrapper\n                  id=\"console_domain\"\n                  name=\"console_domain\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"consoleDomain\", e.target.value);\n                    cleanValidation(\"tenant_securityContext_runAsUser\");\n                  }}\n                  label=\"Console Domain\"\n                  value={consoleDomain}\n                  placeholder={\n                    \"Eg. http://subdomain.domain:port/subpath1/subpath2\"\n                  }\n                  error={validationErrors[\"console_domain\"] || \"\"}\n                />\n              </div>\n              <div>\n                <h4>MinIO Domains</h4>\n                <div className={`${classes.responsiveSectionItem}`}>\n                  {minioDomains.map((domain, index) => {\n                    return (\n                      <div\n                        className={`${classes.containerItem} ${classes.wrapperContainer}`}\n                        key={`minio-domain-key-${index.toString()}`}\n                      >\n                        <InputBoxWrapper\n                          id={`minio-domain-${index.toString()}`}\n                          name={`minio-domain-${index.toString()}`}\n                          onChange={(\n                            e: React.ChangeEvent<HTMLInputElement>\n                          ) => {\n                            updateMinIODomain(e.target.value, index);\n                          }}\n                          label={`MinIO Domain ${index + 1}`}\n                          value={domain}\n                          placeholder={\"Eg. http://subdomain.domain\"}\n                          error={\n                            validationErrors[\n                              `minio-domain-${index.toString()}`\n                            ] || \"\"\n                          }\n                        />\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => dispatch(addNewMinIODomain())}\n                            disabled={index !== minioDomains.length - 1}\n                          >\n                            <AddIcon />\n                          </IconButton>\n                        </div>\n\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => dispatch(removeMinIODomain(index))}\n                            disabled={minioDomains.length <= 1}\n                          >\n                            <RemoveIcon />\n                          </IconButton>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            </Grid>\n          </fieldset>\n        </Grid>\n      )}\n\n      <Grid item xs={12} className={classes.configSectionItem}>\n        <FormSwitchWrapper\n          value=\"tenantConfig\"\n          id=\"tenant_configuration\"\n          name=\"tenant_configuration\"\n          checked={tenantCustom}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"tenantCustom\", checked);\n          }}\n          label={\"Security Context\"}\n        />\n      </Grid>\n      {tenantCustom && (\n        <Grid item xs={12} className={classes.tenantCustomizationFields}>\n          <fieldset className={classes.fieldGroup}>\n            <legend className={classes.descriptionText}>\n              SecurityContext for MinIO\n            </legend>\n            <Grid item xs={12} className={`${classes.configSectionItem}`}>\n              <div\n                className={`${classes.multiContainer} ${classes.responsiveSectionItem}`}\n              >\n                <div className={classes.containerItem}>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"tenant_securityContext_runAsUser\"\n                    name=\"tenant_securityContext_runAsUser\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"tenantSecurityContext\", {\n                        ...tenantSecurityContext,\n                        runAsUser: e.target.value,\n                      });\n                      cleanValidation(\"tenant_securityContext_runAsUser\");\n                    }}\n                    label=\"Run As User\"\n                    value={tenantSecurityContext.runAsUser}\n                    required\n                    error={\n                      validationErrors[\"tenant_securityContext_runAsUser\"] || \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n                <div className={classes.containerItem}>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"tenant_securityContext_runAsGroup\"\n                    name=\"tenant_securityContext_runAsGroup\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"tenantSecurityContext\", {\n                        ...tenantSecurityContext,\n                        runAsGroup: e.target.value,\n                      });\n                      cleanValidation(\"tenant_securityContext_runAsGroup\");\n                    }}\n                    label=\"Run As Group\"\n                    value={tenantSecurityContext.runAsGroup}\n                    required\n                    error={\n                      validationErrors[\"tenant_securityContext_runAsGroup\"] ||\n                      \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n                <div className={classes.containerItem}>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"tenant_securityContext_fsGroup\"\n                    name=\"tenant_securityContext_fsGroup\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"tenantSecurityContext\", {\n                        ...tenantSecurityContext,\n                        fsGroup: e.target.value,\n                      });\n                      cleanValidation(\"tenant_securityContext_fsGroup\");\n                    }}\n                    label=\"FsGroup\"\n                    value={tenantSecurityContext.fsGroup}\n                    required\n                    error={\n                      validationErrors[\"tenant_securityContext_fsGroup\"] || \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n              </div>\n            </Grid>\n            <br />\n            <Grid item xs={12} className={classes.configSectionItem}>\n              <div className={classes.multiContainer}>\n                <FormSwitchWrapper\n                  value=\"tenantSecurityContextRunAsNonRoot\"\n                  id=\"tenant_securityContext_runAsNonRoot\"\n                  name=\"tenant_securityContext_runAsNonRoot\"\n                  checked={tenantSecurityContext.runAsNonRoot}\n                  onChange={(e) => {\n                    const targetD = e.target;\n                    const checked = targetD.checked;\n                    updateField(\"tenantSecurityContext\", {\n                      ...tenantSecurityContext,\n                      runAsNonRoot: checked,\n                    });\n                  }}\n                  label={\"Do not run as Root\"}\n                />\n              </div>\n            </Grid>\n          </fieldset>\n        </Grid>\n      )}\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(Configure);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Grid, IconButton, Tooltip, Typography } from \"@mui/material\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport FormSwitchWrapper from \"../../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport {\n  addIDPADUsrAtIndex,\n  isPageValid,\n  removeIDPADUsrAtIndex,\n  setIDPADUsrAtIndex,\n  updateAddField,\n  addIDPADGroupAtIndex,\n  removeIDPADGroupAtIndex,\n  setIDPADGroupAtIndex,\n} from \"../../createTenantSlice\";\nimport { useSelector } from \"react-redux\";\nimport { clearValidationError } from \"../../../utils\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    adUserDnRows: {\n      display: \"flex\",\n      marginBottom: 10,\n    },\n    buttonTray: {\n      marginLeft: 10,\n      display: \"flex\",\n      height: 38,\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    overlayAction: {\n      marginLeft: 10,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst IDPActiveDirectory = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const idpSelection = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.idpSelection\n  );\n  const ADURL = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.ADURL\n  );\n  const ADSkipTLS = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.ADSkipTLS\n  );\n  const ADServerInsecure = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADServerInsecure\n  );\n  const ADGroupSearchBaseDN = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADGroupSearchBaseDN\n  );\n  const ADGroupSearchFilter = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADGroupSearchFilter\n  );\n  const ADUserDNs = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.ADUserDNs\n  );\n  const ADGroupDNs = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.ADGroupDNs\n  );\n  const ADLookupBindDN = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADLookupBindDN\n  );\n  const ADLookupBindPassword = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADLookupBindPassword\n  );\n  const ADUserDNSearchBaseDN = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADUserDNSearchBaseDN\n  );\n  const ADUserDNSearchFilter = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADUserDNSearchFilter\n  );\n  const ADServerStartTLS = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADServerStartTLS\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({\n          pageName: \"identityProvider\",\n          field: field,\n          value: value,\n        })\n      );\n    },\n    [dispatch]\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  // Validation\n  useEffect(() => {\n    let customIDPValidation: IValidation[] = [];\n\n    if (idpSelection === \"AD\") {\n      customIDPValidation = [\n        ...customIDPValidation,\n        {\n          fieldKey: \"AD_URL\",\n          required: true,\n          value: ADURL,\n        },\n        {\n          fieldKey: \"ad_lookupBindDN\",\n          required: true,\n          value: ADLookupBindDN,\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(customIDPValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"identityProvider\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    ADLookupBindDN,\n    idpSelection,\n    ADURL,\n    ADGroupSearchBaseDN,\n    ADGroupSearchFilter,\n    ADUserDNs,\n    ADGroupDNs,\n    dispatch,\n  ]);\n\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"AD_URL\"\n          name=\"AD_URL\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"ADURL\", e.target.value);\n            cleanValidation(\"AD_URL\");\n          }}\n          label=\"LDAP Server Address\"\n          value={ADURL}\n          placeholder=\"ldap-server:636\"\n          error={validationErrors[\"AD_URL\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <FormSwitchWrapper\n          value=\"ad_skipTLS\"\n          id=\"ad_skipTLS\"\n          name=\"ad_skipTLS\"\n          checked={ADSkipTLS}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n            updateField(\"ADSkipTLS\", checked);\n          }}\n          label={\"Skip TLS Verification\"}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <FormSwitchWrapper\n          value=\"ad_serverInsecure\"\n          id=\"ad_serverInsecure\"\n          name=\"ad_serverInsecure\"\n          checked={ADServerInsecure}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n            updateField(\"ADServerInsecure\", checked);\n          }}\n          label={\"Server Insecure\"}\n        />\n      </Grid>\n      {ADServerInsecure ? (\n        <Grid item xs={12}>\n          <Typography\n            className={classes.error}\n            variant=\"caption\"\n            display=\"block\"\n            gutterBottom\n          >\n            Warning: All traffic with Active Directory will be unencrypted\n          </Typography>\n          <br />\n        </Grid>\n      ) : null}\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <FormSwitchWrapper\n          value=\"ad_serverStartTLS\"\n          id=\"ad_serverStartTLS\"\n          name=\"ad_serverStartTLS\"\n          checked={ADServerStartTLS}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n            updateField(\"ADServerStartTLS\", checked);\n          }}\n          label={\"Start TLS connection to AD/LDAP server\"}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"ad_lookupBindDN\"\n          name=\"ad_lookupBindDN\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"ADLookupBindDN\", e.target.value);\n            cleanValidation(\"ad_lookupBindDN\");\n          }}\n          label=\"Lookup Bind DN\"\n          value={ADLookupBindDN}\n          placeholder=\"cn=admin,dc=min,dc=io\"\n          error={validationErrors[\"ad_lookupBindDN\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"ad_lookupBindPassword\"\n          name=\"ad_lookupBindPassword\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"ADLookupBindPassword\", e.target.value);\n          }}\n          label=\"Lookup Bind Password\"\n          value={ADLookupBindPassword}\n          placeholder=\"admin\"\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"ad_userDNSearchBaseDN\"\n          name=\"ad_userDNSearchBaseDN\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"ADUserDNSearchBaseDN\", e.target.value);\n          }}\n          label=\"User DN Search Base DN\"\n          value={ADUserDNSearchBaseDN}\n          placeholder=\"dc=min,dc=io\"\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"ad_userDNSearchFilter\"\n          name=\"ad_userDNSearchFilter\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"ADUserDNSearchFilter\", e.target.value);\n          }}\n          label=\"User DN Search Filter\"\n          value={ADUserDNSearchFilter}\n          placeholder=\"(sAMAcountName=%s)\"\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"ad_groupSearchBaseDN\"\n          name=\"ad_groupSearchBaseDN\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"ADGroupSearchBaseDN\", e.target.value);\n          }}\n          label=\"Group Search Base DN\"\n          value={ADGroupSearchBaseDN}\n          placeholder=\"ou=hwengg,dc=min,dc=io;ou=swengg,dc=min,dc=io\"\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"ad_groupSearchFilter\"\n          name=\"ad_groupSearchFilter\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"ADGroupSearchFilter\", e.target.value);\n          }}\n          label=\"Group Search Filter\"\n          value={ADGroupSearchFilter}\n          placeholder=\"(&(objectclass=groupOfNames)(member=%s))\"\n        />\n      </Grid>\n      <fieldset className={classes.fieldGroup}>\n        <legend className={classes.descriptionText}>\n          List of user DNs (Distinguished Names) to be Tenant Administrators\n        </legend>\n        <Grid item xs={12}>\n          {ADUserDNs.map((_, index) => {\n            return (\n              <Fragment key={`identityField-${index.toString()}`}>\n                <div className={classes.adUserDnRows}>\n                  <InputBoxWrapper\n                    id={`ad-userdn-${index.toString()}`}\n                    label={\"\"}\n                    placeholder=\"\"\n                    name={`ad-userdn-${index.toString()}`}\n                    value={ADUserDNs[index]}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      dispatch(\n                        setIDPADUsrAtIndex({\n                          index: index,\n                          userDN: e.target.value,\n                        })\n                      );\n                      cleanValidation(`ad-userdn-${index.toString()}`);\n                    }}\n                    index={index}\n                    key={`csv-ad-userdn-${index.toString()}`}\n                    error={\n                      validationErrors[`ad-userdn-${index.toString()}`] || \"\"\n                    }\n                  />\n                  <div className={classes.buttonTray}>\n                    <Tooltip title=\"Add User\" aria-label=\"add\">\n                      <IconButton\n                        size={\"small\"}\n                        onClick={() => {\n                          dispatch(addIDPADUsrAtIndex());\n                        }}\n                      >\n                        <AddIcon />\n                      </IconButton>\n                    </Tooltip>\n                    <Tooltip title=\"Remove\" aria-label=\"add\">\n                      <IconButton\n                        size={\"small\"}\n                        style={{ marginLeft: 16 }}\n                        onClick={() => {\n                          if (ADUserDNs.length > 1) {\n                            dispatch(removeIDPADUsrAtIndex(index));\n                          }\n                        }}\n                      >\n                        <DeleteIcon />\n                      </IconButton>\n                    </Tooltip>\n                  </div>\n                </div>\n              </Fragment>\n            );\n          })}\n        </Grid>\n      </fieldset>\n      <fieldset className={classes.fieldGroup}>\n        <legend className={classes.descriptionText}>\n          List of group DNs (Distinguished Names) to be Tenant Administrators\n        </legend>\n        <Grid item xs={12}>\n          {ADGroupDNs.map((_, index) => {\n            return (\n              <Fragment key={`identityField-${index.toString()}`}>\n                <div className={classes.adUserDnRows}>\n                  <InputBoxWrapper\n                    id={`ad-groupdn-${index.toString()}`}\n                    label={\"\"}\n                    placeholder=\"\"\n                    name={`ad-groupdn-${index.toString()}`}\n                    value={ADGroupDNs[index]}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      dispatch(\n                        setIDPADGroupAtIndex({\n                          index: index,\n                          userDN: e.target.value,\n                        })\n                      );\n                      cleanValidation(`ad-groupdn-${index.toString()}`);\n                    }}\n                    index={index}\n                    key={`csv-ad-groupdn-${index.toString()}`}\n                    error={\n                      validationErrors[`ad-groupdn-${index.toString()}`] || \"\"\n                    }\n                  />\n                  <div className={classes.buttonTray}>\n                    <Tooltip title=\"Add Group\" aria-label=\"add\">\n                      <IconButton\n                        size={\"small\"}\n                        onClick={() => {\n                          dispatch(addIDPADGroupAtIndex());\n                        }}\n                      >\n                        <AddIcon />\n                      </IconButton>\n                    </Tooltip>\n                    <Tooltip title=\"Remove\" aria-label=\"add\">\n                      <IconButton\n                        size={\"small\"}\n                        style={{ marginLeft: 16 }}\n                        onClick={() => {\n                          if (ADGroupDNs.length > 1) {\n                            dispatch(removeIDPADGroupAtIndex(index));\n                          }\n                        }}\n                      >\n                        <DeleteIcon />\n                      </IconButton>\n                    </Tooltip>\n                  </div>\n                </div>\n              </Fragment>\n            );\n          })}\n        </Grid>\n      </fieldset>\n    </Fragment>\n  );\n};\n\nexport default IDPActiveDirectory;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Grid } from \"@mui/material\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { isPageValid, updateAddField } from \"../../createTenantSlice\";\nimport { clearValidationError } from \"../../../utils\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    buttonTray: {\n      marginLeft: 10,\n      display: \"flex\",\n      height: 38,\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    overlayAction: {\n      marginLeft: 10,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst IDPOpenID = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const idpSelection = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.idpSelection\n  );\n  const openIDConfigurationURL = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.openIDConfigurationURL\n  );\n  const openIDClientID = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.openIDClientID\n  );\n  const openIDSecretID = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.openIDSecretID\n  );\n  const openIDCallbackURL = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.openIDCallbackURL\n  );\n  const openIDClaimName = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.openIDClaimName\n  );\n  const openIDScopes = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.openIDScopes\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({\n          pageName: \"identityProvider\",\n          field: field,\n          value: value,\n        })\n      );\n    },\n    [dispatch]\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  // Validation\n  useEffect(() => {\n    let customIDPValidation: IValidation[] = [];\n\n    if (idpSelection === \"OpenID\") {\n      customIDPValidation = [\n        ...customIDPValidation,\n        {\n          fieldKey: \"openID_CONFIGURATION_URL\",\n          required: true,\n          value: openIDConfigurationURL,\n        },\n        {\n          fieldKey: \"openID_clientID\",\n          required: true,\n          value: openIDClientID,\n        },\n        {\n          fieldKey: \"openID_secretID\",\n          required: true,\n          value: openIDSecretID,\n        },\n        {\n          fieldKey: \"openID_claimName\",\n          required: true,\n          value: openIDClaimName,\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(customIDPValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"identityProvider\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    idpSelection,\n    openIDClientID,\n    openIDSecretID,\n    openIDConfigurationURL,\n    openIDClaimName,\n    dispatch,\n  ]);\n\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"openID_CONFIGURATION_URL\"\n          name=\"openID_CONFIGURATION_URL\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"openIDConfigurationURL\", e.target.value);\n            cleanValidation(\"openID_CONFIGURATION_URL\");\n          }}\n          label=\"Configuration URL\"\n          value={openIDConfigurationURL}\n          placeholder=\"https://your-identity-provider.com/.well-known/openid-configuration\"\n          error={validationErrors[\"openID_CONFIGURATION_URL\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"openID_clientID\"\n          name=\"openID_clientID\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"openIDClientID\", e.target.value);\n            cleanValidation(\"openID_clientID\");\n          }}\n          label=\"Client ID\"\n          value={openIDClientID}\n          error={validationErrors[\"openID_clientID\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"openID_secretID\"\n          name=\"openID_secretID\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"openIDSecretID\", e.target.value);\n            cleanValidation(\"openID_secretID\");\n          }}\n          label=\"Secret ID\"\n          value={openIDSecretID}\n          error={validationErrors[\"openID_secretID\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"openID_callbackURL\"\n          name=\"openID_callbackURL\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"openIDCallbackURL\", e.target.value);\n            cleanValidation(\"openID_callbackURL\");\n          }}\n          label=\"Callback URL\"\n          value={openIDCallbackURL}\n          placeholder=\"https://your-console-endpoint:9443/oauth_callback\"\n          error={validationErrors[\"openID_callbackURL\"] || \"\"}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"openID_claimName\"\n          name=\"openID_claimName\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"openIDClaimName\", e.target.value);\n            cleanValidation(\"openID_claimName\");\n          }}\n          label=\"Claim Name\"\n          value={openIDClaimName}\n          error={validationErrors[\"openID_claimName\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"openID_scopes\"\n          name=\"openID_scopes\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"openIDScopes\", e.target.value);\n            cleanValidation(\"openID_scopes\");\n          }}\n          label=\"Scopes\"\n          value={openIDScopes}\n        />\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default IDPOpenID;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport {\n  addIDPNewKeyPair,\n  isPageValid,\n  removeIDPKeyPairAtIndex,\n  setIDPPwdAtIndex,\n  setIDPUsrAtIndex,\n} from \"../../createTenantSlice\";\nimport { IconButton, Tooltip } from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport RemoveIcon from \"../../../../../../icons/RemoveIcon\";\nimport { clearValidationError, getRandomString } from \"../../../utils\";\nimport CasinoIcon from \"@mui/icons-material/Casino\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    buttonTray: {\n      marginLeft: 10,\n      display: \"flex\",\n      height: 38,\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    overlayAction: {\n      marginLeft: 10,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    shortened: {\n      gridTemplateColumns: \"auto auto 50px 50px\",\n      display: \"grid\",\n      gridGap: 15,\n      marginBottom: 10,\n      \"& input\": {\n        fontWeight: 400,\n      },\n    },\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst IDPBuiltIn = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const idpSelection = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.idpSelection\n  );\n  const accessKeys = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.accessKeys\n  );\n  const secretKeys = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.secretKeys\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  // Validation\n  useEffect(() => {\n    let customIDPValidation: IValidation[] = [];\n\n    if (idpSelection === \"Built-in\") {\n      customIDPValidation = [...customIDPValidation];\n      for (var i = 0; i < accessKeys.length; i++) {\n        customIDPValidation.push({\n          fieldKey: `accesskey-${i.toString()}`,\n          required: true,\n          value: accessKeys[i],\n          pattern: /^[a-zA-Z0-9-]{8,63}$/,\n          customPatternMessage: \"Keys must be at least length 8\",\n        });\n        customIDPValidation.push({\n          fieldKey: `secretkey-${i.toString()}`,\n          required: true,\n          value: secretKeys[i],\n          pattern: /^[a-zA-Z0-9-]{8,63}$/,\n          customPatternMessage: \"Keys must be at least length 8\",\n        });\n      }\n    }\n\n    const commonVal = commonFormValidation(customIDPValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"identityProvider\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [idpSelection, accessKeys, secretKeys, dispatch]);\n\n  return (\n    <Fragment>\n      Add additional users\n      {accessKeys.map((_, index) => {\n        return (\n          <Fragment key={`identityField-${index.toString()}`}>\n            <div className={classes.shortened}>\n              <InputBoxWrapper\n                id={`accesskey-${index.toString()}`}\n                label={\"\"}\n                placeholder={\"Access Key\"}\n                name={`accesskey-${index.toString()}`}\n                value={accessKeys[index]}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  dispatch(\n                    setIDPUsrAtIndex({\n                      index,\n                      accessKey: e.target.value,\n                    })\n                  );\n                  cleanValidation(`accesskey-${index.toString()}`);\n                }}\n                index={index}\n                key={`csv-accesskey-${index.toString()}`}\n                error={validationErrors[`accesskey-${index.toString()}`] || \"\"}\n              />\n              <InputBoxWrapper\n                id={`secretkey-${index.toString()}`}\n                label={\"\"}\n                placeholder={\"Secret Key\"}\n                name={`secretkey-${index.toString()}`}\n                value={secretKeys[index]}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  dispatch(\n                    setIDPPwdAtIndex({\n                      index,\n                      secretKey: e.target.value,\n                    })\n                  );\n                  cleanValidation(`secretkey-${index.toString()}`);\n                }}\n                index={index}\n                key={`csv-secretkey-${index.toString()}`}\n                error={validationErrors[`secretkey-${index.toString()}`] || \"\"}\n              />\n              <div className={classes.buttonTray}>\n                <div className={classes.overlayAction}>\n                  <IconButton\n                    size={\"small\"}\n                    onClick={() => {\n                      dispatch(addIDPNewKeyPair());\n                    }}\n                    disabled={index !== accessKeys.length - 1}\n                  >\n                    <AddIcon />\n                  </IconButton>\n                </div>\n                <div className={classes.overlayAction}>\n                  <IconButton\n                    size={\"small\"}\n                    onClick={() => {\n                      dispatch(removeIDPKeyPairAtIndex(index));\n                    }}\n                    disabled={accessKeys.length <= 1}\n                  >\n                    <RemoveIcon />\n                  </IconButton>\n                </div>\n                <Tooltip title=\"Randomize Credentials\" aria-label=\"add\">\n                  <div className={classes.overlayAction}>\n                    <IconButton\n                      onClick={() => {\n                        dispatch(\n                          setIDPUsrAtIndex({\n                            index,\n                            accessKey: getRandomString(16),\n                          })\n                        );\n                        dispatch(\n                          setIDPPwdAtIndex({\n                            index,\n                            secretKey: getRandomString(16),\n                          })\n                        );\n                      }}\n                      size={\"small\"}\n                    >\n                      <CasinoIcon />\n                    </IconButton>\n                  </div>\n                </Tooltip>\n              </div>\n            </div>\n          </Fragment>\n        );\n      })}\n    </Fragment>\n  );\n};\n\nexport default IDPBuiltIn;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport { Grid, Paper } from \"@mui/material\";\nimport {\n  createTenantCommon,\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport { AppState, useAppDispatch } from \"../../../../../store\";\nimport RadioGroupSelector from \"../../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\nimport { setIDP } from \"../createTenantSlice\";\nimport IDPActiveDirectory from \"./IdentityProvider/IDPActiveDirectory\";\nimport IDPOpenID from \"./IdentityProvider/IDPOpenID\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport IDPBuiltIn from \"./IdentityProvider/IDPBuiltIn\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    protocolRadioOptions: {\n      display: \"flex\",\n      flexFlow: \"column\",\n      marginBottom: 10,\n\n      \"& label\": {\n        fontSize: 14,\n      },\n      \"& div\": {\n        display: \"flex\",\n        flexFlow: \"column\",\n        alignItems: \"baseline\",\n      },\n    },\n    ...createTenantCommon,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst IdentityProvider = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const idpSelection = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.idpSelection\n  );\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <h3 className={classes.h3Section}>Identity Provider</h3>\n        <span className={classes.descriptionText}>\n          Access to the tenant can be controlled via an external Identity\n          Manager.\n        </span>\n      </div>\n      <Grid item xs={12} className={classes.protocolRadioOptions}>\n        <label>Protocol</label>\n        <RadioGroupSelector\n          currentSelection={idpSelection}\n          id=\"idp-options\"\n          name=\"idp-options\"\n          label=\" \"\n          onChange={(e) => {\n            dispatch(setIDP(e.target.value));\n          }}\n          selectorOptions={[\n            { label: \"Built-in\", value: \"Built-in\" },\n            { label: \"OpenID\", value: \"OpenID\" },\n            { label: \"Active Directory\", value: \"AD\" },\n          ]}\n        />\n      </Grid>\n      {idpSelection === \"Built-in\" && <IDPBuiltIn />}\n      {idpSelection === \"OpenID\" && <IDPOpenID />}\n      {idpSelection === \"AD\" && <IDPActiveDirectory />}\n    </Paper>\n  );\n};\n\nexport default IdentityProvider;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Box } from \"@mui/material\";\nimport CertificateIcon from \"../../../../icons/CertificateIcon\";\nimport { AppState } from \"../../../../store\";\n\nconst FeatureItem = ({\n  icon,\n  description,\n}: {\n  icon: any;\n  description: string;\n}) => {\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        \"& .min-icon\": {\n          marginRight: \"10px\",\n          height: \"23px\",\n          width: \"23px\",\n          marginBottom: \"10px\",\n        },\n      }}\n    >\n      {icon}{\" \"}\n      <div style={{ fontSize: \"14px\", fontStyle: \"italic\", color: \"#5E5E5E\" }}>\n        {description}\n      </div>\n    </Box>\n  );\n};\nconst TLSHelpBox = () => {\n  const namespace = useSelector((state: AppState) => {\n    return state.createTenant.fields.nameTenant.namespace || \"<namespace>\";\n  });\n\n  const tenantName = useSelector((state: AppState) => {\n    return state.createTenant.fields.nameTenant.tenantName || \"<tenant-name>\";\n  });\n\n  return (\n    <Box\n      sx={{\n        flex: 1,\n        border: \"1px solid #eaeaea\",\n        borderRadius: \"2px\",\n        display: \"flex\",\n        flexFlow: \"column\",\n        padding: \"20px\",\n        marginTop: {\n          xs: \"0px\",\n        },\n      }}\n    >\n      <Box\n        sx={{\n          display: \"flex\",\n          flexFlow: \"column\",\n        }}\n      >\n        <FeatureItem\n          icon={<CertificateIcon />}\n          description={`TLS Certificates Warning`}\n        />\n        <Box sx={{ fontSize: \"14px\", marginBottom: \"15px\" }}>\n          Automatic certificate generation is not enabled.\n          <br />\n          <br />\n          If you wish to continue only with <b>custom certificates</b> make sure\n          they are valid for the following internode hostnames, i.e.:\n          <br />\n          <br />\n          <div\n            style={{ fontSize: \"14px\", fontStyle: \"italic\", color: \"#5E5E5E\" }}\n          >\n            minio.{namespace}\n            <br />\n            minio.{namespace}.svc\n            <br />\n            minio.{namespace}.svc.&#x3C;cluster domain&#x3E;\n            <br />\n            *.{tenantName}-hl.{namespace}.svc.&#x3C;cluster domain&#x3E;\n            <br />\n            *.{namespace}.svc.&#x3C;cluster domain&#x3E;\n          </div>\n          <br />\n          Replace <em>&#x3C;tenant-name&#x3E;</em>,{\" \"}\n          <em>&#x3C;namespace&#x3E;</em> and\n          <em>&#x3C;cluster domain&#x3E;</em> with the actual values for your\n          MinIO tenant.\n          <br />\n          <br />\n          You can learn more at our{\" \"}\n          <a\n            href=\"https://docs.min.io/minio/k8s/security/security.html?ref=op#id5\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            documentation\n          </a>\n          .\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default TLSHelpBox;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, IconButton, Paper } from \"@mui/material\";\nimport {\n  createTenantCommon,\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\n\nimport { AppState, useAppDispatch } from \"../../../../../store\";\nimport { KeyPair } from \"../../ListTenants/utils\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport FileSelector from \"../../../Common/FormComponents/FileSelector/FileSelector\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport RemoveIcon from \"../../../../../icons/RemoveIcon\";\nimport SectionTitle from \"../../../Common/SectionTitle\";\nimport {\n  addCaCertificate,\n  addFileToCaCertificates,\n  addFileToKeyPair,\n  addKeyPair,\n  deleteCaCertificate,\n  deleteKeyPair,\n  isPageValid,\n  updateAddField,\n} from \"../createTenantSlice\";\nimport TLSHelpBox from \"../../HelpBox/TLSHelpBox\";\n\ninterface ISecurityProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    minioCertificateRows: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-start\",\n      borderBottom: \"1px solid #EAEAEA\",\n      \"&:last-child\": {\n        borderBottom: 0,\n      },\n      \"@media (max-width: 900px)\": {\n        flex: 1,\n      },\n    },\n    fileItem: {\n      marginRight: 10,\n      display: \"flex\",\n      \"& div label\": {\n        minWidth: 50,\n      },\n\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n      },\n    },\n    minioCertsContainer: {\n      marginBottom: 15,\n    },\n    minioCACertsRow: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-start\",\n\n      borderBottom: \"1px solid #EAEAEA\",\n      \"&:last-child\": {\n        borderBottom: 0,\n      },\n      \"@media (max-width: 900px)\": {\n        flex: 1,\n\n        \"& div label\": {\n          minWidth: 50,\n        },\n      },\n    },\n    rowActions: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      \"@media (max-width: 900px)\": {\n        flex: 1,\n      },\n    },\n    overlayAction: {\n      marginLeft: 10,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n\n    ...createTenantCommon,\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst Security = ({ classes }: ISecurityProps) => {\n  const dispatch = useAppDispatch();\n\n  const enableTLS = useSelector(\n    (state: AppState) => state.createTenant.fields.security.enableTLS\n  );\n  const enableAutoCert = useSelector(\n    (state: AppState) => state.createTenant.fields.security.enableAutoCert\n  );\n  const enableCustomCerts = useSelector(\n    (state: AppState) => state.createTenant.fields.security.enableCustomCerts\n  );\n  const minioCertificates = useSelector(\n    (state: AppState) => state.createTenant.certificates.minioCertificates\n  );\n  const caCertificates = useSelector(\n    (state: AppState) => state.createTenant.certificates.caCertificates\n  );\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"security\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  // Validation\n\n  useEffect(() => {\n    if (!enableTLS) {\n      dispatch(isPageValid({ pageName: \"security\", valid: true }));\n      return;\n    }\n    if (enableAutoCert) {\n      dispatch(isPageValid({ pageName: \"security\", valid: true }));\n      return;\n    }\n    if (enableCustomCerts) {\n      dispatch(isPageValid({ pageName: \"security\", valid: true }));\n      return;\n    }\n    dispatch(isPageValid({ pageName: \"security\", valid: false }));\n  }, [enableTLS, enableAutoCert, enableCustomCerts, dispatch]);\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <h3 className={classes.h3Section}>Security</h3>\n      </div>\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <FormSwitchWrapper\n            value=\"enableTLS\"\n            id=\"enableTLS\"\n            name=\"enableTLS\"\n            checked={enableTLS}\n            onChange={(e) => {\n              const targetD = e.target;\n              const checked = targetD.checked;\n\n              updateField(\"enableTLS\", checked);\n            }}\n            label={\"TLS\"}\n            description={\n              \"Securing all the traffic using TLS. This is required for Encryption Configuration\"\n            }\n          />\n        </Grid>\n        {enableTLS && (\n          <Fragment>\n            <Grid item xs={12}>\n              <FormSwitchWrapper\n                value=\"enableAutoCert\"\n                id=\"enableAutoCert\"\n                name=\"enableAutoCert\"\n                checked={enableAutoCert}\n                onChange={(e) => {\n                  const targetD = e.target;\n                  const checked = targetD.checked;\n                  updateField(\"enableAutoCert\", checked);\n                }}\n                label={\"AutoCert\"}\n                description={\n                  \"The internode certificates will be generated and managed by MinIO Operator\"\n                }\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormSwitchWrapper\n                value=\"enableCustomCerts\"\n                id=\"enableCustomCerts\"\n                name=\"enableCustomCerts\"\n                checked={enableCustomCerts}\n                onChange={(e) => {\n                  const targetD = e.target;\n                  const checked = targetD.checked;\n                  updateField(\"enableCustomCerts\", checked);\n                }}\n                label={\"Custom Certificates\"}\n                description={\"Certificates used to terminated TLS at MinIO\"}\n              />\n            </Grid>\n            {enableCustomCerts && (\n              <Fragment>\n                {!enableAutoCert && (\n                  <Grid item xs={12}>\n                    <TLSHelpBox />\n                  </Grid>\n                )}\n                <Grid item xs={12} className={classes.minioCertsContainer}>\n                  <SectionTitle>MinIO Certificates</SectionTitle>\n                  {minioCertificates.map((keyPair: KeyPair, index) => (\n                    <Grid\n                      item\n                      xs={12}\n                      key={`minio-certs-${keyPair.id}`}\n                      className={classes.minioCertificateRows}\n                    >\n                      <Grid item xs={10} className={classes.fileItem}>\n                        <FileSelector\n                          onChange={(encodedValue, fileName) => {\n                            dispatch(\n                              addFileToKeyPair({\n                                id: keyPair.id,\n                                key: \"cert\",\n                                fileName: fileName,\n                                value: encodedValue,\n                              })\n                            );\n                          }}\n                          accept=\".cer,.crt,.cert,.pem\"\n                          id=\"tlsCert\"\n                          name=\"tlsCert\"\n                          label=\"Cert\"\n                          value={keyPair.cert}\n                        />\n                        <FileSelector\n                          onChange={(encodedValue, fileName) => {\n                            dispatch(\n                              addFileToKeyPair({\n                                id: keyPair.id,\n                                key: \"key\",\n                                fileName: fileName,\n                                value: encodedValue,\n                              })\n                            );\n                          }}\n                          accept=\".key,.pem\"\n                          id=\"tlsKey\"\n                          name=\"tlsKey\"\n                          label=\"Key\"\n                          value={keyPair.key}\n                        />\n                      </Grid>\n\n                      <Grid item xs={2} className={classes.rowActions}>\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => {\n                              dispatch(addKeyPair());\n                            }}\n                            disabled={index !== minioCertificates.length - 1}\n                          >\n                            <AddIcon />\n                          </IconButton>\n                        </div>\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => {\n                              dispatch(deleteKeyPair(keyPair.id));\n                            }}\n                            disabled={minioCertificates.length <= 1}\n                          >\n                            <RemoveIcon />\n                          </IconButton>\n                        </div>\n                      </Grid>\n                    </Grid>\n                  ))}\n                </Grid>\n\n                <Grid item xs={12} className={classes.minioCertsContainer}>\n                  <SectionTitle>MinIO CA Certificates</SectionTitle>\n\n                  {caCertificates.map((keyPair: KeyPair, index) => (\n                    <Grid\n                      item\n                      xs={12}\n                      key={`minio-CA-certs-${keyPair.id}`}\n                      className={classes.minioCACertsRow}\n                    >\n                      <Grid item xs={6}>\n                        <FileSelector\n                          onChange={(encodedValue, fileName) => {\n                            dispatch(\n                              addFileToCaCertificates({\n                                id: keyPair.id,\n                                key: \"cert\",\n                                fileName: fileName,\n                                value: encodedValue,\n                              })\n                            );\n                          }}\n                          accept=\".cer,.crt,.cert,.pem\"\n                          id=\"tlsCert\"\n                          name=\"tlsCert\"\n                          label=\"Cert\"\n                          value={keyPair.cert}\n                        />\n                      </Grid>\n                      <Grid item xs={6}>\n                        <div className={classes.rowActions}>\n                          <div className={classes.overlayAction}>\n                            <IconButton\n                              size={\"small\"}\n                              onClick={() => {\n                                dispatch(addCaCertificate());\n                              }}\n                              disabled={index !== caCertificates.length - 1}\n                            >\n                              <AddIcon />\n                            </IconButton>\n                          </div>\n                          <div className={classes.overlayAction}>\n                            <IconButton\n                              size={\"small\"}\n                              onClick={() => {\n                                dispatch(deleteCaCertificate(keyPair.id));\n                              }}\n                              disabled={caCertificates.length <= 1}\n                            >\n                              <RemoveIcon />\n                            </IconButton>\n                          </div>\n                        </div>\n                      </Grid>\n                    </Grid>\n                  ))}\n                </Grid>\n              </Fragment>\n            )}\n          </Fragment>\n        )}\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(Security);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\n\ntype Props = {\n  children: string;\n};\n\nconst SectionH1: React.FC<Props> = ({ children }) => {\n  return (\n    <h1 style={{ margin: 0, marginBottom: \".8rem\", fontSize: \"1.3rem\" }}>\n      {children}\n    </h1>\n  );\n};\n\nexport default SectionH1;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\n\nimport FileSelector from \"../../../../Common/FormComponents/FileSelector/FileSelector\";\nimport {\n  addFileVaultCa,\n  addFileVaultCert,\n  isPageValid,\n  updateAddField,\n} from \"../../createTenantSlice\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\nimport { clearValidationError } from \"../../../utils\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst VaultKMSAdd = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const vaultEndpoint = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultEndpoint\n  );\n  const vaultEngine = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultEngine\n  );\n  const vaultNamespace = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultNamespace\n  );\n  const vaultPrefix = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultPrefix\n  );\n  const vaultAppRoleEngine = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultAppRoleEngine\n  );\n  const vaultId = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultId\n  );\n  const vaultSecret = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultSecret\n  );\n  const vaultRetry = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultRetry\n  );\n  const vaultPing = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultPing\n  );\n  const vaultCertificate = useSelector(\n    (state: AppState) => state.createTenant.certificates.vaultCertificate\n  );\n  const vaultCA = useSelector(\n    (state: AppState) => state.createTenant.certificates.vaultCA\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  // Validation\n  useEffect(() => {\n    let encryptionValidation: IValidation[] = [];\n\n    encryptionValidation = [\n      ...encryptionValidation,\n      {\n        fieldKey: \"vault_endpoint\",\n        required: true,\n        value: vaultEndpoint,\n      },\n      {\n        fieldKey: \"vault_id\",\n        required: true,\n        value: vaultId,\n      },\n      {\n        fieldKey: \"vault_secret\",\n        required: true,\n        value: vaultSecret,\n      },\n      {\n        fieldKey: \"vault_ping\",\n        required: false,\n        value: vaultPing,\n        customValidation: parseInt(vaultPing) < 0,\n        customValidationMessage: \"Value needs to be 0 or greater\",\n      },\n      {\n        fieldKey: \"vault_retry\",\n        required: false,\n        value: vaultRetry,\n        customValidation: parseInt(vaultRetry) < 0,\n        customValidationMessage: \"Value needs to be 0 or greater\",\n      },\n    ];\n\n    const commonVal = commonFormValidation(encryptionValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"encryption\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    vaultEndpoint,\n    vaultEngine,\n    vaultId,\n    vaultSecret,\n    vaultPing,\n    vaultRetry,\n    dispatch,\n  ]);\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"encryption\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"vault_endpoint\"\n          name=\"vault_endpoint\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"vaultEndpoint\", e.target.value);\n            cleanValidation(\"vault_endpoint\");\n          }}\n          label=\"Endpoint\"\n          value={vaultEndpoint}\n          error={validationErrors[\"vault_endpoint\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"vault_engine\"\n          name=\"vault_engine\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"vaultEngine\", e.target.value);\n            cleanValidation(\"vault_engine\");\n          }}\n          label=\"Engine\"\n          value={vaultEngine}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"vault_namespace\"\n          name=\"vault_namespace\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"vaultNamespace\", e.target.value);\n          }}\n          label=\"Namespace\"\n          value={vaultNamespace}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"vault_prefix\"\n          name=\"vault_prefix\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"vaultPrefix\", e.target.value);\n          }}\n          label=\"Prefix\"\n          value={vaultPrefix}\n        />\n      </Grid>\n\n      <Grid item xs={12}>\n        <fieldset className={classes.fieldGroup}>\n          <legend className={classes.descriptionText}>App Role</legend>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"vault_approle_engine\"\n              name=\"vault_approle_engine\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"vaultAppRoleEngine\", e.target.value);\n              }}\n              label=\"Engine\"\n              value={vaultAppRoleEngine}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"vault_id\"\n              name=\"vault_id\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"vaultId\", e.target.value);\n                cleanValidation(\"vault_id\");\n              }}\n              label=\"AppRole ID\"\n              value={vaultId}\n              error={validationErrors[\"vault_id\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"vault_secret\"\n              name=\"vault_secret\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"vaultSecret\", e.target.value);\n                cleanValidation(\"vault_secret\");\n              }}\n              label=\"AppRole Secret\"\n              value={vaultSecret}\n              error={validationErrors[\"vault_secret\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              type=\"number\"\n              min=\"0\"\n              id=\"vault_retry\"\n              name=\"vault_retry\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"vaultRetry\", e.target.value);\n                cleanValidation(\"vault_retry\");\n              }}\n              label=\"Retry (Seconds)\"\n              value={vaultRetry}\n              error={validationErrors[\"vault_retry\"] || \"\"}\n            />\n          </Grid>\n        </fieldset>\n      </Grid>\n\n      <Grid container className={classes.mutualTlsConfig}>\n        <fieldset className={classes.fieldGroup}>\n          <legend className={classes.descriptionText}>\n            Mutual TLS authentication (optional)\n          </legend>\n          <FileSelector\n            onChange={(encodedValue, fileName) => {\n              dispatch(\n                addFileVaultCert({\n                  key: \"key\",\n                  fileName: fileName,\n                  value: encodedValue,\n                })\n              );\n              cleanValidation(\"vault_key\");\n            }}\n            accept=\".key,.pem\"\n            id=\"vault_key\"\n            name=\"vault_key\"\n            label=\"Key\"\n            value={vaultCertificate.key}\n          />\n          <FileSelector\n            onChange={(encodedValue, fileName) => {\n              dispatch(\n                addFileVaultCert({\n                  key: \"cert\",\n                  fileName: fileName,\n                  value: encodedValue,\n                })\n              );\n              cleanValidation(\"vault_cert\");\n            }}\n            accept=\".cer,.crt,.cert,.pem\"\n            id=\"vault_cert\"\n            name=\"vault_cert\"\n            label=\"Cert\"\n            value={vaultCertificate.cert}\n          />\n          <FileSelector\n            onChange={(encodedValue, fileName) => {\n              dispatch(\n                addFileVaultCa({\n                  fileName: fileName,\n                  value: encodedValue,\n                })\n              );\n              cleanValidation(\"vault_ca\");\n            }}\n            accept=\".cer,.crt,.cert,.pem\"\n            id=\"vault_ca\"\n            name=\"vault_ca\"\n            label=\"CA\"\n            value={vaultCA.cert}\n          />\n        </fieldset>\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        className={classes.formFieldRow}\n        style={{ marginTop: 15 }}\n      >\n        <fieldset className={classes.fieldGroup}>\n          <legend className={classes.descriptionText}>Status</legend>\n          <InputBoxWrapper\n            type=\"number\"\n            min=\"0\"\n            id=\"vault_ping\"\n            name=\"vault_ping\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"vaultPing\", e.target.value);\n              cleanValidation(\"vault_ping\");\n            }}\n            label=\"Ping (Seconds)\"\n            value={vaultPing}\n            error={validationErrors[\"vault_ping\"] || \"\"}\n          />\n        </fieldset>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default VaultKMSAdd;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\nimport { isPageValid, updateAddField } from \"../../createTenantSlice\";\nimport { clearValidationError } from \"../../../utils\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst AzureKMSAdd = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const azureEndpoint = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.azureEndpoint\n  );\n  const azureTenantID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.azureTenantID\n  );\n  const azureClientID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.azureClientID\n  );\n  const azureClientSecret = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.azureClientSecret\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  // Validation\n  useEffect(() => {\n    let encryptionValidation: IValidation[] = [];\n\n    encryptionValidation = [\n      ...encryptionValidation,\n      {\n        fieldKey: \"azure_endpoint\",\n        required: true,\n        value: azureEndpoint,\n      },\n      {\n        fieldKey: \"azure_tenant_id\",\n        required: true,\n        value: azureTenantID,\n      },\n      {\n        fieldKey: \"azure_client_id\",\n        required: true,\n        value: azureClientID,\n      },\n      {\n        fieldKey: \"azure_client_secret\",\n        required: true,\n        value: azureClientSecret,\n      },\n    ];\n\n    const commonVal = commonFormValidation(encryptionValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"encryption\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    azureEndpoint,\n    azureTenantID,\n    azureClientID,\n    azureClientSecret,\n    dispatch,\n  ]);\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"encryption\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"azure_endpoint\"\n          name=\"azure_endpoint\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"azureEndpoint\", e.target.value);\n            cleanValidation(\"azure_endpoint\");\n          }}\n          label=\"Endpoint\"\n          value={azureEndpoint}\n          error={validationErrors[\"azure_endpoint\"] || \"\"}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <fieldset className={classes.fieldGroup}>\n          <legend className={classes.descriptionText}>Credentials</legend>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"azure_tenant_id\"\n              name=\"azure_tenant_id\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"azureTenantID\", e.target.value);\n                cleanValidation(\"azure_tenant_id\");\n              }}\n              label=\"Tenant ID\"\n              value={azureTenantID}\n              error={validationErrors[\"azure_tenant_id\"] || \"\"}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"azure_client_id\"\n              name=\"azure_client_id\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"azureClientID\", e.target.value);\n                cleanValidation(\"azure_client_id\");\n              }}\n              label=\"Client ID\"\n              value={azureClientID}\n              error={validationErrors[\"azure_client_id\"] || \"\"}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"azure_client_secret\"\n              name=\"azure_client_secret\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"azureClientSecret\", e.target.value);\n                cleanValidation(\"azure_client_secret\");\n              }}\n              label=\"Client Secret\"\n              value={azureClientSecret}\n              error={validationErrors[\"azure_client_secret\"] || \"\"}\n            />\n          </Grid>\n        </fieldset>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default AzureKMSAdd;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { updateAddField } from \"../../createTenantSlice\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst GCPKMSAdd = () => {\n  const classes = useStyles();\n  const dispatch = useAppDispatch();\n\n  const gcpProjectID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpProjectID\n  );\n  const gcpEndpoint = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpEndpoint\n  );\n  const gcpClientEmail = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpClientEmail\n  );\n  const gcpClientID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpClientID\n  );\n  const gcpPrivateKeyID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpPrivateKeyID\n  );\n  const gcpPrivateKey = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpPrivateKey\n  );\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"encryption\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"gcp_project_id\"\n          name=\"gcp_project_id\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"gcpProjectID\", e.target.value);\n          }}\n          label=\"Project ID\"\n          value={gcpProjectID}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"gcp_endpoint\"\n          name=\"gcp_endpoint\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"gcpEndpoint\", e.target.value);\n          }}\n          label=\"Endpoint\"\n          value={gcpEndpoint}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <fieldset className={classes.fieldGroup}>\n          <legend className={classes.descriptionText}>Credentials</legend>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"gcp_client_email\"\n              name=\"gcp_client_email\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"gcpClientEmail\", e.target.value);\n              }}\n              label=\"Client Email\"\n              value={gcpClientEmail}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"gcp_client_id\"\n              name=\"gcp_client_id\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"gcpClientID\", e.target.value);\n              }}\n              label=\"Client ID\"\n              value={gcpClientID}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"gcp_private_key_id\"\n              name=\"gcp_private_key_id\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"gcpPrivateKeyID\", e.target.value);\n              }}\n              label=\"Private Key ID\"\n              value={gcpPrivateKeyID}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"gcp_private_key\"\n              name=\"gcp_private_key\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"gcpPrivateKey\", e.target.value);\n              }}\n              label=\"Private Key\"\n              value={gcpPrivateKey}\n            />\n          </Grid>\n        </fieldset>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default GCPKMSAdd;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport FileSelector from \"../../../../Common/FormComponents/FileSelector/FileSelector\";\nimport {\n  addFileGemaltoCa,\n  isPageValid,\n  updateAddField,\n} from \"../../createTenantSlice\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\nimport { clearValidationError } from \"../../../utils\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst GemaltoKMSAdd = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const gemaltoCA = useSelector(\n    (state: AppState) => state.createTenant.certificates.gemaltoCA\n  );\n  const gemaltoEndpoint = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gemaltoEndpoint\n  );\n  const gemaltoToken = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gemaltoToken\n  );\n  const gemaltoDomain = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gemaltoDomain\n  );\n  const gemaltoRetry = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gemaltoRetry\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  // Validation\n  useEffect(() => {\n    let encryptionValidation: IValidation[] = [];\n\n    encryptionValidation = [\n      ...encryptionValidation,\n      {\n        fieldKey: \"gemalto_endpoint\",\n        required: true,\n        value: gemaltoEndpoint,\n      },\n      {\n        fieldKey: \"gemalto_token\",\n        required: true,\n        value: gemaltoToken,\n      },\n      {\n        fieldKey: \"gemalto_domain\",\n        required: true,\n        value: gemaltoDomain,\n      },\n      {\n        fieldKey: \"gemalto_retry\",\n        required: false,\n        value: gemaltoRetry,\n        customValidation: parseInt(gemaltoRetry) < 0,\n        customValidationMessage: \"Value needs to be 0 or greater\",\n      },\n    ];\n\n    const commonVal = commonFormValidation(encryptionValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"encryption\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [gemaltoEndpoint, gemaltoToken, gemaltoDomain, gemaltoRetry, dispatch]);\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"encryption\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"gemalto_endpoint\"\n          name=\"gemalto_endpoint\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"gemaltoEndpoint\", e.target.value);\n            cleanValidation(\"gemalto_endpoint\");\n          }}\n          label=\"Endpoint\"\n          value={gemaltoEndpoint}\n          error={validationErrors[\"gemalto_endpoint\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        style={{\n          marginBottom: 15,\n        }}\n      >\n        <fieldset className={classes.fieldGroup}>\n          <legend className={classes.descriptionText}>Credentials</legend>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"gemalto_token\"\n              name=\"gemalto_token\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"gemaltoToken\", e.target.value);\n                cleanValidation(\"gemalto_token\");\n              }}\n              label=\"Token\"\n              value={gemaltoToken}\n              error={validationErrors[\"gemalto_token\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"gemalto_domain\"\n              name=\"gemalto_domain\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"gemaltoDomain\", e.target.value);\n                cleanValidation(\"gemalto_domain\");\n              }}\n              label=\"Domain\"\n              value={gemaltoDomain}\n              error={validationErrors[\"gemalto_domain\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              type=\"number\"\n              min=\"0\"\n              id=\"gemalto_retry\"\n              name=\"gemalto_retry\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"gemaltoRetry\", e.target.value);\n                cleanValidation(\"gemalto_retry\");\n              }}\n              label=\"Retry (seconds)\"\n              value={gemaltoRetry}\n              error={validationErrors[\"gemalto_retry\"] || \"\"}\n            />\n          </Grid>\n        </fieldset>\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        style={{\n          marginBottom: 15,\n        }}\n      >\n        <fieldset className={classes.fieldGroup}>\n          <legend className={classes.descriptionText}>\n            Custom CA Root certificate verification\n          </legend>\n\n          <FileSelector\n            onChange={(encodedValue, fileName) => {\n              dispatch(\n                addFileGemaltoCa({\n                  fileName: fileName,\n                  value: encodedValue,\n                })\n              );\n              cleanValidation(\"gemalto_ca\");\n            }}\n            accept=\".cer,.crt,.cert,.pem\"\n            id=\"gemalto_ca\"\n            name=\"gemalto_ca\"\n            label=\"CA\"\n            value={gemaltoCA.cert}\n          />\n        </fieldset>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default GemaltoKMSAdd;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\nimport { isPageValid, updateAddField } from \"../../createTenantSlice\";\nimport { clearValidationError } from \"../../../utils\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst AWSKMSAdd = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const awsEndpoint = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.awsEndpoint\n  );\n  const awsRegion = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.awsRegion\n  );\n  const awsKMSKey = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.awsKMSKey\n  );\n  const awsAccessKey = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.awsAccessKey\n  );\n  const awsSecretKey = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.awsSecretKey\n  );\n  const awsToken = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.awsToken\n  );\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  // Validation\n  useEffect(() => {\n    let encryptionValidation: IValidation[] = [];\n\n    encryptionValidation = [\n      ...encryptionValidation,\n      {\n        fieldKey: \"aws_endpoint\",\n        required: true,\n        value: awsEndpoint,\n      },\n      {\n        fieldKey: \"aws_region\",\n        required: true,\n        value: awsRegion,\n      },\n      {\n        fieldKey: \"aws_accessKey\",\n        required: true,\n        value: awsAccessKey,\n      },\n      {\n        fieldKey: \"aws_secretKey\",\n        required: true,\n        value: awsSecretKey,\n      },\n    ];\n\n    const commonVal = commonFormValidation(encryptionValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"encryption\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [awsEndpoint, awsRegion, awsSecretKey, awsAccessKey, dispatch]);\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"encryption\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"aws_endpoint\"\n          name=\"aws_endpoint\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"awsEndpoint\", e.target.value);\n            cleanValidation(\"aws_endpoint\");\n          }}\n          label=\"Endpoint\"\n          value={awsEndpoint}\n          error={validationErrors[\"aws_endpoint\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"aws_region\"\n          name=\"aws_region\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"awsRegion\", e.target.value);\n            cleanValidation(\"aws_region\");\n          }}\n          label=\"Region\"\n          value={awsRegion}\n          error={validationErrors[\"aws_region\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"aws_kmsKey\"\n          name=\"aws_kmsKey\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"awsKMSKey\", e.target.value);\n          }}\n          label=\"KMS Key\"\n          value={awsKMSKey}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <fieldset className={classes.fieldGroup}>\n          <legend className={classes.descriptionText}>Credentials</legend>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"aws_accessKey\"\n              name=\"aws_accessKey\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"awsAccessKey\", e.target.value);\n                cleanValidation(\"aws_accessKey\");\n              }}\n              label=\"Access Key\"\n              value={awsAccessKey}\n              error={validationErrors[\"aws_accessKey\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"aws_secretKey\"\n              name=\"aws_secretKey\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"awsSecretKey\", e.target.value);\n                cleanValidation(\"aws_secretKey\");\n              }}\n              label=\"Secret Key\"\n              value={awsSecretKey}\n              error={validationErrors[\"aws_secretKey\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"aws_token\"\n              name=\"aws_token\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"awsToken\", e.target.value);\n              }}\n              label=\"Token\"\n              value={awsToken}\n            />\n          </Grid>\n        </fieldset>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default AWSKMSAdd;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Paper } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\n\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport { AppState, useAppDispatch } from \"../../../../../store\";\nimport { clearValidationError } from \"../../utils\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport FileSelector from \"../../../Common/FormComponents/FileSelector/FileSelector\";\nimport RadioGroupSelector from \"../../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../utils/validationFunctions\";\nimport SectionH1 from \"../../../Common/SectionH1\";\nimport {\n  addFileClientCert,\n  addFileServerCert,\n  isPageValid,\n  updateAddField,\n} from \"../createTenantSlice\";\nimport VaultKMSAdd from \"./Encryption/VaultKMSAdd\";\nimport AzureKMSAdd from \"./Encryption/AzureKMSAdd\";\nimport GCPKMSAdd from \"./Encryption/GCPKMSAdd\";\nimport GemaltoKMSAdd from \"./Encryption/GemaltoKMSAdd\";\nimport AWSKMSAdd from \"./Encryption/AWSKMSAdd\";\n\ninterface IEncryptionProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    encryptionTypeOptions: {\n      marginBottom: 15,\n    },\n    mutualTlsConfig: {\n      marginTop: 15,\n      \"& fieldset\": {\n        flex: 1,\n      },\n    },\n    rightSpacer: {\n      marginRight: 15,\n    },\n    responsiveContainer: {\n      \"@media (max-width: 900px)\": {\n        display: \"flex\",\n        flexFlow: \"column\",\n      },\n    },\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst Encryption = ({ classes }: IEncryptionProps) => {\n  const dispatch = useAppDispatch();\n\n  const replicas = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.replicas\n  );\n  const enableEncryption = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.enableEncryption\n  );\n  const encryptionType = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.encryptionType\n  );\n\n  const gcpProjectID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpProjectID\n  );\n  const gcpEndpoint = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpEndpoint\n  );\n  const gcpClientEmail = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpClientEmail\n  );\n  const gcpClientID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpClientID\n  );\n  const gcpPrivateKeyID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpPrivateKeyID\n  );\n  const gcpPrivateKey = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpPrivateKey\n  );\n  const enableCustomCertsForKES = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.encryption.enableCustomCertsForKES\n  );\n  const enableAutoCert = useSelector(\n    (state: AppState) => state.createTenant.fields.security.enableAutoCert\n  );\n  const enableTLS = useSelector(\n    (state: AppState) => state.createTenant.fields.security.enableTLS\n  );\n  const minioCertificates = useSelector(\n    (state: AppState) => state.createTenant.certificates.minioCertificates\n  );\n  const serverCertificate = useSelector(\n    (state: AppState) => state.createTenant.certificates.serverCertificate\n  );\n  const clientCertificate = useSelector(\n    (state: AppState) => state.createTenant.certificates.clientCertificate\n  );\n\n  const enableCustomCerts = useSelector(\n    (state: AppState) => state.createTenant.fields.security.enableCustomCerts\n  );\n  const kesSecurityContext = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.kesSecurityContext\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  let encryptionAvailable = false;\n  if (\n    enableTLS &&\n    (enableAutoCert ||\n      (minioCertificates &&\n        minioCertificates.filter(\n          (item) => item.encoded_key && item.encoded_cert\n        ).length > 0))\n  ) {\n    encryptionAvailable = true;\n  }\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"encryption\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  // Validation\n  useEffect(() => {\n    let encryptionValidation: IValidation[] = [];\n\n    if (enableEncryption) {\n      encryptionValidation = [\n        ...encryptionValidation,\n        {\n          fieldKey: \"replicas\",\n          required: true,\n          value: replicas,\n          customValidation: parseInt(replicas) < 1,\n          customValidationMessage: \"Replicas needs to be 1 or greater\",\n        },\n        {\n          fieldKey: \"kes_securityContext_runAsUser\",\n          required: true,\n          value: kesSecurityContext.runAsUser,\n          customValidation:\n            kesSecurityContext.runAsUser === \"\" ||\n            parseInt(kesSecurityContext.runAsUser) < 0,\n          customValidationMessage: `runAsUser must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"kes_securityContext_runAsGroup\",\n          required: true,\n          value: kesSecurityContext.runAsGroup,\n          customValidation:\n            kesSecurityContext.runAsGroup === \"\" ||\n            parseInt(kesSecurityContext.runAsGroup) < 0,\n          customValidationMessage: `runAsGroup must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"kes_securityContext_fsGroup\",\n          required: true,\n          value: kesSecurityContext.fsGroup,\n          customValidation:\n            kesSecurityContext.fsGroup === \"\" ||\n            parseInt(kesSecurityContext.fsGroup) < 0,\n          customValidationMessage: `fsGroup must be present and be 0 or more`,\n        },\n      ];\n\n      if (enableCustomCerts) {\n        encryptionValidation = [\n          ...encryptionValidation,\n          {\n            fieldKey: \"serverKey\",\n            required: !enableAutoCert,\n            value: serverCertificate.encoded_key,\n          },\n          {\n            fieldKey: \"serverCert\",\n            required: !enableAutoCert,\n            value: serverCertificate.encoded_cert,\n          },\n          {\n            fieldKey: \"clientKey\",\n            required: !enableAutoCert,\n            value: clientCertificate.encoded_key,\n          },\n          {\n            fieldKey: \"clientCert\",\n            required: !enableAutoCert,\n            value: clientCertificate.encoded_cert,\n          },\n        ];\n      }\n    }\n\n    const commonVal = commonFormValidation(encryptionValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"encryption\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    enableEncryption,\n    encryptionType,\n    gcpProjectID,\n    gcpEndpoint,\n    gcpClientEmail,\n    gcpClientID,\n    gcpPrivateKeyID,\n    gcpPrivateKey,\n    dispatch,\n    enableAutoCert,\n    enableCustomCerts,\n    serverCertificate.encoded_key,\n    serverCertificate.encoded_cert,\n    clientCertificate.encoded_key,\n    clientCertificate.encoded_cert,\n    kesSecurityContext,\n    replicas,\n  ]);\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <Grid container alignItems={\"center\"}>\n        <Grid item xs>\n          <SectionH1>Encryption</SectionH1>\n        </Grid>\n        <Grid item xs={4} justifyContent={\"end\"} textAlign={\"right\"}>\n          <FormSwitchWrapper\n            label={\"\"}\n            indicatorLabels={[\"Enabled\", \"Disabled\"]}\n            checked={enableEncryption}\n            value={\"tenant_encryption\"}\n            id=\"tenant-encryption\"\n            name=\"tenant-encryption\"\n            onChange={(e) => {\n              const targetD = e.target;\n              const checked = targetD.checked;\n\n              updateField(\"enableEncryption\", checked);\n            }}\n            description=\"\"\n            disabled={!encryptionAvailable}\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <span className={classes.descriptionText}>\n            MinIO Server-Side Encryption (SSE) protects objects as part of write\n            operations, allowing clients to take advantage of server processing\n            power to secure objects at the storage layer (encryption-at-rest).\n            SSE also provides key functionality to regulatory and compliance\n            requirements around secure locking and erasure.\n          </span>\n        </Grid>\n        <Grid xs={12}>\n          <hr className={classes.hrClass} />\n        </Grid>\n\n        {enableEncryption && (\n          <Fragment>\n            <Grid item xs={12} className={classes.encryptionTypeOptions}>\n              <RadioGroupSelector\n                currentSelection={encryptionType}\n                id=\"encryptionType\"\n                name=\"encryptionType\"\n                label=\"Encryption Options\"\n                onChange={(e) => {\n                  updateField(\"encryptionType\", e.target.value);\n                }}\n                selectorOptions={[\n                  { label: \"Vault\", value: \"vault\" },\n                  { label: \"AWS\", value: \"aws\" },\n                  { label: \"Gemalto\", value: \"gemalto\" },\n                  { label: \"GCP\", value: \"gcp\" },\n                  { label: \"Azure\", value: \"azure\" },\n                ]}\n              />\n            </Grid>\n            {encryptionType === \"vault\" && <VaultKMSAdd />}\n            {encryptionType === \"azure\" && <AzureKMSAdd />}\n            {encryptionType === \"gcp\" && <GCPKMSAdd />}\n            {encryptionType === \"aws\" && <AWSKMSAdd />}\n            {encryptionType === \"gemalto\" && <GemaltoKMSAdd />}\n            <div className={classes.headerElement}>\n              <h4 className={classes.h3Section}>Additional Configurations</h4>\n            </div>\n            <Grid item xs={12}>\n              <FormSwitchWrapper\n                value=\"enableCustomCertsForKES\"\n                id=\"enableCustomCertsForKES\"\n                name=\"enableCustomCertsForKES\"\n                checked={enableCustomCertsForKES || !enableAutoCert}\n                onChange={(e) => {\n                  const targetD = e.target;\n                  const checked = targetD.checked;\n\n                  updateField(\"enableCustomCertsForKES\", checked);\n                }}\n                label={\"Custom Certificates\"}\n                disabled={!enableAutoCert}\n              />\n            </Grid>\n            {(enableCustomCertsForKES || !enableAutoCert) && (\n              <Fragment>\n                <Grid container>\n                  <Grid item xs={12} style={{ marginBottom: 15 }}>\n                    <fieldset className={classes.fieldGroup}>\n                      <legend className={classes.descriptionText}>\n                        Encryption Service Certificates\n                      </legend>\n                      <FileSelector\n                        onChange={(encodedValue, fileName) => {\n                          dispatch(\n                            addFileServerCert({\n                              key: \"key\",\n                              fileName: fileName,\n                              value: encodedValue,\n                            })\n                          );\n                          cleanValidation(\"serverKey\");\n                        }}\n                        accept=\".key,.pem\"\n                        id=\"serverKey\"\n                        name=\"serverKey\"\n                        label=\"Key\"\n                        error={validationErrors[\"serverKey\"] || \"\"}\n                        value={serverCertificate.key}\n                        required={!enableAutoCert}\n                      />\n                      <FileSelector\n                        onChange={(encodedValue, fileName) => {\n                          dispatch(\n                            addFileServerCert({\n                              key: \"cert\",\n                              fileName: fileName,\n                              value: encodedValue,\n                            })\n                          );\n                          cleanValidation(\"serverCert\");\n                        }}\n                        accept=\".cer,.crt,.cert,.pem\"\n                        id=\"serverCert\"\n                        name=\"serverCert\"\n                        label=\"Cert\"\n                        error={validationErrors[\"serverCert\"] || \"\"}\n                        value={serverCertificate.cert}\n                        required={!enableAutoCert}\n                      />\n                    </fieldset>\n                  </Grid>\n                </Grid>\n                <Grid container style={{ marginBottom: 15 }}>\n                  <Grid item xs={12}>\n                    <fieldset className={classes.fieldGroup}>\n                      <legend className={classes.descriptionText}>\n                        Mutual TLS authentication with MinIO\n                      </legend>\n                      <FileSelector\n                        onChange={(encodedValue, fileName) => {\n                          dispatch(\n                            addFileClientCert({\n                              key: \"key\",\n                              fileName: fileName,\n                              value: encodedValue,\n                            })\n                          );\n                          cleanValidation(\"clientKey\");\n                        }}\n                        accept=\".key,.pem\"\n                        id=\"clientKey\"\n                        name=\"clientKey\"\n                        label=\"Key\"\n                        error={validationErrors[\"clientKey\"] || \"\"}\n                        value={clientCertificate.key}\n                        required={!enableAutoCert}\n                      />\n                      <FileSelector\n                        onChange={(encodedValue, fileName) => {\n                          dispatch(\n                            addFileClientCert({\n                              key: \"cert\",\n                              fileName: fileName,\n                              value: encodedValue,\n                            })\n                          );\n                          cleanValidation(\"clientCert\");\n                        }}\n                        accept=\".cer,.crt,.cert,.pem\"\n                        id=\"clientCert\"\n                        name=\"clientCert\"\n                        label=\"Cert\"\n                        error={validationErrors[\"clientCert\"] || \"\"}\n                        value={clientCertificate.cert}\n                        required={!enableAutoCert}\n                      />\n                    </fieldset>\n                  </Grid>\n                </Grid>\n              </Fragment>\n            )}\n            <Grid item xs={12}>\n              <Grid item xs={12} classes={classes.formFieldRow}>\n                <InputBoxWrapper\n                  type=\"number\"\n                  min=\"1\"\n                  id=\"replicas\"\n                  name=\"replicas\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"replicas\", e.target.value);\n                    cleanValidation(\"replicas\");\n                  }}\n                  label=\"Replicas\"\n                  value={replicas}\n                  required\n                  error={validationErrors[\"replicas\"] || \"\"}\n                />\n              </Grid>\n\n              <fieldset\n                className={classes.fieldGroup}\n                style={{ marginTop: 15 }}\n              >\n                <legend className={classes.descriptionText}>\n                  SecurityContext for KES pods\n                </legend>\n                <Grid item xs={12} className={classes.kesSecurityContext}>\n                  <div\n                    className={`${classes.multiContainer} ${classes.responsiveContainer}`}\n                  >\n                    <div\n                      className={`${classes.formFieldRow} ${classes.rightSpacer}`}\n                    >\n                      <InputBoxWrapper\n                        type=\"number\"\n                        id=\"kes_securityContext_runAsUser\"\n                        name=\"kes_securityContext_runAsUser\"\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          updateField(\"kesSecurityContext\", {\n                            ...kesSecurityContext,\n                            runAsUser: e.target.value,\n                          });\n                          cleanValidation(\"kes_securityContext_runAsUser\");\n                        }}\n                        label=\"Run As User\"\n                        value={kesSecurityContext.runAsUser}\n                        required\n                        error={\n                          validationErrors[\"kes_securityContext_runAsUser\"] ||\n                          \"\"\n                        }\n                        min=\"0\"\n                      />\n                    </div>\n                    <div\n                      className={`${classes.formFieldRow} ${classes.rightSpacer}`}\n                    >\n                      <InputBoxWrapper\n                        type=\"number\"\n                        id=\"kes_securityContext_runAsGroup\"\n                        name=\"kes_securityContext_runAsGroup\"\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          updateField(\"kesSecurityContext\", {\n                            ...kesSecurityContext,\n                            runAsGroup: e.target.value,\n                          });\n                          cleanValidation(\"kes_securityContext_runAsGroup\");\n                        }}\n                        label=\"Run As Group\"\n                        value={kesSecurityContext.runAsGroup}\n                        required\n                        error={\n                          validationErrors[\"kes_securityContext_runAsGroup\"] ||\n                          \"\"\n                        }\n                        min=\"0\"\n                      />\n                    </div>\n                    <div\n                      className={`${classes.formFieldRow} ${classes.rightSpacer}`}\n                    >\n                      <InputBoxWrapper\n                        type=\"number\"\n                        id=\"kes_securityContext_fsGroup\"\n                        name=\"kes_securityContext_fsGroup\"\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          updateField(\"kesSecurityContext\", {\n                            ...kesSecurityContext,\n                            fsGroup: e.target.value,\n                          });\n                          cleanValidation(\"kes_securityContext_fsGroup\");\n                        }}\n                        label=\"FsGroup\"\n                        value={kesSecurityContext.fsGroup}\n                        required\n                        error={\n                          validationErrors[\"kes_securityContext_fsGroup\"] || \"\"\n                        }\n                        min=\"0\"\n                      />\n                    </div>\n                  </div>\n                </Grid>\n                <br />\n                <Grid item xs={12}>\n                  <div className={classes.multiContainer}>\n                    <FormSwitchWrapper\n                      value=\"kesSecurityContextRunAsNonRoot\"\n                      id=\"kes_securityContext_runAsNonRoot\"\n                      name=\"kes_securityContext_runAsNonRoot\"\n                      checked={kesSecurityContext.runAsNonRoot}\n                      onChange={(e) => {\n                        const targetD = e.target;\n                        const checked = targetD.checked;\n                        updateField(\"kesSecurityContext\", {\n                          ...kesSecurityContext,\n                          runAsNonRoot: checked,\n                        });\n                      }}\n                      label={\"Do not run as Root\"}\n                    />\n                  </div>\n                </Grid>\n              </fieldset>\n            </Grid>\n          </Fragment>\n        )}\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(Encryption);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, IconButton, Paper, SelectChangeEvent } from \"@mui/material\";\nimport { AppState, useAppDispatch } from \"../../../../../store\";\n\nimport {\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../utils/validationFunctions\";\nimport { ErrorResponseHandler } from \"../../../../../common/types\";\nimport { LabelKeyPair } from \"../../types\";\nimport RadioGroupSelector from \"../../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport api from \"../../../../../common/api\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport AddIcon from \"../../../../../icons/AddIcon\";\nimport RemoveIcon from \"../../../../../icons/RemoveIcon\";\nimport SelectWrapper from \"../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport TolerationSelector from \"../../../Common/TolerationSelector/TolerationSelector\";\nimport { setModalErrorSnackMessage } from \"../../../../../systemSlice\";\nimport {\n  addNewToleration,\n  isPageValid,\n  removeToleration,\n  setKeyValuePairs,\n  setTolerationInfo,\n  updateAddField,\n} from \"../createTenantSlice\";\n\ninterface IAffinityProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    overlayAction: {\n      marginLeft: 10,\n      display: \"flex\",\n      alignItems: \"center\",\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    affinityConfigField: {\n      display: \"flex\",\n    },\n    affinityFieldLabel: {\n      display: \"flex\",\n      flexFlow: \"column\",\n      flex: 1,\n    },\n    radioField: {\n      display: \"flex\",\n      alignItems: \"flex-start\",\n      marginTop: 10,\n      \"& div:first-child\": {\n        display: \"flex\",\n        flexFlow: \"column\",\n        alignItems: \"baseline\",\n        textAlign: \"left !important\",\n      },\n    },\n    affinityLabelKey: {\n      \"& div:first-child\": {\n        marginBottom: 0,\n      },\n    },\n    affinityLabelValue: {\n      marginLeft: 10,\n      \"& div:first-child\": {\n        marginBottom: 0,\n      },\n    },\n    rowActions: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    affinityRow: {\n      marginBottom: 10,\n      display: \"flex\",\n    },\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\ninterface OptionPair {\n  label: string;\n  value: string;\n}\n\nconst Affinity = ({ classes }: IAffinityProps) => {\n  const dispatch = useAppDispatch();\n\n  const podAffinity = useSelector(\n    (state: AppState) => state.createTenant.fields.affinity.podAffinity\n  );\n  const nodeSelectorLabels = useSelector(\n    (state: AppState) => state.createTenant.fields.affinity.nodeSelectorLabels\n  );\n  const withPodAntiAffinity = useSelector(\n    (state: AppState) => state.createTenant.fields.affinity.withPodAntiAffinity\n  );\n  const keyValuePairs = useSelector(\n    (state: AppState) => state.createTenant.nodeSelectorPairs\n  );\n  const tolerations = useSelector(\n    (state: AppState) => state.createTenant.tolerations\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n  const [loading, setLoading] = useState<boolean>(true);\n  const [keyValueMap, setKeyValueMap] = useState<{ [key: string]: string[] }>(\n    {}\n  );\n  const [keyOptions, setKeyOptions] = useState<OptionPair[]>([]);\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({\n          pageName: \"affinity\",\n          field: field,\n          value: value,\n        })\n      );\n    },\n    [dispatch]\n  );\n\n  useEffect(() => {\n    if (loading) {\n      api\n        .invoke(\"GET\", `/api/v1/nodes/labels`)\n        .then((res: { [key: string]: string[] }) => {\n          setLoading(false);\n          setKeyValueMap(res);\n          let keys: OptionPair[] = [];\n          for (let k in res) {\n            keys.push({\n              label: k,\n              value: k,\n            });\n          }\n          setKeyOptions(keys);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setLoading(false);\n          dispatch(setModalErrorSnackMessage(err));\n          setKeyValueMap({});\n        });\n    }\n  }, [dispatch, loading]);\n\n  useEffect(() => {\n    if (keyValuePairs) {\n      const vlr = keyValuePairs\n        .filter((kvp) => kvp.key !== \"\")\n        .map((kvp) => `${kvp.key}=${kvp.value}`)\n        .filter((kvs, i, a) => a.indexOf(kvs) === i);\n      const vl = vlr.join(\"&\");\n      updateField(\"nodeSelectorLabels\", vl);\n    }\n  }, [keyValuePairs, updateField]);\n\n  // Validation\n  useEffect(() => {\n    let customAccountValidation: IValidation[] = [];\n\n    if (podAffinity === \"nodeSelector\") {\n      let valid = true;\n\n      const splittedLabels = nodeSelectorLabels.split(\"&\");\n\n      if (splittedLabels.length === 1 && splittedLabels[0] === \"\") {\n        valid = false;\n      }\n\n      splittedLabels.forEach((item: string, index: number) => {\n        const splitItem = item.split(\"=\");\n\n        if (splitItem.length !== 2) {\n          valid = false;\n        }\n\n        if (index + 1 !== splittedLabels.length) {\n          if (splitItem[0] === \"\" || splitItem[1] === \"\") {\n            valid = false;\n          }\n        }\n      });\n\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"labels\",\n          required: true,\n          value: nodeSelectorLabels,\n          customValidation: !valid,\n          customValidationMessage:\n            \"You need to add at least one label key-pair\",\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(customAccountValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"affinity\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [dispatch, podAffinity, nodeSelectorLabels]);\n\n  const updateToleration = (index: number, field: string, value: any) => {\n    const alterToleration = { ...tolerations[index], [field]: value };\n\n    dispatch(\n      setTolerationInfo({\n        index: index,\n        tolerationValue: alterToleration,\n      })\n    );\n  };\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <h3 className={classes.h3Section}>Pod Placement</h3>\n        <span className={classes.descriptionText}>\n          Configure how pods will be assigned to nodes\n        </span>\n      </div>\n      <Grid item xs={12} className={classes.affinityConfigField}>\n        <Grid item className={classes.affinityFieldLabel}>\n          <div className={classes.label}>Type</div>\n          <div\n            className={`${classes.descriptionText} ${classes.affinityHelpText}`}\n          >\n            MinIO supports multiple configurations for Pod Affinity\n          </div>\n          <Grid item className={classes.radioField}>\n            <RadioGroupSelector\n              currentSelection={podAffinity}\n              id=\"affinity-options\"\n              name=\"affinity-options\"\n              label={\" \"}\n              onChange={(e) => {\n                updateField(\"podAffinity\", e.target.value);\n              }}\n              selectorOptions={[\n                { label: \"None\", value: \"none\" },\n                { label: \"Default (Pod Anti-Affinity)\", value: \"default\" },\n                { label: \"Node Selector\", value: \"nodeSelector\" },\n              ]}\n            />\n          </Grid>\n        </Grid>\n      </Grid>\n      {podAffinity === \"nodeSelector\" && (\n        <Fragment>\n          <br />\n          <Grid item xs={12}>\n            <FormSwitchWrapper\n              value=\"with_pod_anti_affinity\"\n              id=\"with_pod_anti_affinity\"\n              name=\"with_pod_anti_affinity\"\n              checked={withPodAntiAffinity}\n              onChange={(e) => {\n                const targetD = e.target;\n                const checked = targetD.checked;\n\n                updateField(\"withPodAntiAffinity\", checked);\n              }}\n              label={\"With Pod Anti-Affinity\"}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <h3>Labels</h3>\n            <span className={classes.error}>{validationErrors[\"labels\"]}</span>\n            <Grid container>\n              {keyValuePairs &&\n                keyValuePairs.map((kvp, i) => {\n                  return (\n                    <Grid\n                      item\n                      xs={12}\n                      className={classes.affinityRow}\n                      key={`affinity-keyVal-${i.toString()}`}\n                    >\n                      <Grid item xs={5} className={classes.affinityLabelKey}>\n                        {keyOptions.length > 0 && (\n                          <SelectWrapper\n                            onChange={(e: SelectChangeEvent<string>) => {\n                              const newKey = e.target.value as string;\n                              const newLKP: LabelKeyPair = {\n                                key: newKey,\n                                value: keyValueMap[newKey][0],\n                              };\n                              const arrCp: LabelKeyPair[] = [...keyValuePairs];\n                              arrCp[i] = newLKP;\n                              dispatch(setKeyValuePairs(arrCp));\n                            }}\n                            id=\"select-access-policy\"\n                            name=\"select-access-policy\"\n                            label={\"\"}\n                            value={kvp.key}\n                            options={keyOptions}\n                          />\n                        )}\n                        {keyOptions.length === 0 && (\n                          <InputBoxWrapper\n                            id={`nodeselector-key-${i.toString()}`}\n                            label={\"\"}\n                            name={`nodeselector-${i.toString()}`}\n                            value={kvp.key}\n                            onChange={(e) => {\n                              const arrCp: LabelKeyPair[] = [...keyValuePairs];\n                              arrCp[i] = {\n                                key: arrCp[i].key,\n                                value: e.target.value as string,\n                              };\n                              dispatch(setKeyValuePairs(arrCp));\n                            }}\n                            index={i}\n                            placeholder={\"Key\"}\n                          />\n                        )}\n                      </Grid>\n                      <Grid item xs={5} className={classes.affinityLabelValue}>\n                        {keyOptions.length > 0 && (\n                          <SelectWrapper\n                            onChange={(e: SelectChangeEvent<string>) => {\n                              const arrCp: LabelKeyPair[] = [...keyValuePairs];\n                              arrCp[i] = {\n                                key: arrCp[i].key,\n                                value: e.target.value as string,\n                              };\n                              dispatch(setKeyValuePairs(arrCp));\n                            }}\n                            id=\"select-access-policy\"\n                            name=\"select-access-policy\"\n                            label={\"\"}\n                            value={kvp.value}\n                            options={\n                              keyValueMap[kvp.key]\n                                ? keyValueMap[kvp.key].map((v) => {\n                                    return { label: v, value: v };\n                                  })\n                                : []\n                            }\n                          />\n                        )}\n                        {keyOptions.length === 0 && (\n                          <InputBoxWrapper\n                            id={`nodeselector-value-${i.toString()}`}\n                            label={\"\"}\n                            name={`nodeselector-${i.toString()}`}\n                            value={kvp.value}\n                            onChange={(e) => {\n                              const arrCp: LabelKeyPair[] = [...keyValuePairs];\n                              arrCp[i] = {\n                                key: arrCp[i].key,\n                                value: e.target.value as string,\n                              };\n                              dispatch(setKeyValuePairs(arrCp));\n                            }}\n                            index={i}\n                            placeholder={\"value\"}\n                          />\n                        )}\n                      </Grid>\n                      <Grid item xs={2} className={classes.rowActions}>\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => {\n                              const arrCp = [...keyValuePairs];\n                              if (keyOptions.length > 0) {\n                                arrCp.push({\n                                  key: keyOptions[0].value,\n                                  value: keyValueMap[keyOptions[0].value][0],\n                                });\n                              } else {\n                                arrCp.push({ key: \"\", value: \"\" });\n                              }\n\n                              dispatch(setKeyValuePairs(arrCp));\n                            }}\n                          >\n                            <AddIcon />\n                          </IconButton>\n                        </div>\n                        {keyValuePairs.length > 1 && (\n                          <div className={classes.overlayAction}>\n                            <IconButton\n                              size={\"small\"}\n                              onClick={() => {\n                                const arrCp = keyValuePairs.filter(\n                                  (item, index) => index !== i\n                                );\n                                dispatch(setKeyValuePairs(arrCp));\n                              }}\n                            >\n                              <RemoveIcon />\n                            </IconButton>\n                          </div>\n                        )}\n                      </Grid>\n                    </Grid>\n                  );\n                })}\n            </Grid>\n          </Grid>\n        </Fragment>\n      )}\n      <Grid item xs={12} className={classes.affinityConfigField}>\n        <Grid item className={classes.affinityFieldLabel}>\n          <h3>Tolerations</h3>\n          <span className={classes.error}>\n            {validationErrors[\"tolerations\"]}\n          </span>\n          <Grid container>\n            {tolerations &&\n              tolerations.map((tol, i) => {\n                return (\n                  <Grid\n                    item\n                    xs={12}\n                    className={classes.affinityRow}\n                    key={`affinity-keyVal-${i.toString()}`}\n                  >\n                    <TolerationSelector\n                      effect={tol.effect}\n                      onEffectChange={(value) => {\n                        updateToleration(i, \"effect\", value);\n                      }}\n                      tolerationKey={tol.key}\n                      onTolerationKeyChange={(value) => {\n                        updateToleration(i, \"key\", value);\n                      }}\n                      operator={tol.operator}\n                      onOperatorChange={(value) => {\n                        updateToleration(i, \"operator\", value);\n                      }}\n                      value={tol.value}\n                      onValueChange={(value) => {\n                        updateToleration(i, \"value\", value);\n                      }}\n                      tolerationSeconds={tol.tolerationSeconds?.seconds || 0}\n                      onSecondsChange={(value) => {\n                        updateToleration(i, \"tolerationSeconds\", {\n                          seconds: value,\n                        });\n                      }}\n                      index={i}\n                    />\n                    <div className={classes.overlayAction}>\n                      <IconButton\n                        size={\"small\"}\n                        onClick={() => {\n                          dispatch(addNewToleration());\n                        }}\n                        disabled={i !== tolerations.length - 1}\n                      >\n                        <AddIcon />\n                      </IconButton>\n                    </div>\n\n                    <div className={classes.overlayAction}>\n                      <IconButton\n                        size={\"small\"}\n                        onClick={() => dispatch(removeToleration(i))}\n                        disabled={tolerations.length <= 1}\n                      >\n                        <RemoveIcon />\n                      </IconButton>\n                    </div>\n                  </Grid>\n                );\n              })}\n          </Grid>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(Affinity);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, Paper } from \"@mui/material\";\nimport {\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport { AppState, useAppDispatch } from \"../../../../../store\";\nimport { clearValidationError } from \"../../utils\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../utils/validationFunctions\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { isPageValid, updateAddField } from \"../createTenantSlice\";\n\ninterface IImagesProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst Images = ({ classes }: IImagesProps) => {\n  const dispatch = useAppDispatch();\n\n  const customImage = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.customImage\n  );\n  const imageName = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.imageName\n  );\n  const customDockerhub = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.customDockerhub\n  );\n  const imageRegistry = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.imageRegistry\n  );\n  const imageRegistryUsername = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.imageRegistryUsername\n  );\n  const imageRegistryPassword = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.imageRegistryPassword\n  );\n\n  const prometheusCustom = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.prometheusEnabled\n  );\n  const tenantCustom = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.tenantCustom\n  );\n  const logSearchCustom = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.logSearchEnabled\n  );\n  const logSearchVolumeSize = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.logSearchVolumeSize\n  );\n\n  const prometheusVolumeSize = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.prometheusVolumeSize\n  );\n\n  const logSearchSelectedStorageClass = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.logSearchSelectedStorageClass\n  );\n  const logSearchImage = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.logSearchImage\n  );\n  const kesImage = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.kesImage\n  );\n  const logSearchPostgresImage = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.logSearchPostgresImage\n  );\n  const logSearchPostgresInitImage = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.logSearchPostgresInitImage\n  );\n  const prometheusSelectedStorageClass = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.prometheusSelectedStorageClass\n  );\n  const prometheusImage = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.prometheusImage\n  );\n  const prometheusSidecarImage = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.prometheusSidecarImage\n  );\n  const prometheusInitImage = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.prometheusInitImage\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"configure\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  // Validation\n  useEffect(() => {\n    let customAccountValidation: IValidation[] = [];\n\n    if (prometheusCustom) {\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"prometheus_storage_class\",\n          required: true,\n          value: prometheusSelectedStorageClass,\n          customValidation: prometheusSelectedStorageClass === \"\",\n          customValidationMessage: \"Field cannot be empty\",\n        },\n        {\n          fieldKey: \"prometheus_volume_size\",\n          required: true,\n          value: prometheusVolumeSize,\n          customValidation:\n            prometheusVolumeSize === \"\" || parseInt(prometheusVolumeSize) <= 0,\n          customValidationMessage: `Volume size must be present and be greatter than 0`,\n        },\n      ];\n    }\n    if (logSearchCustom) {\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"log_search_storage_class\",\n          required: true,\n          value: logSearchSelectedStorageClass,\n          customValidation: logSearchSelectedStorageClass === \"\",\n          customValidationMessage: \"Field cannot be empty\",\n        },\n        {\n          fieldKey: \"log_search_volume_size\",\n          required: true,\n          value: logSearchVolumeSize,\n          customValidation:\n            logSearchVolumeSize === \"\" || parseInt(logSearchVolumeSize) <= 0,\n          customValidationMessage: `Volume size must be present and be greatter than 0`,\n        },\n      ];\n    }\n\n    if (customImage) {\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"image\",\n          required: false,\n          value: imageName,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage: \"Format must be of form: 'minio/minio:VERSION'\",\n        },\n        {\n          fieldKey: \"logSearchImage\",\n          required: false,\n          value: logSearchImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'minio/operator:VERSION'\",\n        },\n        {\n          fieldKey: \"kesImage\",\n          required: false,\n          value: kesImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage: \"Format must be of form: 'minio/kes:VERSION'\",\n        },\n        {\n          fieldKey: \"logSearchPostgresImage\",\n          required: false,\n          value: logSearchPostgresImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'library/postgres:VERSION'\",\n        },\n        {\n          fieldKey: \"logSearchPostgresInitImage\",\n          required: false,\n          value: logSearchPostgresInitImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'library/busybox:VERSION'\",\n        },\n        {\n          fieldKey: \"prometheusImage\",\n          required: false,\n          value: prometheusImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'minio/prometheus:VERSION'\",\n        },\n        {\n          fieldKey: \"prometheusSidecarImage\",\n          required: false,\n          value: prometheusSidecarImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'project/container:VERSION'\",\n        },\n        {\n          fieldKey: \"prometheusInitImage\",\n          required: false,\n          value: prometheusInitImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'library/busybox:VERSION'\",\n        },\n      ];\n      if (customDockerhub) {\n        customAccountValidation = [\n          ...customAccountValidation,\n          {\n            fieldKey: \"registry\",\n            required: true,\n            value: imageRegistry,\n          },\n          {\n            fieldKey: \"registryUsername\",\n            required: true,\n            value: imageRegistryUsername,\n          },\n          {\n            fieldKey: \"registryPassword\",\n            required: true,\n            value: imageRegistryPassword,\n          },\n        ];\n      }\n    }\n\n    const commonVal = commonFormValidation(customAccountValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"configure\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    customImage,\n    imageName,\n    logSearchImage,\n    kesImage,\n    logSearchPostgresImage,\n    logSearchPostgresInitImage,\n    prometheusImage,\n    prometheusSidecarImage,\n    prometheusInitImage,\n    customDockerhub,\n    imageRegistry,\n    imageRegistryUsername,\n    imageRegistryPassword,\n    dispatch,\n    prometheusCustom,\n    tenantCustom,\n    logSearchCustom,\n    prometheusSelectedStorageClass,\n    prometheusVolumeSize,\n    logSearchSelectedStorageClass,\n    logSearchVolumeSize,\n  ]);\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <h3 className={classes.h3Section}>Container Images</h3>\n        <span className={classes.descriptionText}>\n          Specify the container images used by the Tenant and it's features.\n        </span>\n      </div>\n\n      <Fragment>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"image\"\n            name=\"image\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"imageName\", e.target.value);\n              cleanValidation(\"image\");\n            }}\n            label=\"MinIO\"\n            value={imageName}\n            error={validationErrors[\"image\"] || \"\"}\n            placeholder=\"minio/minio:RELEASE.2022-02-26T02-54-46Z\"\n          />\n        </Grid>\n\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"kesImage\"\n            name=\"kesImage\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"kesImage\", e.target.value);\n              cleanValidation(\"kesImage\");\n            }}\n            label=\"KES\"\n            value={kesImage}\n            error={validationErrors[\"kesImage\"] || \"\"}\n            placeholder=\"minio/kes:v0.17.6\"\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <h4>Log Search</h4>\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"logSearchImage\"\n            name=\"logSearchImage\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"logSearchImage\", e.target.value);\n              cleanValidation(\"logSearchImage\");\n            }}\n            label=\"API\"\n            value={logSearchImage}\n            error={validationErrors[\"logSearchImage\"] || \"\"}\n            placeholder=\"minio/operator:v4.4.22\"\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"logSearchPostgresImage\"\n            name=\"logSearchPostgresImage\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"logSearchPostgresImage\", e.target.value);\n              cleanValidation(\"logSearchPostgresImage\");\n            }}\n            label=\"PostgreSQL\"\n            value={logSearchPostgresImage}\n            error={validationErrors[\"logSearchPostgresImage\"] || \"\"}\n            placeholder=\"library/postgres:13\"\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"logSearchPostgresInitImage\"\n            name=\"logSearchPostgresInitImage\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"logSearchPostgresInitImage\", e.target.value);\n              cleanValidation(\"logSearchPostgresInitImage\");\n            }}\n            label=\"PostgreSQL Init\"\n            value={logSearchPostgresInitImage}\n            error={validationErrors[\"logSearchPostgresInitImage\"] || \"\"}\n            placeholder=\"library/busybox:1.33.1\"\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <h4>Monitoring</h4>\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"prometheusImage\"\n            name=\"prometheusImage\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"prometheusImage\", e.target.value);\n              cleanValidation(\"prometheusImage\");\n            }}\n            label=\"Prometheus\"\n            value={prometheusImage}\n            error={validationErrors[\"prometheusImage\"] || \"\"}\n            placeholder=\"quay.io/prometheus/prometheus:latest\"\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"prometheusSidecarImage\"\n            name=\"prometheusSidecarImage\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"prometheusSidecarImage\", e.target.value);\n              cleanValidation(\"prometheusSidecarImage\");\n            }}\n            label=\"Prometheus Sidecar\"\n            value={prometheusSidecarImage}\n            error={validationErrors[\"prometheusSidecarImage\"] || \"\"}\n            placeholder=\"library/alpine:latest\"\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"prometheusInitImage\"\n            name=\"prometheusInitImage\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"prometheusInitImage\", e.target.value);\n              cleanValidation(\"prometheusInitImage\");\n            }}\n            label=\"Prometheus Init\"\n            value={prometheusInitImage}\n            error={validationErrors[\"prometheusInitImage\"] || \"\"}\n            placeholder=\"library/busybox:1.33.1\"\n          />\n        </Grid>\n      </Fragment>\n\n      {customImage && (\n        <Fragment>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <h4>Custom Container Registry</h4>\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <FormSwitchWrapper\n              value=\"custom_docker_hub\"\n              id=\"custom_docker_hub\"\n              name=\"custom_docker_hub\"\n              checked={customDockerhub}\n              onChange={(e) => {\n                const targetD = e.target;\n                const checked = targetD.checked;\n\n                updateField(\"customDockerhub\", checked);\n              }}\n              label={\"Use a private container registry\"}\n            />\n          </Grid>\n        </Fragment>\n      )}\n      {customDockerhub && (\n        <Fragment>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"registry\"\n              name=\"registry\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"imageRegistry\", e.target.value);\n              }}\n              label=\"Endpoint\"\n              value={imageRegistry}\n              error={validationErrors[\"registry\"] || \"\"}\n              placeholder=\"https://index.docker.io/v1/\"\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"registryUsername\"\n              name=\"registryUsername\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"imageRegistryUsername\", e.target.value);\n              }}\n              label=\"Username\"\n              value={imageRegistryUsername}\n              error={validationErrors[\"registryUsername\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"registryPassword\"\n              name=\"registryPassword\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"imageRegistryPassword\", e.target.value);\n              }}\n              label=\"Password\"\n              value={imageRegistryPassword}\n              error={validationErrors[\"registryPassword\"] || \"\"}\n              required\n            />\n          </Grid>\n        </Fragment>\n      )}\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(Images);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { AppState } from \"../../../../../store\";\nimport {\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableRow from \"@mui/material/TableRow\";\nimport { niceBytes } from \"../../../../../common/utils\";\n\nimport { Divider } from \"@mui/material\";\n\ninterface ISizePreviewProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      margin: 4,\n    },\n    table: {\n      \"& .MuiTableCell-root\": {\n        fontSize: 13,\n      },\n    },\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst SizePreview = ({ classes }: ISizePreviewProps) => {\n  const nodes = useSelector(\n    (state: AppState) => state.createTenant.fields.tenantSize.nodes\n  );\n  const memoryNode = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.tenantSize.resourcesMemoryRequest\n  );\n  const ecParity = useSelector(\n    (state: AppState) => state.createTenant.fields.tenantSize.ecParity\n  );\n\n  const distribution = useSelector(\n    (state: AppState) => state.createTenant.fields.tenantSize.distribution\n  );\n  const ecParityCalc = useSelector(\n    (state: AppState) => state.createTenant.fields.tenantSize.ecParityCalc\n  );\n\n  const cpuToUse = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.tenantSize.resourcesCPURequest\n  );\n  const integrationSelection = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.tenantSize.integrationSelection\n  );\n\n  const usableInformation = ecParityCalc.storageFactors.find(\n    (element) => element.erasureCode === ecParity\n  );\n\n  return (\n    <div className={classes.root}>\n      <h4>Resource Allocation</h4>\n      <Divider />\n      <Table className={classes.table} aria-label=\"simple table\" size={\"small\"}>\n        <TableBody>\n          <TableRow>\n            <TableCell scope=\"row\">Number of Servers</TableCell>\n            <TableCell align=\"right\">\n              {parseInt(nodes) > 0 ? nodes : \"-\"}\n            </TableCell>\n          </TableRow>\n          {integrationSelection.typeSelection === \"\" &&\n            integrationSelection.storageClass === \"\" && (\n              <Fragment>\n                <TableRow>\n                  <TableCell scope=\"row\">Drives per Server</TableCell>\n                  <TableCell align=\"right\">\n                    {distribution ? distribution.disks : \"-\"}\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell scope=\"row\">Drive Capacity</TableCell>\n                  <TableCell align=\"right\">\n                    {distribution ? niceBytes(distribution.pvSize) : \"-\"}\n                  </TableCell>\n                </TableRow>\n              </Fragment>\n            )}\n\n          <TableRow>\n            <TableCell scope=\"row\">Total Volumes</TableCell>\n            <TableCell align=\"right\">\n              {distribution ? distribution.persistentVolumes : \"-\"}\n            </TableCell>\n          </TableRow>\n          {integrationSelection.typeSelection === \"\" &&\n            integrationSelection.storageClass === \"\" && (\n              <Fragment>\n                <TableRow>\n                  <TableCell scope=\"row\">Memory per Node</TableCell>\n                  <TableCell align=\"right\">{memoryNode} Gi</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell style={{ borderBottom: 0 }} scope=\"row\">\n                    CPU Selection\n                  </TableCell>\n                  <TableCell style={{ borderBottom: 0 }} align=\"right\">\n                    {cpuToUse}\n                  </TableCell>\n                </TableRow>\n              </Fragment>\n            )}\n        </TableBody>\n      </Table>\n      {ecParityCalc.error === 0 && usableInformation && (\n        <Fragment>\n          <h4>Erasure Code Configuration</h4>\n          <Divider />\n          <Table\n            className={classes.table}\n            aria-label=\"simple table\"\n            size={\"small\"}\n          >\n            <TableBody>\n              <TableRow>\n                <TableCell scope=\"row\">EC Parity</TableCell>\n                <TableCell align=\"right\">\n                  {ecParity !== \"\" ? ecParity : \"-\"}\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell scope=\"row\">Raw Capacity</TableCell>\n                <TableCell align=\"right\">\n                  {niceBytes(ecParityCalc.rawCapacity)}\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell scope=\"row\">Usable Capacity</TableCell>\n                <TableCell align=\"right\">\n                  {niceBytes(usableInformation.maxCapacity)}\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell style={{ borderBottom: 0 }} scope=\"row\">\n                  Server Failures Tolerated\n                </TableCell>\n                <TableCell style={{ borderBottom: 0 }} align=\"right\">\n                  {distribution\n                    ? Math.floor(\n                        usableInformation.maxFailureTolerations /\n                          distribution.disks\n                      )\n                    : \"-\"}\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </Fragment>\n      )}\n      {integrationSelection.typeSelection !== \"\" &&\n        integrationSelection.storageClass !== \"\" && (\n          <Fragment>\n            <h4>Single Instance Configuration</h4>\n            <Divider />\n            <Table\n              className={classes.table}\n              aria-label=\"simple table\"\n              size={\"small\"}\n            >\n              <TableBody>\n                <TableRow>\n                  <TableCell scope=\"row\">CPU</TableCell>\n                  <TableCell align=\"right\">\n                    {integrationSelection.CPU !== 0\n                      ? integrationSelection.CPU\n                      : \"-\"}\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell scope=\"row\">Memory</TableCell>\n                  <TableCell align=\"right\">\n                    {integrationSelection.memory !== 0\n                      ? `${integrationSelection.memory} Gi`\n                      : \"-\"}\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell scope=\"row\">Drives per Server</TableCell>\n                  <TableCell align=\"right\">\n                    {integrationSelection.drivesPerServer !== 0\n                      ? `${integrationSelection.drivesPerServer}`\n                      : \"-\"}\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell style={{ borderBottom: 0 }} scope=\"row\">\n                    Drive Size\n                  </TableCell>\n                  <TableCell style={{ borderBottom: 0 }} align=\"right\">\n                    {integrationSelection.driveSize.driveSize}\n                    {integrationSelection.driveSize.sizeUnit}\n                  </TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </Fragment>\n        )}\n    </div>\n  );\n};\n\nexport default withStyles(styles)(SizePreview);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { DialogContentText, LinearProgress } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  deleteDialogStyles,\n  modalBasic,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport ConfirmDialog from \"../../../../Common/ModalWrapper/ConfirmDialog\";\nimport { ConfirmModalIcon } from \"../../../../../../icons\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { closeAddNSModal } from \"../../createTenantSlice\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { createNamespaceAsync } from \"../../thunks/namespaceThunks\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    wrapText: {\n      maxWidth: \"200px\",\n      whiteSpace: \"normal\",\n      wordWrap: \"break-word\",\n    },\n    ...modalBasic,\n    ...deleteDialogStyles,\n  })\n);\n\nconst AddNamespaceModal = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const namespace = useSelector(\n    (state: AppState) => state.createTenant.fields.nameTenant.namespace\n  );\n  const addNamespaceLoading = useSelector(\n    (state: AppState) => state.createTenant.addNSLoading\n  );\n  const addNamespaceOpen = useSelector(\n    (state: AppState) => state.createTenant.addNSOpen\n  );\n\n  return (\n    <ConfirmDialog\n      title={`New namespace`}\n      confirmText={\"Create\"}\n      confirmButtonProps={{\n        color: \"primary\",\n        variant: \"contained\",\n      }}\n      isOpen={addNamespaceOpen}\n      titleIcon={<ConfirmModalIcon />}\n      isLoading={addNamespaceLoading}\n      onConfirm={() => {\n        dispatch(createNamespaceAsync());\n      }}\n      onClose={() => {\n        dispatch(closeAddNSModal());\n      }}\n      confirmationContent={\n        <React.Fragment>\n          {addNamespaceLoading && <LinearProgress />}\n          <DialogContentText>\n            Are you sure you want to add a namespace called\n            <br />\n            <b className={classes.wrapText}>{namespace}</b>?\n          </DialogContentText>\n        </React.Fragment>\n      }\n    />\n  );\n};\n\nexport default AddNamespaceModal;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useMemo } from \"react\";\nimport AddIcon from \"../../../../../../icons/AddIcon\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { openAddNSModal, setNamespace } from \"../../createTenantSlice\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport AddNamespaceModal from \"../helpers/AddNamespaceModal\";\nimport debounce from \"lodash/debounce\";\nimport { IMkEnvs } from \"./utils\";\nimport { validateNamespaceAsync } from \"../../thunks/namespaceThunks\";\n\nconst NamespaceSelector = ({ formToRender }: { formToRender?: IMkEnvs }) => {\n  const dispatch = useAppDispatch();\n\n  const namespace = useSelector(\n    (state: AppState) => state.createTenant.fields.nameTenant.namespace\n  );\n\n  const showNSCreateButton = useSelector(\n    (state: AppState) => state.createTenant.showNSCreateButton\n  );\n\n  const namespaceError = useSelector(\n    (state: AppState) => state.createTenant.validationErrors[\"namespace\"]\n  );\n  const openAddNSConfirm = useSelector(\n    (state: AppState) => state.createTenant.addNSOpen\n  );\n\n  const debounceNamespace = useMemo(\n    () =>\n      debounce(() => {\n        dispatch(validateNamespaceAsync());\n      }, 500),\n    [dispatch]\n  );\n\n  useEffect(() => {\n    if (namespace !== \"\") {\n      debounceNamespace();\n      // Cancel previous debounce calls during useEffect cleanup.\n      return debounceNamespace.cancel;\n    }\n  }, [debounceNamespace, namespace]);\n\n  const addNamespace = () => {\n    dispatch(openAddNSModal());\n  };\n\n  return (\n    <Fragment>\n      {openAddNSConfirm && <AddNamespaceModal />}\n      <InputBoxWrapper\n        id=\"namespace\"\n        name=\"namespace\"\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n          dispatch(setNamespace(e.target.value));\n        }}\n        label=\"Namespace\"\n        value={namespace}\n        error={namespaceError || \"\"}\n        overlayId={\"add-namespace\"}\n        overlayIcon={showNSCreateButton ? <AddIcon /> : null}\n        overlayAction={addNamespace}\n        required\n      />\n    </Fragment>\n  );\n};\nexport default NamespaceSelector;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport get from \"lodash/get\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport SelectWrapper from \"../../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport SizePreview from \"../SizePreview\";\nimport TenantSize from \"./TenantSize\";\nimport { Paper, SelectChangeEvent } from \"@mui/material\";\nimport { IMkEnvs, mkPanelConfigurations } from \"./utils\";\nimport {\n  isPageValid,\n  setStorageType,\n  setTenantName,\n  updateAddField,\n} from \"../../createTenantSlice\";\nimport { selFeatures } from \"../../../../consoleSlice\";\nimport NamespaceSelector from \"./NamespaceSelector\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    sizePreview: {\n      position: \"fixed\",\n      marginLeft: 10,\n      background: \"#FFFFFF\",\n      border: \"1px solid #EAEAEA\",\n      padding: 2,\n    },\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst NameTenantField = () => {\n  const dispatch = useAppDispatch();\n  const tenantName = useSelector(\n    (state: AppState) => state.createTenant.fields.nameTenant.tenantName\n  );\n\n  const tenantNameError = useSelector(\n    (state: AppState) => state.createTenant.validationErrors[\"tenant-name\"]\n  );\n\n  return (\n    <InputBoxWrapper\n      id=\"tenant-name\"\n      name=\"tenant-name\"\n      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n        dispatch(setTenantName(e.target.value));\n      }}\n      label=\"Name\"\n      value={tenantName}\n      required\n      error={tenantNameError || \"\"}\n    />\n  );\n};\n\ninterface INameTenantMainScreen {\n  classes: any;\n  formToRender?: IMkEnvs;\n}\n\nconst NameTenantMain = ({ classes, formToRender }: INameTenantMainScreen) => {\n  const dispatch = useAppDispatch();\n\n  const selectedStorageClass = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.nameTenant.selectedStorageClass\n  );\n  const selectedStorageType = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.nameTenant.selectedStorageType\n  );\n  const storageClasses = useSelector(\n    (state: AppState) => state.createTenant.storageClasses\n  );\n  const features = useSelector(selFeatures);\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: string) => {\n      dispatch(\n        updateAddField({ pageName: \"nameTenant\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  // Validation\n  useEffect(() => {\n    const isValid =\n      (formToRender === IMkEnvs.default && storageClasses.length > 0) ||\n      (formToRender !== IMkEnvs.default && selectedStorageType !== \"\");\n\n    dispatch(isPageValid({ pageName: \"nameTenant\", valid: isValid }));\n  }, [storageClasses, dispatch, selectedStorageType, formToRender]);\n\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item xs={8} md={9}>\n          <Paper className={classes.paperWrapper} sx={{ minHeight: 550 }}>\n            <Grid container>\n              <Grid item xs={12}>\n                <div className={classes.headerElement}>\n                  <h3 className={classes.h3Section}>Name</h3>\n                  <span className={classes.descriptionText}>\n                    How would you like to name this new tenant?\n                  </span>\n                </div>\n                <div className={classes.formFieldRow}>\n                  <NameTenantField />\n                </div>\n              </Grid>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <NamespaceSelector formToRender={formToRender} />\n              </Grid>\n              {formToRender === IMkEnvs.default ? (\n                <Grid item xs={12} className={classes.formFieldRow}>\n                  <SelectWrapper\n                    id=\"storage_class\"\n                    name=\"storage_class\"\n                    onChange={(e: SelectChangeEvent<string>) => {\n                      updateField(\n                        \"selectedStorageClass\",\n                        e.target.value as string\n                      );\n                    }}\n                    label=\"Storage Class\"\n                    value={selectedStorageClass}\n                    options={storageClasses}\n                    disabled={storageClasses.length < 1}\n                  />\n                </Grid>\n              ) : (\n                <Grid item xs={12} className={classes.formFieldRow}>\n                  <SelectWrapper\n                    id=\"storage_type\"\n                    name=\"storage_type\"\n                    onChange={(e: SelectChangeEvent<string>) => {\n                      dispatch(\n                        setStorageType({\n                          storageType: e.target.value as string,\n                          features: features,\n                        })\n                      );\n                    }}\n                    label={get(\n                      mkPanelConfigurations,\n                      `${formToRender}.variantSelectorLabel`,\n                      \"Storage Type\"\n                    )}\n                    value={selectedStorageType}\n                    options={get(\n                      mkPanelConfigurations,\n                      `${formToRender}.variantSelectorValues`,\n                      []\n                    )}\n                  />\n                </Grid>\n              )}\n              {formToRender === IMkEnvs.default ? (\n                <TenantSize />\n              ) : (\n                get(\n                  mkPanelConfigurations,\n                  `${formToRender}.sizingComponent`,\n                  null\n                )\n              )}\n            </Grid>\n          </Paper>\n        </Grid>\n        <Grid item xs={4} md={3}>\n          <div className={classes.sizePreview}>\n            <SizePreview />\n          </div>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(NameTenantMain);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport get from \"lodash/get\";\nimport NameTenantMain from \"./NameTenantMain\";\nimport { IMkEnvs, resourcesConfigurations } from \"./utils\";\nimport { selFeatures } from \"../../../../consoleSlice\";\n\nconst TenantResources = () => {\n  const features = useSelector(selFeatures);\n  const [formRender, setFormRender] = useState<IMkEnvs | null>(null);\n\n  useEffect(() => {\n    let setConfiguration = IMkEnvs.default;\n\n    if (features && features.length !== 0) {\n      const possibleVariables = Object.keys(resourcesConfigurations);\n\n      possibleVariables.forEach((element) => {\n        if (features.includes(element)) {\n          setConfiguration = get(\n            resourcesConfigurations,\n            element,\n            IMkEnvs.default\n          );\n        }\n      });\n    }\n\n    setFormRender(setConfiguration);\n  }, [features]);\n\n  if (formRender === null) {\n    return null;\n  }\n\n  return <NameTenantMain formToRender={formRender} />;\n};\n\nexport default TenantResources;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, Paper, SelectChangeEvent } from \"@mui/material\";\nimport {\n  createTenantCommon,\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport { AppState, useAppDispatch } from \"../../../../../store\";\nimport { clearValidationError } from \"../../utils\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../utils/validationFunctions\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport SelectWrapper from \"../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport InputUnitMenu from \"../../../Common/FormComponents/InputUnitMenu/InputUnitMenu\";\nimport SectionH1 from \"../../../Common/SectionH1\";\nimport { isPageValid, updateAddField } from \"../createTenantSlice\";\n\ninterface IConfigureProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    configSectionItem: {\n      marginRight: 15,\n\n      \"& .multiContainer\": {\n        border: \"1px solid red\",\n      },\n    },\n    fieldGroup: {\n      ...createTenantCommon.fieldGroup,\n      paddingTop: 15,\n      marginBottom: 25,\n    },\n    responsiveSectionItem: {\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n        alignItems: \"flex-start\",\n\n        \"& div > div\": {\n          marginBottom: 5,\n          marginRight: 0,\n        },\n      },\n    },\n\n    logSearchEnabledFields: {\n      marginLeft: 20, // 2nd Level(15+15)\n      padding: 10,\n      width: \"90%\",\n      margin: \"auto\",\n    },\n    fieldSpaceTop: {\n      marginTop: 15,\n    },\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst ConfigLogSearch = ({ classes }: IConfigureProps) => {\n  const dispatch = useAppDispatch();\n\n  const storageClasses = useSelector(\n    (state: AppState) => state.createTenant.storageClasses\n  );\n  const logSearchEnabled = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.logSearchEnabled\n  );\n  const logSearchVolumeSize = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.logSearchVolumeSize\n  );\n  const logSearchSelectedStorageClass = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.logSearchSelectedStorageClass\n  );\n  const logSearchImage = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.logSearchImage\n  );\n  const logSearchPostgresImage = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.logSearchPostgresImage\n  );\n  const logSearchPostgresInitImage = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.logSearchPostgresInitImage\n  );\n  const selectedStorageClass = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.nameTenant.selectedStorageClass\n  );\n  const tenantSecurityContext = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.tenantSecurityContext\n  );\n  const logSearchSecurityContext = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.logSearchSecurityContext\n  );\n  const logSearchPostgresSecurityContext = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.logSearchPostgresSecurityContext\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  const configureSTClasses = [\n    { label: \"Default\", value: \"default\" },\n    ...storageClasses,\n  ];\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"configure\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  // Validation\n  useEffect(() => {\n    let customAccountValidation: IValidation[] = [];\n\n    if (logSearchEnabled) {\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"log_search_storage_class\",\n          required: true,\n          value: logSearchSelectedStorageClass,\n          customValidation: logSearchSelectedStorageClass === \"\",\n          customValidationMessage: \"Field cannot be empty\",\n        },\n        {\n          fieldKey: \"log_search_volume_size\",\n          required: true,\n          value: logSearchVolumeSize,\n          customValidation:\n            logSearchVolumeSize === \"\" || parseInt(logSearchVolumeSize) <= 0,\n          customValidationMessage: `Volume size must be present and be greatter than 0`,\n        },\n        {\n          fieldKey: \"logSearch_securityContext_runAsUser\",\n          required: true,\n          value: logSearchSecurityContext.runAsUser,\n          customValidation:\n            logSearchSecurityContext.runAsUser === \"\" ||\n            parseInt(logSearchSecurityContext.runAsUser) < 0,\n          customValidationMessage: `runAsUser must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"logSearch_securityContext_runAsGroup\",\n          required: true,\n          value: logSearchSecurityContext.runAsGroup,\n          customValidation:\n            logSearchSecurityContext.runAsGroup === \"\" ||\n            parseInt(logSearchSecurityContext.runAsGroup) < 0,\n          customValidationMessage: `runAsGroup must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"logSearch_securityContext_fsGroup\",\n          required: true,\n          value: logSearchSecurityContext.fsGroup,\n          customValidation:\n            logSearchSecurityContext.fsGroup === \"\" ||\n            parseInt(logSearchSecurityContext.fsGroup) < 0,\n          customValidationMessage: `fsGroup must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"postgres_securityContext_runAsUser\",\n          required: true,\n          value: logSearchPostgresSecurityContext.runAsUser,\n          customValidation:\n            logSearchPostgresSecurityContext.runAsUser === \"\" ||\n            parseInt(logSearchPostgresSecurityContext.runAsUser) < 0,\n          customValidationMessage: `runAsUser must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"postgres_securityContext_runAsGroup\",\n          required: true,\n          value: logSearchSecurityContext.runAsGroup,\n          customValidation:\n            logSearchPostgresSecurityContext.runAsGroup === \"\" ||\n            parseInt(logSearchPostgresSecurityContext.runAsGroup) < 0,\n          customValidationMessage: `runAsGroup must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"postgres_securityContext_fsGroup\",\n          required: true,\n          value: logSearchPostgresSecurityContext.fsGroup,\n          customValidation:\n            logSearchPostgresSecurityContext.fsGroup === \"\" ||\n            parseInt(logSearchPostgresSecurityContext.fsGroup) < 0,\n          customValidationMessage: `fsGroup must be present and be 0 or more`,\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(customAccountValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"configure\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    logSearchImage,\n    logSearchPostgresImage,\n    logSearchPostgresInitImage,\n    dispatch,\n    logSearchEnabled,\n    logSearchSelectedStorageClass,\n    logSearchVolumeSize,\n    tenantSecurityContext,\n    logSearchSecurityContext,\n    logSearchPostgresSecurityContext,\n  ]);\n\n  useEffect(() => {\n    // New default values in current selection is invalid\n    if (storageClasses.length > 0) {\n      const filterLogSearch = storageClasses.filter(\n        (item: any) => item.value === logSearchSelectedStorageClass\n      );\n      if (filterLogSearch.length === 0) {\n        updateField(\"logSearchSelectedStorageClass\", \"default\");\n      }\n    }\n  }, [\n    logSearchSelectedStorageClass,\n    selectedStorageClass,\n    storageClasses,\n    updateField,\n  ]);\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <Grid container alignItems={\"center\"}>\n        <Grid item xs>\n          <SectionH1>Audit Log</SectionH1>\n        </Grid>\n        <Grid item xs={4}>\n          <FormSwitchWrapper\n            value=\"enableLogging\"\n            id=\"enableLogging\"\n            name=\"enableLogging\"\n            checked={logSearchEnabled}\n            onChange={(e) => {\n              const targetD = e.target;\n              const checked = targetD.checked;\n\n              updateField(\"logSearchEnabled\", checked);\n            }}\n            indicatorLabels={[\"Enabled\", \"Disabled\"]}\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <span className={classes.descriptionText}>\n            Deploys a small PostgreSQL database and stores access logs of all\n            calls into the tenant.\n          </span>\n        </Grid>\n        <Grid xs={12}>\n          <hr className={classes.hrClass} />\n        </Grid>\n        {logSearchEnabled && (\n          <Fragment>\n            <Grid item xs={12}>\n              <SelectWrapper\n                id=\"log_search_storage_class\"\n                name=\"log_search_storage_class\"\n                onChange={(e: SelectChangeEvent<string>) => {\n                  updateField(\n                    \"logSearchSelectedStorageClass\",\n                    e.target.value as string\n                  );\n                }}\n                label=\"Log Search Storage Class\"\n                value={logSearchSelectedStorageClass}\n                options={configureSTClasses}\n                disabled={configureSTClasses.length < 1}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <div className={classes.multiContainer}>\n                <InputBoxWrapper\n                  type=\"number\"\n                  id=\"log_search_volume_size\"\n                  name=\"log_search_volume_size\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"logSearchVolumeSize\", e.target.value);\n                    cleanValidation(\"log_search_volume_size\");\n                  }}\n                  label=\"Storage Size\"\n                  overlayObject={\n                    <InputUnitMenu\n                      id={\"size-unit\"}\n                      onUnitChange={() => {}}\n                      unitSelected={\"Gi\"}\n                      unitsList={[{ label: \"Gi\", value: \"Gi\" }]}\n                      disabled={true}\n                    />\n                  }\n                  value={logSearchVolumeSize}\n                  required\n                  error={validationErrors[\"log_search_volume_size\"] || \"\"}\n                  min=\"0\"\n                />\n              </div>\n            </Grid>\n\n            <fieldset\n              className={`${classes.fieldGroup} ${classes.fieldSpaceTop}`}\n            >\n              <legend className={classes.descriptionText}>\n                SecurityContext for LogSearch\n              </legend>\n\n              <Grid item xs={12}>\n                <div\n                  className={`${classes.multiContainer} ${classes.responsiveSectionItem}`}\n                >\n                  <div className={classes.configSectionItem}>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"logSearch_securityContext_runAsUser\"\n                      name=\"logSearch_securityContext_runAsUser\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"logSearchSecurityContext\", {\n                          ...logSearchSecurityContext,\n                          runAsUser: e.target.value,\n                        });\n                        cleanValidation(\"logSearch_securityContext_runAsUser\");\n                      }}\n                      label=\"Run As User\"\n                      value={logSearchSecurityContext.runAsUser}\n                      required\n                      error={\n                        validationErrors[\n                          \"logSearch_securityContext_runAsUser\"\n                        ] || \"\"\n                      }\n                      min=\"0\"\n                    />\n                  </div>\n                  <div className={classes.configSectionItem}>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"logSearch_securityContext_runAsGroup\"\n                      name=\"logSearch_securityContext_runAsGroup\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"logSearchSecurityContext\", {\n                          ...logSearchSecurityContext,\n                          runAsGroup: e.target.value,\n                        });\n                        cleanValidation(\"logSearch_securityContext_runAsGroup\");\n                      }}\n                      label=\"Run As Group\"\n                      value={logSearchSecurityContext.runAsGroup}\n                      required\n                      error={\n                        validationErrors[\n                          \"logSearch_securityContext_runAsGroup\"\n                        ] || \"\"\n                      }\n                      min=\"0\"\n                    />\n                  </div>\n                  <div className={classes.configSectionItem}>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"logSearch_securityContext_fsGroup\"\n                      name=\"logSearch_securityContext_fsGroup\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"logSearchSecurityContext\", {\n                          ...logSearchSecurityContext,\n                          fsGroup: e.target.value,\n                        });\n                        cleanValidation(\"logSearch_securityContext_fsGroup\");\n                      }}\n                      label=\"FsGroup\"\n                      value={logSearchSecurityContext.fsGroup}\n                      required\n                      error={\n                        validationErrors[\"logSearch_securityContext_fsGroup\"] ||\n                        \"\"\n                      }\n                      min=\"0\"\n                    />\n                  </div>\n                </div>\n              </Grid>\n              <br />\n              <Grid item xs={12}>\n                <div className={classes.multiContainer}>\n                  <FormSwitchWrapper\n                    value=\"logSearchSecurityContextRunAsNonRoot\"\n                    id=\"logSearch_securityContext_runAsNonRoot\"\n                    name=\"logSearch_securityContext_runAsNonRoot\"\n                    checked={logSearchSecurityContext.runAsNonRoot}\n                    onChange={(e) => {\n                      const targetD = e.target;\n                      const checked = targetD.checked;\n                      updateField(\"logSearchSecurityContext\", {\n                        ...logSearchSecurityContext,\n                        runAsNonRoot: checked,\n                      });\n                    }}\n                    label={\"Do not run as Root\"}\n                  />\n                </div>\n              </Grid>\n            </fieldset>\n            <fieldset className={classes.fieldGroup}>\n              <legend className={classes.descriptionText}>\n                SecurityContext for PostgreSQL\n              </legend>\n\n              <Grid item xs={12}>\n                <div\n                  className={`${classes.multiContainer} ${classes.responsiveSectionItem}`}\n                >\n                  <div className={classes.configSectionItem}>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"postgres_securityContext_runAsUser\"\n                      name=\"postgres_securityContext_runAsUser\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"logSearchPostgresSecurityContext\", {\n                          ...logSearchPostgresSecurityContext,\n                          runAsUser: e.target.value,\n                        });\n                        cleanValidation(\"postgres_securityContext_runAsUser\");\n                      }}\n                      label=\"Run As User\"\n                      value={logSearchPostgresSecurityContext.runAsUser}\n                      required\n                      error={\n                        validationErrors[\n                          \"postgres_securityContext_runAsUser\"\n                        ] || \"\"\n                      }\n                      min=\"0\"\n                    />\n                  </div>\n                  <div className={classes.configSectionItem}>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"postgres_securityContext_runAsGroup\"\n                      name=\"postgres_securityContext_runAsGroup\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"logSearchPostgresSecurityContext\", {\n                          ...logSearchPostgresSecurityContext,\n                          runAsGroup: e.target.value,\n                        });\n                        cleanValidation(\"postgres_securityContext_runAsGroup\");\n                      }}\n                      label=\"Run As Group\"\n                      value={logSearchPostgresSecurityContext.runAsGroup}\n                      required\n                      error={\n                        validationErrors[\n                          \"postgres_securityContext_runAsGroup\"\n                        ] || \"\"\n                      }\n                      min=\"0\"\n                    />\n                  </div>\n                  <div className={classes.configSectionItem}>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"postgres_securityContext_fsGroup\"\n                      name=\"postgres_securityContext_fsGroup\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"logSearchPostgresSecurityContext\", {\n                          ...logSearchPostgresSecurityContext,\n                          fsGroup: e.target.value,\n                        });\n                        cleanValidation(\"postgres_securityContext_fsGroup\");\n                      }}\n                      label=\"FsGroup\"\n                      value={logSearchPostgresSecurityContext.fsGroup}\n                      required\n                      error={\n                        validationErrors[\"postgres_securityContext_fsGroup\"] ||\n                        \"\"\n                      }\n                      min=\"0\"\n                    />\n                  </div>\n                </div>\n              </Grid>\n              <br />\n              <Grid item xs={12}>\n                <div className={classes.multiContainer}>\n                  <FormSwitchWrapper\n                    value=\"postgresSecurityContextRunAsNonRoot\"\n                    id=\"postgres_securityContext_runAsNonRoot\"\n                    name=\"postgres_securityContext_runAsNonRoot\"\n                    checked={logSearchPostgresSecurityContext.runAsNonRoot}\n                    onChange={(e) => {\n                      const targetD = e.target;\n                      const checked = targetD.checked;\n                      updateField(\"logSearchPostgresSecurityContext\", {\n                        ...logSearchPostgresSecurityContext,\n                        runAsNonRoot: checked,\n                      });\n                    }}\n                    label={\"Do not run as Root\"}\n                  />\n                </div>\n              </Grid>\n            </fieldset>\n          </Fragment>\n        )}\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(ConfigLogSearch);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, Paper, SelectChangeEvent } from \"@mui/material\";\nimport {\n  createTenantCommon,\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\n\nimport { AppState, useAppDispatch } from \"../../../../../store\";\nimport { clearValidationError } from \"../../utils\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../utils/validationFunctions\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport SelectWrapper from \"../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport InputUnitMenu from \"../../../Common/FormComponents/InputUnitMenu/InputUnitMenu\";\nimport SectionH1 from \"../../../Common/SectionH1\";\nimport { isPageValid, updateAddField } from \"../createTenantSlice\";\n\ninterface IConfigureProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    configSectionItem: {\n      marginRight: 15,\n\n      \"& .multiContainer\": {\n        border: \"1px solid red\",\n      },\n    },\n    fieldGroup: {\n      ...createTenantCommon.fieldGroup,\n      paddingTop: 15,\n      marginBottom: 25,\n    },\n    responsiveSectionItem: {\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n        alignItems: \"flex-start\",\n\n        \"& div > div\": {\n          marginBottom: 5,\n          marginRight: 0,\n        },\n      },\n    },\n    fieldSpaceTop: {\n      marginTop: 15,\n    },\n    prometheusEnabledFields: {\n      marginLeft: 20, // 2nd Level(15+15)\n      padding: 10,\n      width: \"90%\",\n      margin: \"auto\",\n    },\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst ConfigPrometheus = ({ classes }: IConfigureProps) => {\n  const dispatch = useAppDispatch();\n\n  const storageClasses = useSelector(\n    (state: AppState) => state.createTenant.storageClasses\n  );\n  const prometheusEnabled = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.prometheusEnabled\n  );\n  const prometheusVolumeSize = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.prometheusVolumeSize\n  );\n  const prometheusSelectedStorageClass = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.prometheusSelectedStorageClass\n  );\n  const prometheusImage = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.prometheusImage\n  );\n  const prometheusSidecarImage = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.prometheusSidecarImage\n  );\n  const prometheusInitImage = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.prometheusInitImage\n  );\n  const selectedStorageClass = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.nameTenant.selectedStorageClass\n  );\n  const tenantSecurityContext = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.tenantSecurityContext\n  );\n  const prometheusSecurityContext = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.prometheusSecurityContext\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  const configureSTClasses = [\n    { label: \"Default\", value: \"default\" },\n    ...storageClasses,\n  ];\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"configure\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  // Validation\n  useEffect(() => {\n    let customAccountValidation: IValidation[] = [];\n\n    if (prometheusEnabled) {\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"prometheus_storage_class\",\n          required: true,\n          value: prometheusSelectedStorageClass,\n          customValidation: prometheusSelectedStorageClass === \"\",\n          customValidationMessage: \"Field cannot be empty\",\n        },\n        {\n          fieldKey: \"prometheus_volume_size\",\n          required: true,\n          value: prometheusVolumeSize,\n          customValidation:\n            prometheusVolumeSize === \"\" || parseInt(prometheusVolumeSize) <= 0,\n          customValidationMessage: `Volume size must be present and be greater than 0`,\n        },\n        {\n          fieldKey: \"prometheus_securityContext_runAsUser\",\n          required: true,\n          value: prometheusSecurityContext.runAsUser,\n          customValidation:\n            prometheusSecurityContext.runAsUser === \"\" ||\n            parseInt(prometheusSecurityContext.runAsUser) < 0,\n          customValidationMessage: `runAsUser must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"prometheus_securityContext_runAsGroup\",\n          required: true,\n          value: prometheusSecurityContext.runAsGroup,\n          customValidation:\n            prometheusSecurityContext.runAsGroup === \"\" ||\n            parseInt(prometheusSecurityContext.runAsGroup) < 0,\n          customValidationMessage: `runAsGroup must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"prometheus_securityContext_fsGroup\",\n          required: true,\n          value: prometheusSecurityContext.fsGroup,\n          customValidation:\n            prometheusSecurityContext.fsGroup === \"\" ||\n            parseInt(prometheusSecurityContext.fsGroup) < 0,\n          customValidationMessage: `fsGroup must be present and be 0 or more`,\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(customAccountValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"configure\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    prometheusImage,\n    prometheusSidecarImage,\n    prometheusInitImage,\n    dispatch,\n    prometheusEnabled,\n    prometheusSelectedStorageClass,\n    prometheusVolumeSize,\n    tenantSecurityContext,\n    prometheusSecurityContext,\n  ]);\n\n  useEffect(() => {\n    // New default values in current selection is invalid\n    if (storageClasses.length > 0) {\n      const filterPrometheus = storageClasses.filter(\n        (item: any) => item.value === prometheusSelectedStorageClass\n      );\n      if (filterPrometheus.length === 0) {\n        updateField(\"prometheusSelectedStorageClass\", \"default\");\n      }\n    }\n  }, [\n    prometheusSelectedStorageClass,\n    selectedStorageClass,\n    storageClasses,\n    updateField,\n  ]);\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <Grid container alignItems={\"center\"}>\n        <Grid item xs>\n          <SectionH1>Monitoring</SectionH1>\n        </Grid>\n        <Grid item xs={4}>\n          <FormSwitchWrapper\n            indicatorLabels={[\"Enabled\", \"Disabled\"]}\n            checked={prometheusEnabled}\n            value={\"monitoring_status\"}\n            id=\"monitoring-status\"\n            name=\"monitoring-status\"\n            onChange={(e) => {\n              const targetD = e.target;\n              const checked = targetD.checked;\n\n              updateField(\"prometheusEnabled\", checked);\n            }}\n            description=\"\"\n          />\n        </Grid>\n      </Grid>\n      <Grid item xs={12}>\n        <span className={classes.descriptionText}>\n          A small Prometheus will be deployed to keep metrics about the tenant.\n        </span>\n      </Grid>\n      <Grid xs={12}>\n        <hr className={classes.hrClass} />\n      </Grid>\n      <Grid container spacing={1}>\n        {prometheusEnabled && (\n          <Fragment>\n            <Grid item xs={12}>\n              <SelectWrapper\n                id=\"prometheus_storage_class\"\n                name=\"prometheus_storage_class\"\n                onChange={(e: SelectChangeEvent<string>) => {\n                  updateField(\n                    \"prometheusSelectedStorageClass\",\n                    e.target.value as string\n                  );\n                }}\n                label=\"Storage Class\"\n                value={prometheusSelectedStorageClass}\n                options={configureSTClasses}\n                disabled={configureSTClasses.length < 1}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <div className={classes.multiContainer}>\n                <InputBoxWrapper\n                  type=\"number\"\n                  id=\"prometheus_volume_size\"\n                  name=\"prometheus_volume_size\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"prometheusVolumeSize\", e.target.value);\n                    cleanValidation(\"prometheus_volume_size\");\n                  }}\n                  label=\"Storage Size\"\n                  overlayObject={\n                    <InputUnitMenu\n                      id={\"size-unit\"}\n                      onUnitChange={() => {}}\n                      unitSelected={\"Gi\"}\n                      unitsList={[{ label: \"Gi\", value: \"Gi\" }]}\n                      disabled={true}\n                    />\n                  }\n                  value={prometheusVolumeSize}\n                  required\n                  error={validationErrors[\"prometheus_volume_size\"] || \"\"}\n                  min=\"0\"\n                />\n              </div>\n            </Grid>\n            <fieldset\n              className={`${classes.fieldGroup} ${classes.fieldSpaceTop}`}\n            >\n              <legend className={classes.descriptionText}>\n                SecurityContext\n              </legend>\n              <Grid item xs={12} className={classes.configSectionItem}>\n                <div\n                  className={`${classes.multiContainer} ${classes.responsiveSectionItem}`}\n                >\n                  <div className={classes.configSectionItem}>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"prometheus_securityContext_runAsUser\"\n                      name=\"prometheus_securityContext_runAsUser\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"prometheusSecurityContext\", {\n                          ...prometheusSecurityContext,\n                          runAsUser: e.target.value,\n                        });\n                        cleanValidation(\"prometheus_securityContext_runAsUser\");\n                      }}\n                      label=\"Run As User\"\n                      value={prometheusSecurityContext.runAsUser}\n                      required\n                      error={\n                        validationErrors[\n                          \"prometheus_securityContext_runAsUser\"\n                        ] || \"\"\n                      }\n                      min=\"0\"\n                    />\n                  </div>\n                  <div className={classes.configSectionItem}>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"prometheus_securityContext_runAsGroup\"\n                      name=\"prometheus_securityContext_runAsGroup\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"prometheusSecurityContext\", {\n                          ...prometheusSecurityContext,\n                          runAsGroup: e.target.value,\n                        });\n                        cleanValidation(\n                          \"prometheus_securityContext_runAsGroup\"\n                        );\n                      }}\n                      label=\"Run As Group\"\n                      value={prometheusSecurityContext.runAsGroup}\n                      required\n                      error={\n                        validationErrors[\n                          \"prometheus_securityContext_runAsGroup\"\n                        ] || \"\"\n                      }\n                      min=\"0\"\n                    />\n                  </div>\n                  <div className={classes.configSectionItem}>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"prometheus_securityContext_fsGroup\"\n                      name=\"prometheus_securityContext_fsGroup\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"prometheusSecurityContext\", {\n                          ...prometheusSecurityContext,\n                          fsGroup: e.target.value,\n                        });\n                        cleanValidation(\"prometheus_securityContext_fsGroup\");\n                      }}\n                      label=\"FsGroup\"\n                      value={prometheusSecurityContext.fsGroup}\n                      required\n                      error={\n                        validationErrors[\n                          \"prometheus_securityContext_fsGroup\"\n                        ] || \"\"\n                      }\n                      min=\"0\"\n                    />\n                  </div>\n                </div>\n              </Grid>\n              <Grid item xs={12} className={classes.configSectionItem}>\n                <div\n                  className={`${classes.multiContainer} ${classes.fieldSpaceTop}`}\n                >\n                  <FormSwitchWrapper\n                    value=\"prometheusSecurityContextRunAsNonRoot\"\n                    id=\"prometheus_securityContext_runAsNonRoot\"\n                    name=\"prometheus_securityContext_runAsNonRoot\"\n                    checked={prometheusSecurityContext.runAsNonRoot}\n                    onChange={(e) => {\n                      const targetD = e.target;\n                      const checked = targetD.checked;\n                      updateField(\"prometheusSecurityContext\", {\n                        ...prometheusSecurityContext,\n                        runAsNonRoot: checked,\n                      });\n                    }}\n                    label={\"Do not run as Root\"}\n                  />\n                </div>\n              </Grid>\n            </fieldset>\n          </Fragment>\n        )}\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(ConfigPrometheus);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nexport const requiredPages = [\n  \"nameTenant\",\n  \"tenantSize\",\n  \"configure\",\n  \"affinity\",\n  \"identityProvider\",\n  \"security\",\n  \"encryption\",\n];\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Button } from \"@mui/material\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport { requiredPages } from \"./common\";\nimport { createTenantAsync } from \"./thunks/createTenantThunk\";\n\nconst CreateTenantButton = () => {\n  const dispatch = useAppDispatch();\n\n  const addSending = useSelector(\n    (state: AppState) => state.createTenant.addingTenant\n  );\n\n  const validPages = useSelector(\n    (state: AppState) => state.createTenant.validPages\n  );\n\n  const selectedStorageClass = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.nameTenant.selectedStorageClass\n  );\n\n  const enabled =\n    !addSending &&\n    selectedStorageClass !== \"\" &&\n    requiredPages.every((v) => validPages.includes(v));\n\n  return (\n    <Button\n      id={\"wizard-button-Create\"}\n      variant=\"contained\"\n      color=\"primary\"\n      size=\"small\"\n      onClick={() => {\n        dispatch(createTenantAsync());\n      }}\n      disabled={!enabled}\n      key={`button-AddTenant-Create`}\n    >\n      Create\n    </Button>\n  );\n};\n\nexport default CreateTenantButton;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport CredentialsPrompt from \"../../Common/CredentialsPrompt/CredentialsPrompt\";\nimport { resetAddTenantForm } from \"./createTenantSlice\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst NewTenantCredentials = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const showNewCredentials = useSelector(\n    (state: AppState) => state.createTenant.showNewCredentials\n  );\n  const createdAccount = useSelector(\n    (state: AppState) => state.createTenant.createdAccount\n  );\n\n  return (\n    <Fragment>\n      {showNewCredentials && (\n        <CredentialsPrompt\n          newServiceAccount={createdAccount}\n          open={showNewCredentials}\n          closeModal={() => {\n            dispatch(resetAddTenantForm());\n            navigate(\"/tenants\");\n          }}\n          entity=\"Tenant\"\n        />\n      )}\n    </Fragment>\n  );\n};\n\nexport default NewTenantCredentials;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport get from \"lodash/get\";\nimport { useSelector } from \"react-redux\";\nimport Grid from \"@mui/material/Grid\";\nimport { LinearProgress } from \"@mui/material\";\n\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  modalBasic,\n  settingsCommon,\n  wizardCommon,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport GenericWizard from \"../../Common/GenericWizard/GenericWizard\";\nimport {\n  IWizardButton,\n  IWizardElement,\n} from \"../../Common/GenericWizard/types\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport Configure from \"./Steps/Configure\";\nimport IdentityProvider from \"./Steps/IdentityProvider\";\nimport Security from \"./Steps/Security\";\nimport Encryption from \"./Steps/Encryption\";\nimport Affinity from \"./Steps/Affinity\";\nimport PageHeader from \"../../Common/PageHeader/PageHeader\";\nimport Images from \"./Steps/Images\";\nimport PageLayout from \"../../Common/Layout/PageLayout\";\nimport BackLink from \"../../../../common/BackLink\";\nimport TenantResources from \"./Steps/TenantResources/TenantResources\";\nimport ConfigLogSearch from \"./Steps/ConfigLogSearch\";\nimport ConfigPrometheus from \"./Steps/ConfigPrometheus\";\nimport {\n  IMkEnvs,\n  resourcesConfigurations,\n} from \"./Steps/TenantResources/utils\";\nimport HelpBox from \"../../../../common/HelpBox\";\nimport { StorageIcon } from \"../../../../icons\";\nimport { selFeatures } from \"../../consoleSlice\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { resetAddTenantForm } from \"./createTenantSlice\";\nimport CreateTenantButton from \"./CreateTenantButton\";\nimport NewTenantCredentials from \"./NewTenantCredentials\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    pageBox: {\n      border: \"1px solid #EAEAEA\",\n    },\n    ...modalBasic,\n    ...wizardCommon,\n    ...settingsCommon,\n  })\n);\n\nconst AddTenant = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const classes = useStyles();\n\n  const features = useSelector(selFeatures);\n\n  // Fields\n  const addSending = useSelector(\n    (state: AppState) => state.createTenant.addingTenant\n  );\n  const [formRender, setFormRender] = useState<IMkEnvs | null>(null);\n\n  useEffect(() => {\n    let setConfiguration = IMkEnvs.default;\n\n    if (features && features.length !== 0) {\n      const possibleVariables = Object.keys(resourcesConfigurations);\n\n      possibleVariables.forEach((element) => {\n        if (features.includes(element)) {\n          setConfiguration = get(\n            resourcesConfigurations,\n            element,\n            IMkEnvs.default\n          );\n        }\n      });\n    }\n\n    setFormRender(setConfiguration);\n  }, [features]);\n\n  const cancelButton = {\n    label: \"Cancel\",\n    type: \"other\",\n    enabled: true,\n    action: () => {\n      dispatch(resetAddTenantForm());\n      navigate(\"/tenants\");\n    },\n  };\n\n  const createButton: IWizardButton = {\n    componentRender: <CreateTenantButton key={\"create-tenant\"} />,\n  };\n\n  const wizardSteps: IWizardElement[] = [\n    {\n      label: \"Setup\",\n      componentRender: <TenantResources />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Configure\",\n      advancedOnly: true,\n      componentRender: <Configure />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Images\",\n      advancedOnly: true,\n      componentRender: <Images />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Pod Placement\",\n      advancedOnly: true,\n      componentRender: <Affinity />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Identity Provider\",\n      advancedOnly: true,\n      componentRender: <IdentityProvider />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Security\",\n      advancedOnly: true,\n      componentRender: <Security />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Encryption\",\n      advancedOnly: true,\n      componentRender: <Encryption />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Audit Log\",\n      advancedOnly: true,\n      componentRender: <ConfigLogSearch />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Monitoring\",\n      advancedOnly: true,\n      componentRender: <ConfigPrometheus />,\n      buttons: [cancelButton, createButton],\n    },\n  ];\n\n  let filteredWizardSteps = wizardSteps;\n\n  return (\n    <Fragment>\n      <NewTenantCredentials />\n      <PageHeader\n        label={\n          <BackLink\n            to={\"/tenants\"}\n            label={\"Tenants\"}\n            executeOnClick={() => {\n              dispatch(resetAddTenantForm());\n            }}\n          />\n        }\n      />\n\n      <PageLayout>\n        {addSending && (\n          <Grid item xs={12}>\n            <LinearProgress />\n          </Grid>\n        )}\n        <Grid item xs={12} className={classes.pageBox}>\n          <GenericWizard wizardSteps={filteredWizardSteps} />\n        </Grid>\n        {formRender === IMkEnvs.aws && (\n          <Grid item xs={12} style={{ marginTop: 16 }}>\n            <HelpBox\n              title={\"EBS Volume Configuration.\"}\n              iconComponent={<StorageIcon />}\n              help={\n                <Fragment>\n                  <b>Performance Optimized</b>: Uses the <i>gp3</i> EBS storage\n                  class class configured at 1,000Mi/s throughput and 16,000\n                  IOPS, however the minimum volume size for this type of EBS\n                  volume is <b>32Gi</b>.\n                  <br />\n                  <br />\n                  <b>Storage Optimized</b>: Uses the <i>sc1</i> EBS storage\n                  class, however the minimum volume size for this type of EBS\n                  volume is &nbsp;\n                  <b>16Ti</b> to unlock their maximum throughput speed of\n                  250Mi/s.\n                </Fragment>\n              }\n            />\n          </Grid>\n        )}\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default AddTenant;\n","import React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport { Theme } from \"@mui/material/styles\";\n\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    errorBlock: {\n      color: theme.palette?.error.main || \"#C83B51\",\n    },\n  });\n\ninterface IErrorBlockProps {\n  classes: any;\n  errorMessage: string;\n  withBreak?: boolean;\n}\n\nconst ErrorBlock = ({\n  classes,\n  errorMessage,\n  withBreak = true,\n}: IErrorBlockProps) => {\n  return (\n    <React.Fragment>\n      {withBreak && <br />}\n      <Typography component=\"p\" variant=\"body1\" className={classes.errorBlock}>\n        {errorMessage}\n      </Typography>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(ErrorBlock);\n"],"names":["withStyles","theme","createStyles","root","border","borderRadius","backgroundColor","paddingLeft","paddingTop","paddingBottom","paddingRight","leftItems","fontSize","fontWeight","marginBottom","display","alignItems","marginRight","height","width","helpText","classes","iconComponent","title","help","className","container","item","xs","props","xmlns","fill","viewBox","id","d","transform","clipPath","flexFlow","padding","inputWithCopy","background","inputLabel","fieldBasic","label","value","OutlinedInput","readOnly","endAdornment","InputAdornment","position","text","BoxIconButton","tooltip","onClick","onMouseDown","edge","download","filename","element","document","createElement","setAttribute","style","body","appendChild","click","removeChild","warningBlock","color","margin","credentialTitle","buttonContainer","textAlign","marginTop","credentialsPanel","overflowY","maxHeight","promptTitle","buttonSpacer","newServiceAccount","open","closeModal","entity","consoleCreds","get","idp","ModalWrapper","modalOpen","onClose","titleIcon","Grid","formScrollable","Array","isArray","map","credentialsPair","index","accessKey","secretKey","undefined","WarnIcon","RBIconButton","consoleExtras","itemMap","url","api","path","JSON","stringify","icon","variant","length","allCredentials","tooltipHelper","valueString","maxWidth","whiteSpace","overflow","textOverflow","fileInputField","fileInputStyles","textBoxContainer","onChange","name","disabled","required","error","accept","useState","showFileSelector","setShowSelector","fieldBottom","fieldContainer","errorInField","InputLabel","htmlFor","fieldLabelError","tooltipContainer","Tooltip","placement","HelpIcon","type","e","fileName","evt","callback","file","target","files","reader","FileReader","readAsDataURL","onload","fileBase64","result","fileArray","toString","split","fileProcess","data","IconButton","component","disableRipple","disableFocusRipple","size","Cancel","ErrorBlock","errorMessage","fileReselect","AttachFile","deleteDialogStyles","content","customDialogSize","snackBarCommon","children","wideLimit","noContentPadding","dispatch","useAppDispatch","openSnackbar","setOpenSnackbar","modalSnackMessage","useSelector","state","system","modalSnackBar","useEffect","setModalSnackMessage","message","customSize","paper","fullWidth","detailedErrorMsg","scroll","event","reason","titleText","closeContainer","closeButton","isModal","snackBarModal","ContentProps","snackBar","errorSnackBar","autoHideDuration","configSectionItem","tenantCustomizationFields","marginLeft","containerItem","fieldGroup","createTenantCommon","responsiveSectionItem","wrapperContainer","overlayAction","modalBasic","wizardCommon","exposeMinIO","createTenant","fields","configure","exposeConsole","setDomains","consoleDomain","minioDomains","tenantCustom","tenantSecurityContext","validationErrors","setValidationErrors","updateField","useCallback","field","updateAddField","pageName","customAccountValidation","fieldKey","runAsUser","customValidation","parseInt","customValidationMessage","runAsGroup","fsGroup","minioExtraValidations","validation","pattern","customPatternMessage","commonVal","commonFormValidation","isPageValid","valid","Object","keys","cleanValidation","fieldName","clearValidationError","Paper","paperWrapper","headerElement","h3Section","descriptionText","FormSwitchWrapper","checked","InputBoxWrapper","placeholder","domain","copyDomains","updateMinIODomain","addNewMinIODomain","Add","removeMinIODomain","RemoveIcon","multiContainer","min","runAsNonRoot","useStyles","makeStyles","adUserDnRows","buttonTray","formFieldStyles","idpSelection","identityProvider","ADURL","ADSkipTLS","ADServerInsecure","ADGroupSearchBaseDN","ADGroupSearchFilter","ADUserDNs","ADGroupDNs","ADLookupBindDN","ADLookupBindPassword","ADUserDNSearchBaseDN","ADUserDNSearchFilter","ADServerStartTLS","customIDPValidation","Fragment","formFieldRow","Typography","gutterBottom","_","setIDPADUsrAtIndex","userDN","addIDPADUsrAtIndex","removeIDPADUsrAtIndex","Delete","setIDPADGroupAtIndex","addIDPADGroupAtIndex","removeIDPADGroupAtIndex","openIDConfigurationURL","openIDClientID","openIDSecretID","openIDCallbackURL","openIDClaimName","openIDScopes","shortened","gridTemplateColumns","gridGap","accessKeys","secretKeys","i","push","setIDPUsrAtIndex","setIDPPwdAtIndex","addIDPNewKeyPair","removeIDPKeyPairAtIndex","getRandomString","Casino","protocolRadioOptions","RadioGroupSelector","currentSelection","setIDP","selectorOptions","FeatureItem","description","Box","sx","fontStyle","namespace","nameTenant","tenantName","flex","CertificateIcon","href","rel","minioCertificateRows","justifyContent","borderBottom","fileItem","minWidth","minioCertsContainer","minioCACertsRow","rowActions","enableTLS","security","enableAutoCert","enableCustomCerts","minioCertificates","certificates","caCertificates","spacing","SectionTitle","keyPair","FileSelector","encodedValue","addFileToKeyPair","key","cert","addKeyPair","deleteKeyPair","addFileToCaCertificates","addCaCertificate","deleteCaCertificate","vaultEndpoint","encryption","vaultEngine","vaultNamespace","vaultPrefix","vaultAppRoleEngine","vaultId","vaultSecret","vaultRetry","vaultPing","vaultCertificate","vaultCA","encryptionValidation","mutualTlsConfig","addFileVaultCert","addFileVaultCa","azureEndpoint","azureTenantID","azureClientID","azureClientSecret","gcpProjectID","gcpEndpoint","gcpClientEmail","gcpClientID","gcpPrivateKeyID","gcpPrivateKey","gemaltoCA","gemaltoEndpoint","gemaltoToken","gemaltoDomain","gemaltoRetry","addFileGemaltoCa","awsEndpoint","awsRegion","awsKMSKey","awsAccessKey","awsSecretKey","awsToken","encryptionTypeOptions","rightSpacer","responsiveContainer","replicas","enableEncryption","encryptionType","enableCustomCertsForKES","serverCertificate","clientCertificate","kesSecurityContext","encryptionAvailable","filter","encoded_key","encoded_cert","indicatorLabels","hrClass","addFileServerCert","addFileClientCert","affinityConfigField","affinityFieldLabel","radioField","affinityLabelKey","affinityLabelValue","affinityRow","podAffinity","affinity","nodeSelectorLabels","withPodAntiAffinity","keyValuePairs","nodeSelectorPairs","tolerations","loading","setLoading","keyValueMap","setKeyValueMap","keyOptions","setKeyOptions","then","res","k","catch","err","setModalErrorSnackMessage","vl","kvp","kvs","a","indexOf","join","splittedLabels","forEach","splitItem","updateToleration","alterToleration","setTolerationInfo","tolerationValue","affinityHelpText","SelectWrapper","newKey","newLKP","arrCp","setKeyValuePairs","options","v","AddIcon","tol","TolerationSelector","effect","onEffectChange","tolerationKey","onTolerationKeyChange","operator","onOperatorChange","onValueChange","tolerationSeconds","seconds","onSecondsChange","addNewToleration","removeToleration","customImage","imageName","customDockerhub","imageRegistry","imageRegistryUsername","imageRegistryPassword","prometheusCustom","prometheusEnabled","logSearchCustom","logSearchEnabled","logSearchVolumeSize","prometheusVolumeSize","logSearchSelectedStorageClass","logSearchImage","kesImage","logSearchPostgresImage","logSearchPostgresInitImage","prometheusSelectedStorageClass","prometheusImage","prometheusSidecarImage","prometheusInitImage","table","nodes","tenantSize","memoryNode","resourcesMemoryRequest","ecParity","distribution","ecParityCalc","cpuToUse","resourcesCPURequest","integrationSelection","usableInformation","storageFactors","find","erasureCode","Divider","Table","TableBody","TableRow","TableCell","scope","align","typeSelection","storageClass","disks","niceBytes","pvSize","persistentVolumes","rawCapacity","maxCapacity","Math","floor","maxFailureTolerations","CPU","memory","drivesPerServer","driveSize","sizeUnit","wrapText","wordWrap","addNamespaceLoading","addNSLoading","addNamespaceOpen","addNSOpen","ConfirmDialog","confirmText","confirmButtonProps","isOpen","isLoading","onConfirm","createNamespaceAsync","closeAddNSModal","confirmationContent","LinearProgress","DialogContentText","formToRender","showNSCreateButton","namespaceError","openAddNSConfirm","debounceNamespace","useMemo","debounce","validateNamespaceAsync","cancel","setNamespace","overlayId","overlayIcon","openAddNSModal","NameTenantField","tenantNameError","setTenantName","sizePreview","selectedStorageClass","selectedStorageType","storageClasses","features","selFeatures","isValid","IMkEnvs","md","minHeight","setStorageType","storageType","mkPanelConfigurations","TenantSize","formRender","setFormRender","setConfiguration","resourcesConfigurations","includes","logSearchEnabledFields","fieldSpaceTop","logSearchSecurityContext","logSearchPostgresSecurityContext","configureSTClasses","overlayObject","InputUnitMenu","onUnitChange","unitSelected","unitsList","prometheusEnabledFields","prometheusSecurityContext","requiredPages","addSending","addingTenant","validPages","enabled","every","Button","createTenantAsync","navigate","useNavigate","showNewCredentials","createdAccount","CredentialsPrompt","resetAddTenantForm","pageBox","settingsCommon","cancelButton","action","createButton","componentRender","filteredWizardSteps","buttons","advancedOnly","PageHeader","BackLink","to","executeOnClick","PageLayout","GenericWizard","wizardSteps","HelpBox","errorBlock","palette","main","withBreak"],"sourceRoot":""}