{"version":3,"file":"static/js/2983.ca089e19.chunk.js","mappings":"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","sources":["screens/Console/Common/FormComponents/CheckboxWrapper/CheckboxWrapper.tsx","screens/Console/Common/TableWrapper/TableActionIcons/common.ts","screens/Console/Common/TableWrapper/TableActionIcons/CloudIcon.tsx","screens/Console/Common/TableWrapper/TableActionIcons/ConsoleIcon.tsx","screens/Console/Common/TableWrapper/TableActionIcons/DisableIcon.tsx","screens/Console/Common/TableWrapper/TableActionIcons/FormatDriveIcon.tsx","screens/Console/Common/TableWrapper/TableActionButton.tsx","screens/Console/Common/TableWrapper/TableWrapper.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport { Checkbox, Grid, InputLabel, Tooltip } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  checkboxIcons,\n  fieldBasic,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport { HelpIcon } from \"mds\";\n\ninterface CheckBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  overrideLabelClasses?: string;\n  overrideCheckboxStyles?: React.CSSProperties;\n  index?: number;\n  noTopMargin?: boolean;\n  checked: boolean;\n  className?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    ...checkboxIcons,\n    fieldContainer: {\n      ...fieldBasic.fieldContainer,\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n      alignItems: \"center\",\n      margin: \"15px 0\",\n      marginBottom: 0,\n      flexBasis: \"initial\",\n      flexWrap: \"nowrap\",\n    },\n    noTopMargin: {\n      marginTop: 0,\n    },\n  });\n\nconst CheckboxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  checked = false,\n  disabled = false,\n  noTopMargin = false,\n  tooltip = \"\",\n  overrideLabelClasses = \"\",\n  overrideCheckboxStyles,\n  classes,\n  className,\n}: CheckBoxProps) => {\n  return (\n    <React.Fragment>\n      <Grid\n        item\n        xs={12}\n        className={`${classes.fieldContainer} ${\n          noTopMargin ? classes.noTopMargin : \"\"\n        } ${className ? className : \"\"}`}\n      >\n        <div>\n          <Checkbox\n            name={name}\n            id={id}\n            value={value}\n            color=\"primary\"\n            inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n            checked={checked}\n            onChange={onChange}\n            checkedIcon={<span className={classes.checkedIcon} />}\n            icon={<span className={classes.unCheckedIcon} />}\n            disabled={disabled}\n            disableRipple\n            disableFocusRipple\n            focusRipple={false}\n            centerRipple={false}\n            disableTouchRipple\n            style={overrideCheckboxStyles || {}}\n          />\n        </div>\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={`${classes.noMinWidthLabel} ${overrideLabelClasses}`}\n          >\n            <span>{label}</span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(CheckboxWrapper);\n","export interface IIcon {\n  active: boolean;\n}\n\nexport const unSelected = \"#081C42\";\nexport const selected = \"#081C42\";\n","import React from \"react\";\nimport { IIcon, selected, unSelected } from \"./common\";\n\nconst CloudIcon = ({ active = false }: IIcon) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 24 24\"\n    >\n      <path\n        fill={active ? selected : unSelected}\n        d=\"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96z\"\n      />\n    </svg>\n  );\n};\n\nexport default CloudIcon;\n","import React from \"react\";\nimport { IIcon, selected, unSelected } from \"./common\";\n\nconst ConsoleIcon = ({ active = false }: IIcon) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 24 24\"\n    >\n      <path\n        fill={active ? selected : unSelected}\n        d=\"M21 3H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H3v-3h18v3z\"\n      />\n    </svg>\n  );\n};\n\nexport default ConsoleIcon;\n","import React from \"react\";\nimport { IIcon, selected, unSelected } from \"./common\";\n\nconst DescriptionIcon = ({ active = false }: IIcon) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"20\"\n      height=\"20\"\n      viewBox=\"0 0 24 24\"\n    >\n      <path\n        fill={active ? selected : unSelected}\n        d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11H7v-2h10v2z\"\n      ></path>\n    </svg>\n  );\n};\n\nexport default DescriptionIcon;\n","import React, { SVGProps } from \"react\";\n\nconst FormatDriveIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    className={`min-icon`}\n    fill={\"currentcolor\"}\n    {...props}\n  >\n    <path d=\"M20 16h2v-2h-2v2zm0-9v5h2V7h-2zM10 4c-4.42 0-8 3.58-8 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 10c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z\"></path>\n  </svg>\n);\n\nexport default FormatDriveIcon;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport isString from \"lodash/isString\";\nimport { Link } from \"react-router-dom\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IconButton, Tooltip } from \"@mui/material\";\nimport CloudIcon from \"./TableActionIcons/CloudIcon\";\nimport ConsoleIcon from \"./TableActionIcons/ConsoleIcon\";\nimport DisableIcon from \"./TableActionIcons/DisableIcon\";\nimport FormatDriveIcon from \"./TableActionIcons/FormatDriveIcon\";\nimport {\n  IAMPoliciesIcon,\n  PreviewIcon,\n  ShareIcon,\n  EditIcon,\n  TrashIcon,\n  DownloadIcon,\n} from \"mds\";\n\nconst styles = () =>\n  createStyles({\n    spacing: {\n      margin: \"0 8px\",\n    },\n    buttonDisabled: {\n      \"&.MuiButtonBase-root.Mui-disabled\": {\n        cursor: \"not-allowed\",\n        filter: \"grayscale(100%)\",\n        opacity: \"30%\",\n      },\n    },\n  });\n\ninterface IActionButton {\n  label?: string;\n  type: string | React.ReactNode;\n  onClick?: (id: string) => any;\n  to?: string;\n  valueToSend: any;\n  selected: boolean;\n  sendOnlyId?: boolean;\n  idField: string;\n  disabled: boolean;\n  classes: any;\n}\n\nconst defineIcon = (type: string, selected: boolean) => {\n  switch (type) {\n    case \"view\":\n      return <PreviewIcon />;\n    case \"edit\":\n      return <EditIcon />;\n    case \"delete\":\n      return <TrashIcon />;\n    case \"description\":\n      return <IAMPoliciesIcon />;\n    case \"share\":\n      return <ShareIcon />;\n    case \"cloud\":\n      return <CloudIcon active={selected} />;\n    case \"console\":\n      return <ConsoleIcon active={selected} />;\n    case \"download\":\n      return <DownloadIcon />;\n    case \"disable\":\n      return <DisableIcon active={selected} />;\n    case \"format\":\n      return <FormatDriveIcon />;\n    case \"preview\":\n      return <PreviewIcon />;\n  }\n\n  return null;\n};\n\nconst TableActionButton = ({\n  type,\n  onClick,\n  valueToSend,\n  idField,\n  selected,\n  to,\n  sendOnlyId = false,\n  disabled = false,\n  classes,\n  label,\n}: IActionButton) => {\n  const valueClick = sendOnlyId ? valueToSend[idField] : valueToSend;\n\n  const icon = typeof type === \"string\" ? defineIcon(type, selected) : type;\n  let buttonElement = (\n    <IconButton\n      aria-label={typeof type === \"string\" ? type : \"\"}\n      size={\"small\"}\n      className={`${classes.spacing} ${disabled ? classes.buttonDisabled : \"\"}`}\n      disabled={disabled}\n      onClick={\n        onClick\n          ? (e) => {\n              e.stopPropagation();\n              if (!disabled) {\n                onClick(valueClick);\n              } else {\n                e.preventDefault();\n              }\n            }\n          : () => null\n      }\n      sx={{\n        width: \"30px\",\n        height: \"30px\",\n      }}\n    >\n      {icon}\n    </IconButton>\n  );\n\n  if (label && label !== \"\") {\n    buttonElement = <Tooltip title={label}>{buttonElement}</Tooltip>;\n  }\n\n  if (onClick) {\n    return buttonElement;\n  }\n\n  if (isString(to)) {\n    if (!disabled) {\n      return (\n        <Link\n          to={`${to}/${valueClick}`}\n          onClick={(e) => {\n            e.stopPropagation();\n          }}\n        >\n          {buttonElement}\n        </Link>\n      );\n    }\n\n    return buttonElement;\n  }\n\n  return null;\n};\n\nexport default withStyles(styles)(TableActionButton);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Checkbox,\n  Grid,\n  IconButton,\n  LinearProgress,\n  Paper,\n  Popover,\n  Typography,\n} from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AutoSizer, Column, InfiniteLoader, Table } from \"react-virtualized\";\nimport get from \"lodash/get\";\nimport isString from \"lodash/isString\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport ViewColumnIcon from \"@mui/icons-material/ViewColumn\";\nimport ArrowDropDownIcon from \"@mui/icons-material/ArrowDropDown\";\nimport ArrowDropUpIcon from \"@mui/icons-material/ArrowDropUp\";\nimport TableActionButton from \"./TableActionButton\";\nimport CheckboxWrapper from \"../FormComponents/CheckboxWrapper/CheckboxWrapper\";\nimport {\n  checkboxIcons,\n  radioIcons,\n  TableRowPredefStyles,\n} from \"../FormComponents/common/styleLibrary\";\nimport { Loader } from \"mds\";\nimport TooltipWrapper from \"../TooltipWrapper/TooltipWrapper\";\n\n//Interfaces for table Items\n\nexport interface ItemActions {\n  label?: string;\n  type: string | any;\n  to?: string;\n  sendOnlyId?: boolean;\n  disableButtonFunction?: (itemValue: any) => boolean;\n  showLoaderFunction?: (itemValue: any) => boolean;\n\n  onClick?(valueToSend: any): any;\n}\n\ninterface IColumns {\n  label: string;\n  elementKey?: string;\n  renderFunction?: (input: any) => any;\n  renderFullObject?: boolean;\n  globalClass?: any;\n  rowClass?: any;\n  width?: number;\n  headerTextAlign?: string;\n  contentTextAlign?: string;\n  enableSort?: boolean;\n}\n\ninterface IInfiniteScrollConfig {\n  loadMoreRecords: (indexElements: {\n    startIndex: number;\n    stopIndex: number;\n  }) => Promise<any>;\n  recordsCount: number;\n}\n\ninterface ISortConfig {\n  triggerSort: (val: any) => any;\n  currentSort: string;\n  currentDirection: \"ASC\" | \"DESC\" | undefined;\n}\n\ninterface TableWrapperProps {\n  itemActions?: ItemActions[] | null;\n  columns: IColumns[];\n  onSelect?: (e: React.ChangeEvent<HTMLInputElement>) => any;\n  idField: string;\n  isLoading: boolean;\n  loadingMessage?: React.ReactNode;\n  records: any[];\n  classes: any;\n  entityName: string;\n  selectedItems?: string[];\n  radioSelection?: boolean;\n  customEmptyMessage?: string;\n  customPaperHeight?: string;\n  noBackground?: boolean;\n  columnsSelector?: boolean;\n  textSelectable?: boolean;\n  columnsShown?: string[];\n  onColumnChange?: (column: string, state: boolean) => any;\n  autoScrollToBottom?: boolean;\n  infiniteScrollConfig?: IInfiniteScrollConfig;\n  sortConfig?: ISortConfig;\n  disabled?: boolean;\n  onSelectAll?: () => void;\n  rowStyle?: ({\n    index,\n  }: {\n    index: number;\n  }) => \"deleted\" | \"\" | React.CSSProperties;\n  parentClassName?: string;\n  tooltip?: any;\n}\n\nconst borderColor = \"#9c9c9c80\";\n\nconst styles = () =>\n  createStyles({\n    paper: {\n      display: \"flex\",\n      overflow: \"auto\",\n      flexDirection: \"column\",\n      padding: \"0 16px 8px\",\n      boxShadow: \"none\",\n      border: \"#EAEDEE 1px solid\",\n      borderRadius: 3,\n      minHeight: 200,\n      overflowY: \"scroll\",\n      position: \"relative\",\n      \"&::-webkit-scrollbar\": {\n        width: 0,\n        height: 3,\n      },\n    },\n    noBackground: {\n      backgroundColor: \"transparent\",\n      border: 0,\n    },\n    disabled: {\n      backgroundColor: \"#fbfafa\",\n      color: \"#cccccc\",\n    },\n    defaultPaperHeight: {\n      height: \"calc(100vh - 205px)\",\n    },\n    loadingBox: {\n      paddingTop: \"100px\",\n      paddingBottom: \"100px\",\n    },\n    overlayColumnSelection: {\n      position: \"absolute\",\n      right: 0,\n      top: 0,\n    },\n    popoverContent: {\n      maxHeight: 250,\n      overflowY: \"auto\",\n      padding: \"0 10px 10px\",\n    },\n    shownColumnsLabel: {\n      color: \"#9c9c9c\",\n      fontSize: 12,\n      padding: 10,\n      borderBottom: \"#eaeaea 1px solid\",\n      width: \"100%\",\n    },\n    checkAllWrapper: {\n      marginTop: -16,\n    },\n    \"@global\": {\n      \".rowLine\": {\n        borderBottom: `1px solid ${borderColor}`,\n        height: 40,\n        fontSize: 14,\n        transitionDuration: 0.3,\n        \"&:focus\": {\n          outline: \"initial\",\n        },\n        \"&:hover:not(.ReactVirtualized__Table__headerRow)\": {\n          userSelect: \"none\",\n          backgroundColor: \"#ececec\",\n          fontWeight: 600,\n          \"&.canClick\": {\n            cursor: \"pointer\",\n          },\n          \"&.canSelectText\": {\n            userSelect: \"text\",\n          },\n        },\n        \"& .selected\": {\n          fontWeight: 600,\n        },\n        \"&:not(.deleted) .selected\": {\n          color: \"#081C42\",\n        },\n        \"&.deleted .selected\": {\n          color: \"#C51B3F\",\n        },\n      },\n      \".headerItem\": {\n        userSelect: \"none\",\n        fontWeight: 700,\n        fontSize: 14,\n        fontStyle: \"initial\",\n        display: \"flex\",\n        alignItems: \"center\",\n        outline: \"none\",\n      },\n      \".ReactVirtualized__Table__row\": {\n        width: \"100% !important\",\n      },\n      \".ReactVirtualized__Table__headerRow\": {\n        fontWeight: 700,\n        fontSize: 14,\n        borderColor: \"#39393980\",\n        textTransform: \"initial\",\n      },\n      \".optionsAlignment\": {\n        textAlign: \"center\",\n        \"& .min-icon\": {\n          width: 16,\n          height: 16,\n        },\n      },\n      \".text-center\": {\n        textAlign: \"center\",\n      },\n      \".text-right\": {\n        textAlign: \"right\",\n      },\n      \".progress-enabled\": {\n        paddingTop: 3,\n        display: \"inline-block\",\n        margin: \"0 10px\",\n        position: \"relative\",\n        width: 18,\n        height: 18,\n      },\n      \".progress-enabled > .MuiCircularProgress-root\": {\n        position: \"absolute\",\n        left: 0,\n        top: 3,\n      },\n    },\n    ...checkboxIcons,\n    ...radioIcons,\n  });\n\nconst selectWidth = 45;\n\n// Function to render elements in table\nconst subRenderFunction = (\n  rowData: any,\n  column: IColumns,\n  isSelected: boolean\n) => {\n  const itemElement = isString(rowData)\n    ? rowData\n    : get(rowData, column.elementKey!, null); // If the element is just a string, we render it as it is\n  const renderConst = column.renderFullObject ? rowData : itemElement;\n\n  const renderElement = column.renderFunction\n    ? column.renderFunction(renderConst)\n    : renderConst; // If render function is set, we send the value to the function.\n\n  return (\n    <Fragment>\n      <span className={isSelected ? \"selected\" : \"\"}>{renderElement}</span>\n    </Fragment>\n  );\n};\n\n// Function to calculate common column width for elements with no with size\nconst calculateColumnRest = (\n  columns: IColumns[],\n  containerWidth: number,\n  actionsWidth: number,\n  hasSelect: boolean,\n  hasActions: boolean,\n  columnsSelector: boolean,\n  columnsShown: string[]\n) => {\n  let colsItems = [...columns];\n\n  if (columnsSelector) {\n    colsItems = columns.filter((column) =>\n      columnsShown.includes(column.elementKey!)\n    );\n  }\n\n  let initialValue = containerWidth;\n\n  if (hasSelect) {\n    initialValue -= selectWidth;\n  }\n\n  if (hasActions) {\n    initialValue -= actionsWidth;\n  }\n\n  let freeSpacing = colsItems.reduce((total, currValue) => {\n    return currValue.width ? total - currValue.width : total;\n  }, initialValue);\n\n  return freeSpacing / colsItems.filter((el) => !el.width).length;\n};\n\n// Function that renders Columns in table\nconst generateColumnsMap = (\n  columns: IColumns[],\n  containerWidth: number,\n  actionsWidth: number,\n  hasSelect: boolean,\n  hasActions: boolean,\n  selectedItems: string[],\n  idField: string,\n  columnsSelector: boolean,\n  columnsShown: string[],\n  sortColumn: string,\n  sortDirection: \"ASC\" | \"DESC\" | undefined\n) => {\n  const commonRestWidth = calculateColumnRest(\n    columns,\n    containerWidth,\n    actionsWidth,\n    hasSelect,\n    hasActions,\n    columnsSelector,\n    columnsShown\n  );\n  return columns.map((column: IColumns, index: number) => {\n    if (columnsSelector && !columnsShown.includes(column.elementKey!)) {\n      return null;\n    }\n\n    const disableSort = column.enableSort ? !column.enableSort : true;\n\n    return (\n      // @ts-ignore\n      <Column\n        key={`col-tb-${index.toString()}`}\n        dataKey={column.elementKey!}\n        headerClassName={`titleHeader ${\n          column.headerTextAlign ? `text-${column.headerTextAlign}` : \"\"\n        }`}\n        headerRenderer={() => (\n          <Fragment>\n            {sortColumn === column.elementKey && (\n              <Fragment>\n                {sortDirection === \"ASC\" ? (\n                  <ArrowDropUpIcon />\n                ) : (\n                  <ArrowDropDownIcon />\n                )}\n              </Fragment>\n            )}\n            {column.label}\n          </Fragment>\n        )}\n        className={\n          column.contentTextAlign ? `text-${column.contentTextAlign}` : \"\"\n        }\n        cellRenderer={({ rowData }) => {\n          const isSelected = selectedItems\n            ? selectedItems.includes(\n                isString(rowData) ? rowData : rowData[idField]\n              )\n            : false;\n          return subRenderFunction(rowData, column, isSelected);\n        }}\n        width={column.width || commonRestWidth}\n        disableSort={disableSort}\n        defaultSortDirection={\"ASC\"}\n      />\n    );\n  });\n};\n\n// Function to render the action buttons\nconst elementActions = (\n  actions: ItemActions[],\n  valueToSend: any,\n  selected: boolean,\n  idField: string\n) => {\n  return actions.map((action: ItemActions, index: number) => {\n    if (action.type === \"view\") {\n      return null;\n    }\n\n    const vlSend =\n      typeof valueToSend === \"string\" ? valueToSend : valueToSend[idField];\n\n    let disabled = false;\n\n    if (action.disableButtonFunction) {\n      if (action.disableButtonFunction(vlSend)) {\n        disabled = true;\n      }\n    }\n\n    if (action.showLoaderFunction) {\n      if (action.showLoaderFunction(vlSend)) {\n        return (\n          <div className={\"progress-enabled\"}>\n            <Loader\n              style={{ width: 18, height: 18 }}\n              key={`actions-loader-${action.type}-${index.toString()}`}\n            />\n          </div>\n        );\n      }\n    }\n\n    return (\n      <TableActionButton\n        label={action.label}\n        type={action.type}\n        onClick={action.onClick}\n        to={action.to}\n        valueToSend={valueToSend}\n        selected={selected}\n        key={`actions-${action.type}-${index.toString()}`}\n        idField={idField}\n        sendOnlyId={!!action.sendOnlyId}\n        disabled={disabled}\n      />\n    );\n  });\n};\n\n// Function to calculate the options column width according elements inside\nconst calculateOptionsSize = (containerWidth: number, totalOptions: number) => {\n  const minContainerSize = 80;\n  const sizeOptions = totalOptions * 45 + 15;\n\n  if (sizeOptions < minContainerSize) {\n    return minContainerSize;\n  }\n\n  if (sizeOptions > containerWidth) {\n    return containerWidth;\n  }\n\n  return sizeOptions;\n};\n\n// Main function to render the Table Wrapper\nconst TableWrapper = ({\n  itemActions,\n  columns,\n  onSelect,\n  records,\n  isLoading,\n  loadingMessage = <Typography component=\"h3\">Loading...</Typography>,\n  entityName,\n  selectedItems,\n  idField,\n  classes,\n  radioSelection = false,\n  customEmptyMessage = \"\",\n  customPaperHeight = \"\",\n  noBackground = false,\n  columnsSelector = false,\n  textSelectable = false,\n  columnsShown = [],\n  onColumnChange = (column: string, state: boolean) => {},\n  infiniteScrollConfig,\n  sortConfig,\n  autoScrollToBottom = false,\n  disabled = false,\n  onSelectAll,\n  rowStyle,\n  parentClassName = \"\",\n  tooltip,\n}: TableWrapperProps) => {\n  const navigate = useNavigate();\n\n  const [columnSelectorOpen, setColumnSelectorOpen] = useState<boolean>(false);\n  const [anchorEl, setAnchorEl] = React.useState<any>(null);\n\n  const findView = itemActions\n    ? itemActions.find((el) => el.type === \"view\")\n    : null;\n\n  const clickAction = (rowItem: any) => {\n    if (findView) {\n      const valueClick = findView.sendOnlyId ? rowItem[idField] : rowItem;\n\n      let disabled = false;\n\n      if (findView.disableButtonFunction) {\n        if (findView.disableButtonFunction(valueClick)) {\n          disabled = true;\n        }\n      }\n\n      if (findView.to && !disabled) {\n        navigate(`${findView.to}/${valueClick}`);\n        return;\n      }\n\n      if (findView.onClick && !disabled) {\n        findView.onClick(valueClick);\n      }\n    }\n  };\n\n  const openColumnsSelector = (event: { currentTarget: any }) => {\n    setColumnSelectorOpen(!columnSelectorOpen);\n    setAnchorEl(event.currentTarget);\n  };\n\n  const closeColumnSelector = () => {\n    setColumnSelectorOpen(false);\n    setAnchorEl(null);\n  };\n\n  const columnsSelection = (columns: IColumns[]) => {\n    return (\n      <Fragment>\n        <IconButton\n          aria-describedby={\"columnsSelector\"}\n          color=\"primary\"\n          onClick={openColumnsSelector}\n          size=\"large\"\n        >\n          <ViewColumnIcon fontSize=\"inherit\" />\n        </IconButton>\n        <Popover\n          anchorEl={anchorEl}\n          id={\"columnsSelector\"}\n          open={columnSelectorOpen}\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"left\",\n          }}\n          transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"left\",\n          }}\n          onClose={closeColumnSelector}\n        >\n          <div className={classes.shownColumnsLabel}>Shown Columns</div>\n          <div className={classes.popoverContent}>\n            {columns.map((column: IColumns) => {\n              return (\n                <CheckboxWrapper\n                  key={`tableColumns-${column.label}`}\n                  label={column.label}\n                  checked={columnsShown.includes(column.elementKey!)}\n                  onChange={(e) => {\n                    onColumnChange(column.elementKey!, e.target.checked);\n                  }}\n                  id={`chbox-${column.label}`}\n                  name={`chbox-${column.label}`}\n                  value={column.label}\n                />\n              );\n            })}\n          </div>\n        </Popover>\n      </Fragment>\n    );\n  };\n\n  return (\n    <Grid item xs={12} className={parentClassName}>\n      <TooltipWrapper tooltip={tooltip ? tooltip : \"\"}>\n        <Paper\n          className={`${classes.paper} ${\n            noBackground ? classes.noBackground : \"\"\n          }\n        ${disabled ? classes.disabled : \"\"} \n        ${\n          customPaperHeight !== \"\"\n            ? customPaperHeight\n            : classes.defaultPaperHeight\n        }`}\n        >\n          {isLoading && (\n            <Grid container className={classes.loadingBox}>\n              <Grid item xs={12} style={{ textAlign: \"center\" }}>\n                {loadingMessage}\n              </Grid>\n              <Grid item xs={12}>\n                <LinearProgress />\n              </Grid>\n            </Grid>\n          )}\n          {columnsSelector && !isLoading && records.length > 0 && (\n            <div className={classes.overlayColumnSelection}>\n              {columnsSelection(columns)}\n            </div>\n          )}\n          {records && !isLoading && records.length > 0 ? (\n            // @ts-ignore\n            <InfiniteLoader\n              isRowLoaded={({ index }) => !!records[index]}\n              loadMoreRows={\n                infiniteScrollConfig\n                  ? infiniteScrollConfig.loadMoreRecords\n                  : () => new Promise(() => true)\n              }\n              rowCount={\n                infiniteScrollConfig\n                  ? infiniteScrollConfig.recordsCount\n                  : records.length\n              }\n            >\n              {({ onRowsRendered, registerChild }) => (\n                // @ts-ignore\n                <AutoSizer>\n                  {({ width, height }: any) => {\n                    const optionsWidth = calculateOptionsSize(\n                      width,\n                      itemActions\n                        ? itemActions.filter((el) => el.type !== \"view\").length\n                        : 0\n                    );\n                    const hasSelect: boolean = !!(onSelect && selectedItems);\n                    const hasOptions: boolean = !!(\n                      (itemActions && itemActions.length > 1) ||\n                      (itemActions &&\n                        itemActions.length === 1 &&\n                        itemActions[0].type !== \"view\")\n                    );\n                    return (\n                      // @ts-ignore\n                      <Table\n                        ref={registerChild}\n                        disableHeader={false}\n                        headerClassName={\"headerItem\"}\n                        headerHeight={40}\n                        height={height}\n                        noRowsRenderer={() => (\n                          <Fragment>\n                            {customEmptyMessage !== \"\"\n                              ? customEmptyMessage\n                              : `There are no ${entityName} yet.`}\n                          </Fragment>\n                        )}\n                        overscanRowCount={10}\n                        rowHeight={40}\n                        width={width}\n                        rowCount={records.length}\n                        rowGetter={({ index }) => records[index]}\n                        onRowClick={({ rowData }) => {\n                          clickAction(rowData);\n                        }}\n                        rowClassName={(r) =>\n                          `rowLine ${findView ? \"canClick\" : \"\"} ${\n                            !findView && textSelectable ? \"canSelectText\" : \"\"\n                          } ${rowStyle ? rowStyle(r) : \"\"}`\n                        }\n                        onRowsRendered={onRowsRendered}\n                        sort={sortConfig ? sortConfig.triggerSort : undefined}\n                        sortBy={sortConfig ? sortConfig.currentSort : undefined}\n                        sortDirection={\n                          sortConfig ? sortConfig.currentDirection : undefined\n                        }\n                        scrollToIndex={\n                          autoScrollToBottom ? records.length - 1 : -1\n                        }\n                        rowStyle={(r) => {\n                          if (rowStyle) {\n                            const returnElement = rowStyle(r);\n\n                            if (typeof returnElement === \"string\") {\n                              return get(\n                                TableRowPredefStyles,\n                                returnElement,\n                                {}\n                              );\n                            }\n\n                            return returnElement;\n                          }\n\n                          return {};\n                        }}\n                      >\n                        {hasSelect && (\n                          // @ts-ignore\n                          <Column\n                            headerRenderer={() => (\n                              <Fragment>\n                                {onSelectAll ? (\n                                  <div className={classes.checkAllWrapper}>\n                                    <CheckboxWrapper\n                                      label={\"\"}\n                                      onChange={onSelectAll}\n                                      value=\"all\"\n                                      id={\"selectAll\"}\n                                      name={\"selectAll\"}\n                                      checked={\n                                        selectedItems?.length === records.length\n                                      }\n                                    />\n                                  </div>\n                                ) : (\n                                  <Fragment>Select</Fragment>\n                                )}\n                              </Fragment>\n                            )}\n                            dataKey={`select-${idField}`}\n                            width={selectWidth}\n                            disableSort\n                            cellRenderer={({ rowData }) => {\n                              const isSelected = selectedItems\n                                ? selectedItems.includes(\n                                    isString(rowData)\n                                      ? rowData\n                                      : rowData[idField]\n                                  )\n                                : false;\n\n                              return (\n                                <Checkbox\n                                  value={\n                                    isString(rowData)\n                                      ? rowData\n                                      : rowData[idField]\n                                  }\n                                  color=\"primary\"\n                                  inputProps={{\n                                    \"aria-label\": \"secondary checkbox\",\n                                  }}\n                                  className=\"TableCheckbox\"\n                                  checked={isSelected}\n                                  onChange={onSelect}\n                                  onClick={(e) => {\n                                    e.stopPropagation();\n                                  }}\n                                  checkedIcon={\n                                    <span\n                                      className={\n                                        radioSelection\n                                          ? classes.radioSelectedIcon\n                                          : classes.checkedIcon\n                                      }\n                                    />\n                                  }\n                                  icon={\n                                    <span\n                                      className={\n                                        radioSelection\n                                          ? classes.radioUnselectedIcon\n                                          : classes.unCheckedIcon\n                                      }\n                                    />\n                                  }\n                                />\n                              );\n                            }}\n                          />\n                        )}\n                        {generateColumnsMap(\n                          columns,\n                          width,\n                          optionsWidth,\n                          hasSelect,\n                          hasOptions,\n                          selectedItems || [],\n                          idField,\n                          columnsSelector,\n                          columnsShown,\n                          sortConfig ? sortConfig.currentSort : \"\",\n                          sortConfig ? sortConfig.currentDirection : undefined\n                        )}\n                        {hasOptions && (\n                          // @ts-ignore\n                          <Column\n                            dataKey={idField}\n                            width={optionsWidth}\n                            headerClassName=\"optionsAlignment\"\n                            className=\"optionsAlignment\"\n                            cellRenderer={({ rowData }) => {\n                              const isSelected = selectedItems\n                                ? selectedItems.includes(\n                                    isString(rowData)\n                                      ? rowData\n                                      : rowData[idField]\n                                  )\n                                : false;\n                              return elementActions(\n                                itemActions || [],\n                                rowData,\n                                isSelected,\n                                idField\n                              );\n                            }}\n                          />\n                        )}\n                      </Table>\n                    );\n                  }}\n                </AutoSizer>\n              )}\n            </InfiniteLoader>\n          ) : (\n            <Fragment>\n              {!isLoading && (\n                <div id={\"empty-results\"}>\n                  {customEmptyMessage !== \"\"\n                    ? customEmptyMessage\n                    : `There are no ${entityName} yet.`}\n                </div>\n              )}\n            </Fragment>\n          )}\n        </Paper>\n      </TooltipWrapper>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(TableWrapper);\n"],"names":["withStyles","theme","createStyles","fieldBasic","tooltipHelper","checkboxIcons","fieldContainer","display","justifyContent","alignItems","margin","marginBottom","flexBasis","flexWrap","noTopMargin","marginTop","label","onChange","value","id","name","checked","disabled","tooltip","overrideLabelClasses","overrideCheckboxStyles","classes","className","item","xs","color","inputProps","checkedIcon","icon","unCheckedIcon","disableRipple","disableFocusRipple","focusRipple","centerRipple","disableTouchRipple","style","htmlFor","noMinWidthLabel","tooltipContainer","title","placement","unSelected","selected","active","xmlns","width","height","viewBox","fill","d","props","spacing","buttonDisabled","cursor","filter","opacity","type","onClick","valueToSend","idField","to","sendOnlyId","valueClick","DisableIcon","defineIcon","buttonElement","IconButton","size","e","stopPropagation","preventDefault","sx","Tooltip","isString","generateColumnsMap","columns","containerWidth","actionsWidth","hasSelect","hasActions","selectedItems","columnsSelector","columnsShown","sortColumn","sortDirection","commonRestWidth","colsItems","column","includes","elementKey","initialValue","reduce","total","currValue","el","length","calculateColumnRest","map","index","disableSort","enableSort","dataKey","headerClassName","headerTextAlign","headerRenderer","Fragment","ArrowDropUp","ArrowDropDown","contentTextAlign","cellRenderer","rowData","isSelected","itemElement","get","renderConst","renderFullObject","renderElement","renderFunction","subRenderFunction","defaultSortDirection","toString","paper","overflow","flexDirection","padding","boxShadow","border","borderRadius","minHeight","overflowY","position","noBackground","backgroundColor","defaultPaperHeight","loadingBox","paddingTop","paddingBottom","overlayColumnSelection","right","top","popoverContent","maxHeight","shownColumnsLabel","fontSize","borderBottom","checkAllWrapper","transitionDuration","outline","userSelect","fontWeight","fontStyle","borderColor","textTransform","textAlign","left","radioIcons","itemActions","onSelect","records","isLoading","loadingMessage","Typography","component","entityName","radioSelection","customEmptyMessage","customPaperHeight","textSelectable","onColumnChange","state","infiniteScrollConfig","sortConfig","autoScrollToBottom","onSelectAll","rowStyle","parentClassName","navigate","useNavigate","useState","columnSelectorOpen","setColumnSelectorOpen","React","anchorEl","setAnchorEl","findView","find","openColumnsSelector","event","currentTarget","closeColumnSelector","Grid","TooltipWrapper","Paper","container","LinearProgress","ViewColumn","Popover","open","anchorOrigin","vertical","horizontal","transformOrigin","onClose","CheckboxWrapper","target","columnsSelection","isRowLoaded","loadMoreRows","loadMoreRecords","Promise","rowCount","recordsCount","onRowsRendered","registerChild","optionsWidth","totalOptions","sizeOptions","calculateOptionsSize","hasOptions","ref","disableHeader","headerHeight","noRowsRenderer","overscanRowCount","rowHeight","rowGetter","onRowClick","rowItem","disableButtonFunction","clickAction","rowClassName","r","sort","triggerSort","undefined","sortBy","currentSort","currentDirection","scrollToIndex","returnElement","TableRowPredefStyles","Checkbox","radioSelectedIcon","radioUnselectedIcon","actions","action","vlSend","showLoaderFunction","elementActions"],"sourceRoot":""}