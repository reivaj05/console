{"version":3,"file":"static/js/8896.aa552ac4.chunk.js","mappings":"gPAoFA,UAlDoB,SAAH,GAII,IAHnBA,EAAc,EAAdA,eACAC,EAAU,EAAVA,WACAC,EAA0B,EAA1BA,2BAEMC,GAAWC,EAAAA,EAAAA,MAQjB,GAAyCC,EAAAA,EAAAA,IAPpB,WAAH,OAASH,GAA2B,EAAM,IACzC,SAACI,GAClBH,GAASI,EAAAA,EAAAA,IAAqBD,IAC9BJ,GAA2B,EAC7B,IAGyE,eAAlEM,EAAa,KAAEC,EAAe,KAErC,IAAKT,EACH,OAAO,KAET,IAMMU,EAAeV,EAAeW,KAAI,SAACC,GAAK,OAC5C,0BACE,uBAAIA,KADIA,EAEJ,IAGR,OACE,SAAC,IAAa,CACZC,MAAK,sBAAiBb,EAAec,OAAS,EAAI,IAAM,IACxDC,YAAa,SACbC,OAAQf,EACRgB,WAAW,SAAC,MAAiB,IAC7BC,UAAWV,EACXW,UAnBmB,WAAO,IACI,EADL,UACTnB,GAAc,IAAhC,2BAAkC,CAAC,IAA1BY,EAAK,QACZH,EAAgB,SAAS,iBAAD,QAAmBW,EAAAA,EAAAA,IAAgBR,IAC7D,CAAC,+BACH,EAgBIS,QA3BY,WAAH,OAASnB,GAA2B,EAAO,EA4BpDoB,qBACE,UAAC,IAAiB,WAAC,iDAC8BtB,EAAec,OAAQ,IAAI,QACpEd,EAAec,OAAS,EAAI,KAAO,IACxCJ,MAKX,C","sources":["screens/Console/Groups/DeleteGroup.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\n\nimport { DialogContentText } from \"@mui/material\";\n\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport ConfirmDialog from \"../Common/ModalWrapper/ConfirmDialog\";\nimport useApi from \"../Common/Hooks/useApi\";\nimport { ConfirmDeleteIcon } from \"mds\";\nimport { encodeURLString } from \"../../../common/utils\";\nimport { setErrorSnackMessage } from \"../../../systemSlice\";\nimport { useAppDispatch } from \"../../../store\";\n\ninterface IDeleteGroup {\n  selectedGroups: string[];\n  deleteOpen: boolean;\n  closeDeleteModalAndRefresh: any;\n}\n\nconst DeleteGroup = ({\n  selectedGroups,\n  deleteOpen,\n  closeDeleteModalAndRefresh,\n}: IDeleteGroup) => {\n  const dispatch = useAppDispatch();\n  const onDelSuccess = () => closeDeleteModalAndRefresh(true);\n  const onDelError = (err: ErrorResponseHandler) => {\n    dispatch(setErrorSnackMessage(err));\n    closeDeleteModalAndRefresh(false);\n  };\n  const onClose = () => closeDeleteModalAndRefresh(false);\n\n  const [deleteLoading, invokeDeleteApi] = useApi(onDelSuccess, onDelError);\n\n  if (!selectedGroups) {\n    return null;\n  }\n  const onDeleteGroups = () => {\n    for (let group of selectedGroups) {\n      invokeDeleteApi(\"DELETE\", `/api/v1/group/${encodeURLString(group)}`);\n    }\n  };\n\n  const renderGroups = selectedGroups.map((group) => (\n    <div key={group}>\n      <b>{group}</b>\n    </div>\n  ));\n\n  return (\n    <ConfirmDialog\n      title={`Delete Group${selectedGroups.length > 1 ? \"s\" : \"\"}`}\n      confirmText={\"Delete\"}\n      isOpen={deleteOpen}\n      titleIcon={<ConfirmDeleteIcon />}\n      isLoading={deleteLoading}\n      onConfirm={onDeleteGroups}\n      onClose={onClose}\n      confirmationContent={\n        <DialogContentText>\n          Are you sure you want to delete the following {selectedGroups.length}{\" \"}\n          group{selectedGroups.length > 1 ? \"s?\" : \"?\"}\n          {renderGroups}\n        </DialogContentText>\n      }\n    />\n  );\n};\n\nexport default DeleteGroup;\n"],"names":["selectedGroups","deleteOpen","closeDeleteModalAndRefresh","dispatch","useAppDispatch","useApi","err","setErrorSnackMessage","deleteLoading","invokeDeleteApi","renderGroups","map","group","title","length","confirmText","isOpen","titleIcon","isLoading","onConfirm","encodeURLString","onClose","confirmationContent"],"sourceRoot":""}