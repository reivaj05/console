{"version":3,"file":"static/js/3905.640266d7.chunk.js","mappings":"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","sources":["screens/Console/Common/FormComponents/CodeMirrorWrapper/CodeMirrorWrapper.tsx","screens/Console/Common/FormLayout.tsx","screens/Console/KMS/ImportKey.tsx","screens/Console/KMS/KMSHelpbox.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Box, InputLabel, Tooltip } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { HelpIcon } from \"mds\";\nimport { fieldBasic } from \"../common/styleLibrary\";\nimport { CopyIcon } from \"mds\";\nimport { Button } from \"mds\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport CodeEditor from \"@uiw/react-textarea-code-editor\";\nimport TooltipWrapper from \"../../TooltipWrapper/TooltipWrapper\";\n\ninterface ICodeWrapper {\n  value: string;\n  label?: string;\n  mode?: string;\n  tooltip?: string;\n  classes: any;\n  onChange?: (editor: any, data: any, value: string) => any;\n  onBeforeChange: (editor: any, data: any, value: string) => any;\n  readOnly?: boolean;\n  editorHeight?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n  });\n\nconst CodeMirrorWrapper = ({\n  value,\n  label = \"\",\n  tooltip = \"\",\n  mode = \"json\",\n  classes,\n  onBeforeChange,\n  readOnly = false,\n  editorHeight = \"250px\",\n}: ICodeWrapper) => {\n  return (\n    <React.Fragment>\n      <Grid item xs={12} sx={{ marginBottom: \"10px\" }}>\n        <InputLabel className={classes.inputLabel}>\n          <span>{label}</span>\n          {tooltip !== \"\" && (\n            <div className={classes.tooltipContainer}>\n              <Tooltip title={tooltip} placement=\"top-start\">\n                <div className={classes.tooltip}>\n                  <HelpIcon />\n                </div>\n              </Tooltip>\n            </div>\n          )}\n        </InputLabel>\n      </Grid>\n\n      <Grid\n        item\n        xs={12}\n        style={{\n          maxHeight: editorHeight,\n          overflow: \"auto\",\n          border: \"1px solid #eaeaea\",\n        }}\n      >\n        <CodeEditor\n          value={value}\n          language={mode}\n          onChange={(evn) => {\n            onBeforeChange(null, null, evn.target.value);\n          }}\n          id={\"code_wrapper\"}\n          padding={15}\n          style={{\n            fontSize: 12,\n            backgroundColor: \"#fefefe\",\n            fontFamily:\n              \"ui-monospace,SFMono-Regular,SF Mono,Consolas,Liberation Mono,Menlo,monospace\",\n            minHeight: editorHeight || \"initial\",\n            color: \"#000000\",\n          }}\n        />\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        sx={{\n          background: \"#f7f7f7\",\n          border: \"1px solid #eaeaea\",\n          borderTop: 0,\n        }}\n      >\n        <Box\n          sx={{\n            display: \"flex\",\n            alignItems: \"center\",\n            padding: \"2px\",\n            paddingRight: \"5px\",\n            justifyContent: \"flex-end\",\n            \"& button\": {\n              height: \"26px\",\n              width: \"26px\",\n              padding: \"2px\",\n              \" .min-icon\": {\n                marginLeft: \"0\",\n              },\n            },\n          }}\n        >\n          <TooltipWrapper tooltip={\"Copy to Clipboard\"}>\n            <CopyToClipboard text={value}>\n              <Button\n                type={\"button\"}\n                id={\"copy-code-mirror\"}\n                icon={<CopyIcon />}\n                color={\"primary\"}\n                variant={\"regular\"}\n              />\n            </CopyToClipboard>\n          </TooltipWrapper>\n        </Box>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(CodeMirrorWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Box } from \"@mui/material\";\nimport SectionTitle from \"./SectionTitle\";\n\ntype Props = {\n  title: string;\n  icon: React.ReactNode;\n  helpbox?: React.ReactNode;\n  children: React.ReactNode;\n};\n\nconst FormLayout: React.FC<Props> = ({ children, title, helpbox, icon }) => {\n  return (\n    <Box\n      sx={{\n        display: \"grid\",\n        padding: \"25px\",\n        gap: \"25px\",\n        gridTemplateColumns: {\n          md: \"2fr 1.2fr\",\n          xs: \"1fr\",\n        },\n        border: \"1px solid #eaeaea\",\n      }}\n    >\n      <Box>\n        <SectionTitle icon={icon}>{title}</SectionTitle>\n        <Box sx={{ height: 16 }} />\n        {children}\n      </Box>\n\n      {helpbox}\n    </Box>\n  );\n};\n\nexport default FormLayout;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useState } from \"react\";\nimport { Box } from \"@mui/material\";\n\nimport Grid from \"@mui/material/Grid\";\nimport { AddAccessRuleIcon, Button } from \"mds\";\nimport PageHeader from \"../Common/PageHeader/PageHeader\";\nimport PageLayout from \"../Common/Layout/PageLayout\";\nimport InputBoxWrapper from \"../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport BackLink from \"../../../common/BackLink\";\nimport { IAM_PAGES } from \"../../../common/SecureComponent/permissions\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport FormLayout from \"../Common/FormLayout\";\nimport { setErrorSnackMessage } from \"../../../systemSlice\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAppDispatch } from \"../../../store\";\nimport useApi from \"../Common/Hooks/useApi\";\nimport KMSHelpBox from \"./KMSHelpbox\";\nimport CodeMirrorWrapper from \"../Common/FormComponents/CodeMirrorWrapper/CodeMirrorWrapper\";\n\nexport const emptyContent = '{\\n    \"bytes\": \"\"\\n}';\n\nconst ImportKey = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const onSuccess = () => navigate(`${IAM_PAGES.KMS_KEYS}`);\n\n  const onError = (err: ErrorResponseHandler) =>\n    dispatch(setErrorSnackMessage(err));\n\n  const [loading, invokeApi] = useApi(onSuccess, onError);\n  const [keyName, setKeyName] = useState<string>(\"\");\n  const [keyContent, setKeyContent] = useState<string>(emptyContent);\n\n  const importRecord = (event: React.FormEvent) => {\n    event.preventDefault();\n    let data = JSON.parse(keyContent);\n    invokeApi(\"POST\", `/api/v1/kms/keys/${keyName}/import`, data);\n  };\n\n  const resetForm = () => {\n    setKeyName(\"\");\n    setKeyContent(\"\");\n  };\n\n  const validateKeyName = (keyName: string) => {\n    if (keyName.indexOf(\" \") !== -1) {\n      return \"Key name cannot contain spaces\";\n    } else return \"\";\n  };\n\n  const validSave = keyName.trim() !== \"\" && keyName.indexOf(\" \") === -1;\n\n  return (\n    <Fragment>\n      <Grid item xs={12}>\n        <PageHeader\n          label={<BackLink to={IAM_PAGES.KMS_KEYS} label={\"Keys\"} />}\n        />\n        <PageLayout>\n          <FormLayout\n            title={\"Import Key\"}\n            icon={<AddAccessRuleIcon />}\n            helpbox={\n              <KMSHelpBox\n                helpText={\"Encryption Key\"}\n                contents={[\n                  \"Import a cryptographic key in the Key Management Service server connected to MINIO.\",\n                ]}\n              />\n            }\n          >\n            <form\n              noValidate\n              autoComplete=\"off\"\n              onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n                importRecord(e);\n              }}\n            >\n              <Grid container item spacing={1}>\n                <Grid item xs={12}>\n                  <InputBoxWrapper\n                    id=\"key-name\"\n                    name=\"key-name\"\n                    label=\"Key Name\"\n                    autoFocus={true}\n                    value={keyName}\n                    error={validateKeyName(keyName)}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setKeyName(e.target.value);\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <CodeMirrorWrapper\n                    label={\"Set key Content\"}\n                    value={keyContent}\n                    onBeforeChange={(editor, data, value) => {\n                      setKeyContent(value);\n                    }}\n                    editorHeight={\"350px\"}\n                  />\n                </Grid>\n                <Grid item xs={12} textAlign={\"right\"}>\n                  <Box\n                    sx={{\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      justifyContent: \"flex-end\",\n                      marginTop: \"20px\",\n                      gap: \"15px\",\n                    }}\n                  >\n                    <Button\n                      id={\"clear\"}\n                      type=\"button\"\n                      variant=\"regular\"\n                      onClick={resetForm}\n                      label={\"Clear\"}\n                    />\n\n                    <Button\n                      id={\"import-key\"}\n                      type=\"submit\"\n                      variant=\"callAction\"\n                      color=\"primary\"\n                      disabled={loading || !validSave}\n                      label={\"Import\"}\n                    />\n                  </Box>\n                </Grid>\n              </Grid>\n            </form>\n          </FormLayout>\n        </PageLayout>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default ImportKey;\n","import React from \"react\";\n\nimport { Box } from \"@mui/material\";\nimport { HelpIconFilled } from \"mds\";\n\ninterface IKMSHelpBoxProps {\n  helpText: string;\n  contents: string[];\n}\n\nconst KMSHelpBox = ({ helpText, contents }: IKMSHelpBoxProps) => {\n  return (\n    <Box\n      sx={{\n        flex: 1,\n        border: \"1px solid #eaeaea\",\n        borderRadius: \"2px\",\n        display: \"flex\",\n        flexFlow: \"column\",\n        padding: \"20px\",\n      }}\n    >\n      <Box\n        sx={{\n          fontSize: \"16px\",\n          fontWeight: 600,\n          display: \"flex\",\n          alignItems: \"center\",\n          marginBottom: \"16px\",\n          paddingBottom: \"20px\",\n\n          \"& .min-icon\": {\n            height: \"21px\",\n            width: \"21px\",\n            marginRight: \"15px\",\n          },\n        }}\n      >\n        <HelpIconFilled />\n        <div>{helpText}</div>\n      </Box>\n      <Box sx={{ fontSize: \"14px\", marginBottom: \"15px\" }}>\n        {contents.map((content) => (\n          <Box sx={{ paddingBottom: \"20px\" }}>{content}</Box>\n        ))}\n      </Box>\n    </Box>\n  );\n};\n\nexport default KMSHelpBox;\n"],"names":["withStyles","theme","createStyles","fieldBasic","value","label","tooltip","mode","classes","onBeforeChange","readOnly","editorHeight","item","xs","sx","marginBottom","className","inputLabel","tooltipContainer","title","placement","style","maxHeight","overflow","border","language","onChange","evn","target","id","padding","fontSize","backgroundColor","fontFamily","minHeight","color","background","borderTop","display","alignItems","paddingRight","justifyContent","height","width","marginLeft","text","type","icon","variant","children","helpbox","gap","gridTemplateColumns","md","emptyContent","dispatch","useAppDispatch","navigate","useNavigate","useApi","IAM_PAGES","err","setErrorSnackMessage","loading","invokeApi","useState","keyName","setKeyName","keyContent","setKeyContent","validSave","trim","indexOf","Fragment","to","helpText","contents","noValidate","autoComplete","onSubmit","e","event","preventDefault","data","JSON","parse","importRecord","container","spacing","name","autoFocus","error","validateKeyName","editor","textAlign","marginTop","onClick","disabled","flex","borderRadius","flexFlow","fontWeight","paddingBottom","marginRight","map","content"],"sourceRoot":""}