{"version":3,"file":"static/js/1581.16dc83a0.chunk.js","mappings":"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","sources":["screens/Console/Buckets/BucketDetails/EnableQuota.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { LinearProgress } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport { Button } from \"mds\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  calculateBytes,\n  getBytes,\n  k8sScalarUnitsExcluding,\n} from \"../../../../common/utils\";\nimport { BucketQuota } from \"../types\";\n\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport {\n  formFieldStyles,\n  modalStyleUtils,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport FormSwitchWrapper from \"../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport api from \"../../../../common/api\";\nimport { BucketQuotaIcon } from \"mds\";\nimport InputUnitMenu from \"../../Common/FormComponents/InputUnitMenu/InputUnitMenu\";\n\nimport { setModalErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...formFieldStyles,\n    ...modalStyleUtils,\n  });\n\ninterface IEnableQuotaProps {\n  classes: any;\n  open: boolean;\n  enabled: boolean;\n  cfg: BucketQuota | null;\n  selectedBucket: string;\n  closeModalAndRefresh: () => void;\n}\n\nconst EnableQuota = ({\n  classes,\n  open,\n  enabled,\n  cfg,\n  selectedBucket,\n  closeModalAndRefresh,\n}: IEnableQuotaProps) => {\n  const dispatch = useAppDispatch();\n  const [loading, setLoading] = useState<boolean>(false);\n  const [quotaEnabled, setQuotaEnabled] = useState<boolean>(false);\n  const [quotaSize, setQuotaSize] = useState<string>(\"1\");\n  const [quotaUnit, setQuotaUnit] = useState<string>(\"Ti\");\n  const [validInput, setValidInput] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (enabled) {\n      setQuotaEnabled(true);\n      if (cfg) {\n        const unitCalc = calculateBytes(cfg.quota, true, false, true);\n\n        setQuotaSize(unitCalc.total.toString());\n        setQuotaUnit(unitCalc.unit);\n        setValidInput(true);\n      }\n    }\n  }, [enabled, cfg]);\n\n  useEffect(() => {\n    const valRegExp = /^\\d*(?:\\.\\d{1,2})?$/;\n\n    if (!quotaEnabled) {\n      setValidInput(true);\n      return;\n    }\n\n    setValidInput(valRegExp.test(quotaSize));\n  }, [quotaEnabled, quotaSize]);\n\n  const enableBucketEncryption = () => {\n    if (loading || !validInput) {\n      return;\n    }\n    let req = {\n      enabled: quotaEnabled,\n      amount: parseInt(getBytes(quotaSize, quotaUnit, true)),\n      quota_type: \"hard\",\n    };\n\n    api\n      .invoke(\"PUT\", `/api/v1/buckets/${selectedBucket}/quota`, req)\n      .then(() => {\n        setLoading(false);\n        closeModalAndRefresh();\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setLoading(false);\n        dispatch(setModalErrorSnackMessage(err));\n      });\n  };\n\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={() => {\n        closeModalAndRefresh();\n      }}\n      title=\"Enable Bucket Quota\"\n      titleIcon={<BucketQuotaIcon />}\n    >\n      <form\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n          e.preventDefault();\n          enableBucketEncryption();\n        }}\n      >\n        <Grid container>\n          <Grid item xs={12} className={classes.formScrollable}>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <FormSwitchWrapper\n                value=\"bucket_quota\"\n                id=\"bucket_quota\"\n                name=\"bucket_quota\"\n                checked={quotaEnabled}\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                  setQuotaEnabled(event.target.checked);\n                }}\n                label={\"Enabled\"}\n              />\n            </Grid>\n            {quotaEnabled && (\n              <React.Fragment>\n                <Grid item xs={12} className={classes.formFieldRow}>\n                  <Grid container>\n                    <Grid item xs={12}>\n                      <InputBoxWrapper\n                        id=\"quota_size\"\n                        name=\"quota_size\"\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          setQuotaSize(e.target.value);\n                          if (!e.target.validity.valid) {\n                            setValidInput(false);\n                          } else {\n                            setValidInput(true);\n                          }\n                        }}\n                        label=\"Quota\"\n                        value={quotaSize}\n                        required\n                        min=\"1\"\n                        overlayObject={\n                          <InputUnitMenu\n                            id={\"quota_unit\"}\n                            onUnitChange={(newValue) => {\n                              setQuotaUnit(newValue);\n                            }}\n                            unitSelected={quotaUnit}\n                            unitsList={k8sScalarUnitsExcluding([\"Ki\"])}\n                            disabled={false}\n                          />\n                        }\n                        error={!validInput ? \"Please enter a valid quota\" : \"\"}\n                      />\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </React.Fragment>\n            )}\n          </Grid>\n          <Grid item xs={12} className={classes.modalButtonBar}>\n            <Button\n              id={\"cancel\"}\n              type=\"button\"\n              variant=\"regular\"\n              disabled={loading}\n              onClick={() => {\n                closeModalAndRefresh();\n              }}\n              label={\"Cancel\"}\n            />\n\n            <Button\n              id={\"save\"}\n              type=\"submit\"\n              variant=\"callAction\"\n              disabled={loading || !validInput}\n              label={\"Save\"}\n            />\n          </Grid>\n          {loading && (\n            <Grid item xs={12}>\n              <LinearProgress />\n            </Grid>\n          )}\n        </Grid>\n      </form>\n    </ModalWrapper>\n  );\n};\n\nexport default withStyles(styles)(EnableQuota);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  deleteDialogStyles,\n  snackBarCommon,\n} from \"../FormComponents/common/styleLibrary\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport MainError from \"../MainError/MainError\";\nimport { setModalSnackMessage } from \"../../../../systemSlice\";\n\ninterface IModalProps {\n  classes: any;\n  onClose: () => void;\n  modalOpen: boolean;\n  title: string | React.ReactNode;\n  children: any;\n  wideLimit?: boolean;\n  noContentPadding?: boolean;\n  titleIcon?: React.ReactNode;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...deleteDialogStyles,\n    content: {\n      padding: 25,\n      paddingBottom: 0,\n    },\n    customDialogSize: {\n      width: \"100%\",\n      maxWidth: 765,\n    },\n    ...snackBarCommon,\n  });\n\nconst ModalWrapper = ({\n  onClose,\n  modalOpen,\n  title,\n  children,\n  classes,\n  wideLimit = true,\n  noContentPadding,\n  titleIcon = null,\n}: IModalProps) => {\n  const dispatch = useAppDispatch();\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  const modalSnackMessage = useSelector(\n    (state: AppState) => state.system.modalSnackBar\n  );\n\n  useEffect(() => {\n    dispatch(setModalSnackMessage(\"\"));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (modalSnackMessage) {\n      if (modalSnackMessage.message === \"\") {\n        setOpenSnackbar(false);\n        return;\n      }\n      // Open SnackBar\n      if (modalSnackMessage.type !== \"error\") {\n        setOpenSnackbar(true);\n      }\n    }\n  }, [modalSnackMessage]);\n\n  const closeSnackBar = () => {\n    setOpenSnackbar(false);\n    dispatch(setModalSnackMessage(\"\"));\n  };\n\n  const customSize = wideLimit\n    ? {\n        classes: {\n          paper: classes.customDialogSize,\n        },\n      }\n    : { maxWidth: \"lg\" as const, fullWidth: true };\n\n  let message = \"\";\n\n  if (modalSnackMessage) {\n    message = modalSnackMessage.detailedErrorMsg;\n    if (\n      modalSnackMessage.detailedErrorMsg === \"\" ||\n      modalSnackMessage.detailedErrorMsg.length < 5\n    ) {\n      message = modalSnackMessage.message;\n    }\n  }\n\n  return (\n    <Dialog\n      open={modalOpen}\n      classes={classes}\n      {...customSize}\n      scroll={\"paper\"}\n      onClose={(event, reason) => {\n        if (reason !== \"backdropClick\") {\n          onClose(); // close on Esc but not on click outside\n        }\n      }}\n      className={classes.root}\n    >\n      <DialogTitle className={classes.title}>\n        <div className={classes.titleText}>\n          {titleIcon} {title}\n        </div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            id={\"close\"}\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <MainError isModal={true} />\n      <Snackbar\n        open={openSnackbar}\n        className={classes.snackBarModal}\n        onClose={() => {\n          closeSnackBar();\n        }}\n        message={message}\n        ContentProps={{\n          className: `${classes.snackBar} ${\n            modalSnackMessage && modalSnackMessage.type === \"error\"\n              ? classes.errorSnackBar\n              : \"\"\n          }`,\n        }}\n        autoHideDuration={\n          modalSnackMessage && modalSnackMessage.type === \"error\" ? 10000 : 5000\n        }\n      />\n      <DialogContent className={noContentPadding ? \"\" : classes.content}>\n        {children}\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default withStyles(styles)(ModalWrapper);\n"],"names":["withStyles","theme","createStyles","formFieldStyles","modalStyleUtils","classes","open","enabled","cfg","selectedBucket","closeModalAndRefresh","dispatch","useAppDispatch","useState","loading","setLoading","quotaEnabled","setQuotaEnabled","quotaSize","setQuotaSize","quotaUnit","setQuotaUnit","validInput","setValidInput","useEffect","unitCalc","calculateBytes","quota","total","toString","unit","test","modalOpen","onClose","title","titleIcon","noValidate","autoComplete","onSubmit","e","preventDefault","req","amount","parseInt","getBytes","quota_type","api","then","catch","err","setModalErrorSnackMessage","enableBucketEncryption","container","item","xs","className","formScrollable","formFieldRow","value","id","name","checked","onChange","event","target","label","validity","valid","required","min","overlayObject","onUnitChange","newValue","unitSelected","unitsList","k8sScalarUnitsExcluding","disabled","error","modalButtonBar","type","variant","onClick","deleteDialogStyles","content","padding","paddingBottom","customDialogSize","width","maxWidth","snackBarCommon","children","wideLimit","noContentPadding","openSnackbar","setOpenSnackbar","modalSnackMessage","useSelector","state","system","modalSnackBar","setModalSnackMessage","message","customSize","paper","fullWidth","detailedErrorMsg","length","scroll","reason","root","titleText","closeContainer","closeButton","disableRipple","size","isModal","snackBarModal","ContentProps","snackBar","errorSnackBar","autoHideDuration"],"sourceRoot":""}