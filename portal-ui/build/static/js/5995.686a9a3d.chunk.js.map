{"version":3,"file":"static/js/5995.686a9a3d.chunk.js","mappings":"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","sources":["screens/Console/Common/ContentBox.tsx","screens/Console/Account/NotificationEndpointTypeSelectorHelpBox.tsx","screens/Console/NotificationEndpoints/NotificationTypeSelector.tsx","screens/Console/NotificationEndpoints/utils.ts"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Box } from \"@mui/material\";\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nconst ContentBox: React.FC<Props> = ({ children }) => {\n  return (\n    <Box\n      sx={{\n        border: \"1px solid #eaeaea\",\n        padding: {\n          lg: \"40px\",\n          xs: \"15px\",\n        },\n      }}\n    >\n      {children}\n    </Box>\n  );\n};\n\nexport default ContentBox;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport { Box } from \"@mui/material\";\nimport { HelpIconFilled, LambdaNotificationsIcon } from \"mds\";\n\nconst FeatureItem = ({\n  icon,\n  description,\n}: {\n  icon: any;\n  description: string;\n}) => {\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        \"& .min-icon\": {\n          marginRight: \"10px\",\n          height: \"23px\",\n          width: \"23px\",\n          marginBottom: \"10px\",\n        },\n      }}\n    >\n      {icon}{\" \"}\n      <div style={{ fontSize: \"14px\", fontStyle: \"italic\", color: \"#5E5E5E\" }}>\n        {description}\n      </div>\n    </Box>\n  );\n};\nconst NotificationEndpointTypeSelectorHelpBox = () => {\n  return (\n    <Box\n      sx={{\n        flex: 1,\n        border: \"1px solid #eaeaea\",\n        borderRadius: \"2px\",\n        display: \"flex\",\n        flexFlow: \"column\",\n        padding: \"20px\",\n        marginTop: {\n          xs: \"0px\",\n        },\n      }}\n    >\n      <Box\n        sx={{\n          fontSize: \"16px\",\n          fontWeight: 600,\n          display: \"flex\",\n          alignItems: \"center\",\n          marginBottom: \"16px\",\n          paddingBottom: \"20px\",\n\n          \"& .min-icon\": {\n            height: \"21px\",\n            width: \"21px\",\n            marginRight: \"15px\",\n          },\n        }}\n      >\n        <HelpIconFilled />\n        <div>Learn more about Notification Endpoints</div>\n      </Box>\n      <Box sx={{ fontSize: \"14px\", marginBottom: \"15px\" }}>\n        <Box sx={{ paddingBottom: \"20px\" }}>\n          <FeatureItem\n            icon={<LambdaNotificationsIcon />}\n            description={`What are Lambda Endpoint Notifications?`}\n          />\n          <Box sx={{ paddingTop: \"20px\" }}>\n            MinIO bucket notifications allow administrators to send\n            notifications to supported external services on certain object or\n            bucket events. MinIO supports bucket and object-level S3 events\n            similar to the Amazon S3 Event Notifications.\n          </Box>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default NotificationEndpointTypeSelectorHelpBox;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport { useNavigate } from \"react-router-dom\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { servicesList } from \"./utils\";\nimport {\n  settingsCommon,\n  typesSelection,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport PageHeader from \"../Common/PageHeader/PageHeader\";\nimport BackLink from \"../../../common/BackLink\";\nimport PageLayout from \"../Common/Layout/PageLayout\";\nimport { IAM_PAGES } from \"../../../common/SecureComponent/permissions\";\nimport ContentBox from \"../Common/ContentBox\";\nimport { Box } from \"@mui/material\";\nimport NotificationEndpointTypeSelectorHelpBox from \"../Account/NotificationEndpointTypeSelectorHelpBox\";\n\ninterface INotificationTypeSelector {\n  classes: any;\n}\n\nconst withLogos = servicesList.filter((elService) => elService.logo !== \"\");\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...settingsCommon,\n    ...typesSelection,\n  });\n\nconst NotificationTypeSelector = ({ classes }: INotificationTypeSelector) => {\n  const navigate = useNavigate();\n  return (\n    <Fragment>\n      <PageHeader\n        label={\n          <Fragment>\n            <BackLink\n              to={IAM_PAGES.NOTIFICATIONS_ENDPOINTS}\n              label=\"Notification Targets\"\n            />\n          </Fragment>\n        }\n        actions={<React.Fragment />}\n      />\n      <PageLayout>\n        <Box\n          sx={{\n            display: \"grid\",\n            padding: \"25px\",\n            gap: \"25px\",\n            gridTemplateColumns: {\n              md: \"2fr 1.2fr\",\n              xs: \"1fr\",\n            },\n            border: \"1px solid #eaeaea\",\n          }}\n        >\n          <ContentBox>\n            <div style={{ fontSize: 16, fontWeight: 600, paddingBottom: 15 }}>\n              Select Target Type\n            </div>\n            <div className={classes.iconContainer}>\n              {withLogos.map((item) => {\n                return (\n                  <button\n                    key={`icon-${item.targetTitle}`}\n                    className={classes.lambdaNotif}\n                    onClick={() => {\n                      navigate(\n                        `${IAM_PAGES.NOTIFICATIONS_ENDPOINTS_ADD}/${item.actionTrigger}`\n                      );\n                    }}\n                  >\n                    <div className={classes.lambdaNotifIcon}>\n                      <img\n                        src={item.logo}\n                        className={classes.logoButton}\n                        alt={item.targetTitle}\n                      />\n                    </div>\n\n                    <div className={classes.lambdaNotifTitle}>\n                      <b>{item.targetTitle}</b>\n                    </div>\n                  </button>\n                );\n              })}\n            </div>\n          </ContentBox>\n          <NotificationEndpointTypeSelectorHelpBox />\n        </Box>\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(NotificationTypeSelector);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { NotificationEndpointItem } from \"./types\";\n\nimport { IElementValue } from \"../Configurations/types\";\n\nexport const notifyPostgres = \"notify_postgres\";\nexport const notifyMysql = \"notify_mysql\";\nexport const notifyKafka = \"notify_kafka\";\nexport const notifyAmqp = \"notify_amqp\";\nexport const notifyMqtt = \"notify_mqtt\";\nexport const notifyRedis = \"notify_redis\";\nexport const notifyNats = \"notify_nats\";\nexport const notifyElasticsearch = \"notify_elasticsearch\";\nexport const notifyWebhooks = \"notify_webhook\";\nexport const notifyNsq = \"notify_nsq\";\n\nexport const notificationTransform = (\n  notificationElements: NotificationEndpointItem[]\n) => {\n  return notificationElements.map((element) => {\n    return {\n      service_name: `${element.service}:${element.account_id}`,\n      name: element.service,\n      account_id: element.account_id,\n      status: element.status,\n    };\n  });\n};\n\nexport const servicesList = [\n  {\n    actionTrigger: notifyPostgres,\n    targetTitle: \"PostgreSQL\",\n    logo: \"/postgres-logo.svg\",\n  },\n  {\n    actionTrigger: notifyKafka,\n    targetTitle: \"Kafka\",\n    logo: \"/kafka-logo.svg\",\n  },\n  {\n    actionTrigger: notifyAmqp,\n    targetTitle: \"AMQP\",\n    logo: \"/amqp-logo.svg\",\n  },\n  {\n    actionTrigger: notifyMqtt,\n    targetTitle: \"MQTT\",\n    logo: \"/mqtt-logo.svg\",\n  },\n  {\n    actionTrigger: notifyRedis,\n    targetTitle: \"Redis\",\n    logo: \"/redis-logo.svg\",\n  },\n  {\n    actionTrigger: notifyNats,\n    targetTitle: \"NATS\",\n    logo: \"/nats-logo.svg\",\n  },\n  {\n    actionTrigger: notifyMysql,\n    targetTitle: \"Mysql\",\n    logo: \"/mysql-logo.svg\",\n  },\n  {\n    actionTrigger: notifyElasticsearch,\n    targetTitle: \"Elastic Search\",\n    logo: \"/elasticsearch-logo.svg\",\n  },\n  {\n    actionTrigger: notifyWebhooks,\n    targetTitle: \"Webhook\",\n    logo: \"/webhooks-logo.svg\",\n  },\n  {\n    actionTrigger: notifyNsq,\n    targetTitle: \"NSQ\",\n    logo: \"/nsq-logo.svg\",\n  },\n];\n\nconst commonFields = [\n  {\n    name: \"queue_dir\",\n    label: \"Queue Directory\",\n    required: false,\n\n    tooltip: \"staging dir for undelivered messages e.g. '/home/events'\",\n    type: \"string\",\n    placeholder: \"Enter Queue Directory\",\n  },\n  {\n    name: \"queue_limit\",\n    label: \"Queue Limit\",\n    required: false,\n\n    tooltip: \"maximum limit for undelivered messages, defaults to '10000'\",\n    type: \"number\",\n    placeholder: \"Enter Queue Limit\",\n  },\n  {\n    name: \"comment\",\n    label: \"Comment\",\n    required: false,\n    type: \"comment\",\n    placeholder: \"Enter custom notes if any\",\n  },\n];\n\nexport const removeEmptyFields = (formFields: IElementValue[]) => {\n  const nonEmptyFields = formFields.filter((field) => field.value !== \"\");\n\n  return nonEmptyFields;\n};\n\nexport const notificationEndpointsFields: any = {\n  [notifyKafka]: [\n    {\n      name: \"brokers\",\n      label: \"Brokers\",\n      required: true,\n\n      tooltip: \"Comma separated list of Kafka broker addresses\",\n      type: \"string\",\n      placeholder: \"Enter Brokers\",\n    },\n    {\n      name: \"topic\",\n      label: \"Topic\",\n      tooltip: \"Kafka topic used for bucket notifications\",\n      type: \"string\",\n      placeholder: \"Enter Topic\",\n    },\n    {\n      name: \"sasl_username\",\n      label: \"SASL Username\",\n      tooltip: \"Username for SASL/PLAIN or SASL/SCRAM authentication\",\n      type: \"string\",\n      placeholder: \"Enter SASL Username\",\n    },\n    {\n      name: \"sasl_password\",\n      label: \"SASL Password\",\n      tooltip: \"Password for SASL/PLAIN or SASL/SCRAM authentication\",\n      type: \"string\",\n      placeholder: \"Enter SASL Password\",\n    },\n    {\n      name: \"sasl_mechanism\",\n      label: \"SASL Mechanism\",\n      tooltip: \"SASL authentication mechanism, default 'PLAIN'\",\n      type: \"string\",\n    },\n    {\n      name: \"tls_client_auth\",\n      label: \"TLS Client Auth\",\n      tooltip:\n        \"Client Auth determines the Kafka server's policy for TLS client auth\",\n      type: \"string\",\n      placeholder: \"Enter TLS Client Auth\",\n    },\n    {\n      name: \"sasl\",\n      label: \"SASL\",\n      tooltip: \"Set to 'on' to enable SASL authentication\",\n      type: \"on|off\",\n    },\n    {\n      name: \"tls\",\n      label: \"TLS\",\n      tooltip: \"Set to 'on' to enable TLS\",\n      type: \"on|off\",\n    },\n    {\n      name: \"tls_skip_verify\",\n      label: \"TLS skip verify\",\n      tooltip:\n        'Trust server TLS without verification, defaults to \"on\" (verify)',\n      type: \"on|off\",\n    },\n    {\n      name: \"client_tls_cert\",\n      label: \"client TLS cert\",\n      tooltip: \"Path to client certificate for mTLS auth\",\n      type: \"path\",\n      placeholder: \"Enter TLS Client Cert\",\n    },\n    {\n      name: \"client_tls_key\",\n      label: \"client TLS key\",\n      tooltip: \"Path to client key for mTLS auth\",\n      type: \"path\",\n      placeholder: \"Enter TLS Client Key\",\n    },\n    {\n      name: \"version\",\n      label: \"Version\",\n      tooltip: \"Specify the version of the Kafka cluster e.g '2.2.0'\",\n      type: \"string\",\n      placeholder: \"Enter Kafka Version\",\n    },\n    ...commonFields,\n  ],\n  [notifyAmqp]: [\n    {\n      name: \"url\",\n      required: true,\n      label: \"URL\",\n      tooltip:\n        \"AMQP server endpoint e.g. `amqp://myuser:mypassword@localhost:5672`\",\n      type: \"url\",\n    },\n    {\n      name: \"exchange\",\n      label: \"Exchange\",\n      tooltip: \"Name of the AMQP exchange\",\n      type: \"string\",\n      placeholder: \"Enter Exchange\",\n    },\n    {\n      name: \"exchange_type\",\n      label: \"Exchange Type\",\n      tooltip: \"AMQP exchange type\",\n      type: \"string\",\n      placeholder: \"Enter Exchange Type\",\n    },\n    {\n      name: \"routing_key\",\n      label: \"Routing Key\",\n      tooltip: \"Routing key for publishing\",\n      type: \"string\",\n      placeholder: \"Enter Routing Key\",\n    },\n    {\n      name: \"mandatory\",\n      label: \"Mandatory\",\n      tooltip:\n        \"Quietly ignore undelivered messages when set to 'off', default is 'on'\",\n      type: \"on|off\",\n    },\n    {\n      name: \"durable\",\n      label: \"Durable\",\n      tooltip:\n        \"Persist queue across broker restarts when set to 'on', default is 'off'\",\n      type: \"on|off\",\n    },\n    {\n      name: \"no_wait\",\n      label: \"No Wait\",\n      tooltip:\n        \"Non-blocking message delivery when set to 'on', default is 'off'\",\n      type: \"on|off\",\n    },\n    {\n      name: \"internal\",\n      label: \"Internal\",\n      tooltip:\n        \"Set to 'on' for exchange to be not used directly by publishers, but only when bound to other exchanges\",\n      type: \"on|off\",\n    },\n    {\n      name: \"auto_deleted\",\n      label: \"Auto Deleted\",\n      tooltip:\n        \"Auto delete queue when set to 'on', when there are no consumers\",\n      type: \"on|off\",\n    },\n    {\n      name: \"delivery_mode\",\n      label: \"Delivery Mode\",\n      tooltip: \"Set to '1' for non-persistent or '2' for persistent queue\",\n      type: \"number\",\n      placeholder: \"Enter Delivery Mode\",\n    },\n    ...commonFields,\n  ],\n  [notifyRedis]: [\n    {\n      name: \"address\",\n      required: true,\n      label: \"Address\",\n      tooltip: \"Redis server's address. For example: `localhost:6379`\",\n      type: \"address\",\n      placeholder: \"Enter Address\",\n    },\n    {\n      name: \"key\",\n      required: true,\n      label: \"Key\",\n      tooltip: \"Redis key to store/update events, key is auto-created\",\n      type: \"string\",\n      placeholder: \"Enter Key\",\n    },\n    {\n      name: \"password\",\n      label: \"Password\",\n      tooltip: \"Redis server password\",\n      type: \"string\",\n      placeholder: \"Enter Password\",\n    },\n    ...commonFields,\n  ],\n  [notifyMqtt]: [\n    {\n      name: \"broker\",\n      required: true,\n      label: \"Broker\",\n      tooltip: \"MQTT server endpoint e.g. `tcp://localhost:1883`\",\n      type: \"uri\",\n      placeholder: \"Enter Brokers\",\n    },\n    {\n      name: \"topic\",\n      required: true,\n      label: \"Topic\",\n      tooltip: \"name of the MQTT topic to publish\",\n      type: \"string\",\n      placeholder: \"Enter Topic\",\n    },\n    {\n      name: \"username\",\n      label: \"Username\",\n      tooltip: \"MQTT username\",\n      type: \"string\",\n      placeholder: \"Enter Username\",\n    },\n    {\n      name: \"password\",\n      label: \"Password\",\n      tooltip: \"MQTT password\",\n      type: \"string\",\n      placeholder: \"Enter Password\",\n    },\n    {\n      name: \"qos\",\n      label: \"QOS\",\n      tooltip: \"Set the quality of service priority, defaults to '0'\",\n      type: \"number\",\n      placeholder: \"Enter QOS\",\n    },\n    {\n      name: \"keep_alive_interval\",\n      label: \"Keep Alive Interval\",\n      tooltip: \"Keep-alive interval for MQTT connections in s,m,h,d\",\n      type: \"duration\",\n      placeholder: \"Enter Keep Alive Internal\",\n    },\n    {\n      name: \"reconnect_interval\",\n      label: \"Reconnect Interval\",\n      tooltip: \"Reconnect interval for MQTT connections in s,m,h,d\",\n      type: \"duration\",\n      placeholder: \"Enter Reconnect Interval\",\n    },\n    ...commonFields,\n  ],\n  [notifyNats]: [\n    {\n      name: \"address\",\n      required: true,\n      label: \"Address\",\n      tooltip: \"NATS server address e.g. '0.0.0.0:4222'\",\n      type: \"address\",\n      placeholder: \"Enter Address\",\n    },\n    {\n      name: \"subject\",\n      required: true,\n      label: \"Subject\",\n      tooltip: \"NATS subscription subject\",\n      type: \"string\",\n      placeholder: \"Enter NATS Subject\",\n    },\n    {\n      name: \"username\",\n      label: \"Username\",\n      tooltip: \"NATS username\",\n      type: \"string\",\n      placeholder: \"Enter NATS Username\",\n    },\n    {\n      name: \"password\",\n      label: \"Password\",\n      tooltip: \"NATS password\",\n      type: \"string\",\n      placeholder: \"Enter NATS password\",\n    },\n    {\n      name: \"token\",\n      label: \"Token\",\n      tooltip: \"NATS token\",\n      type: \"string\",\n      placeholder: \"Enter NATS token\",\n    },\n    {\n      name: \"tls\",\n      label: \"TLS\",\n      tooltip: \"Set to 'on' to enable TLS\",\n      type: \"on|off\",\n    },\n    {\n      name: \"tls_skip_verify\",\n      label: \"TLS Skip Verify\",\n      tooltip:\n        'Trust server TLS without verification, defaults to \"on\" (verify)',\n      type: \"on|off\",\n    },\n    {\n      name: \"ping_interval\",\n      label: \"Ping Interval\",\n      tooltip: \"Client ping commands interval in s,m,h,d. Disabled by default\",\n      type: \"duration\",\n      placeholder: \"Enter Ping Interval\",\n    },\n    {\n      name: \"streaming\",\n      label: \"Streaming\",\n      tooltip: \"Set to 'on', to use streaming NATS server\",\n      type: \"on|off\",\n    },\n    {\n      name: \"streaming_async\",\n      label: \"Streaming async\",\n      tooltip: \"Set to 'on', to enable asynchronous publish\",\n      type: \"on|off\",\n    },\n    {\n      name: \"streaming_max_pub_acks_in_flight\",\n      label: \"Streaming max publish ACKS in flight\",\n      tooltip: \"Number of messages to publish without waiting for ACKs\",\n      type: \"number\",\n      placeholder: \"Enter Streaming in flight value\",\n    },\n    {\n      name: \"streaming_cluster_id\",\n      label: \"Streaming Cluster ID\",\n      tooltip: \"Unique ID for NATS streaming cluster\",\n      type: \"string\",\n      placeholder: \"Enter Streaming Cluster ID\",\n    },\n    {\n      name: \"cert_authority\",\n      label: \"Cert Authority\",\n      tooltip: \"Path to certificate chain of the target NATS server\",\n      type: \"string\",\n      placeholder: \"Enter Cert Authority\",\n    },\n    {\n      name: \"client_cert\",\n      label: \"Client Cert\",\n      tooltip: \"Client cert for NATS mTLS auth\",\n      type: \"string\",\n      placeholder: \"Enter Client Cert\",\n    },\n    {\n      name: \"client_key\",\n      label: \"Client Key\",\n      tooltip: \"Client cert key for NATS mTLS auth\",\n      type: \"string\",\n      placeholder: \"Enter Client Key\",\n    },\n    ...commonFields,\n  ],\n  [notifyElasticsearch]: [\n    {\n      name: \"url\",\n      required: true,\n      label: \"URL\",\n      tooltip:\n        \"Elasticsearch server's address, with optional authentication info\",\n      type: \"url\",\n      placeholder: \"Enter URL\",\n    },\n    {\n      name: \"index\",\n      required: true,\n      label: \"Index\",\n      tooltip:\n        \"Elasticsearch index to store/update events, index is auto-created\",\n      type: \"string\",\n      placeholder: \"Enter Index\",\n    },\n    {\n      name: \"format\",\n      required: true,\n      label: \"Format\",\n      tooltip:\n        \"'namespace' reflects current bucket/object list and 'access' reflects a journal of object operations, defaults to 'namespace'\",\n      type: \"enum\",\n      placeholder: \"Enter Format\",\n    },\n    ...commonFields,\n  ],\n  [notifyWebhooks]: [\n    {\n      name: \"endpoint\",\n      required: true,\n      label: \"Endpoint\",\n      tooltip:\n        \"webhook server endpoint e.g. http://localhost:8080/minio/events\",\n      type: \"url\",\n      placeholder: \"Enter Endpoint\",\n    },\n    {\n      name: \"auth_token\",\n      label: \"Auth Token\",\n      tooltip: \"opaque string or JWT authorization token\",\n      type: \"string\",\n      placeholder: \"Enter auth_token\",\n    },\n    ...commonFields,\n  ],\n  [notifyNsq]: [\n    {\n      name: \"nsqd_address\",\n      required: true,\n      label: \"NSQD Address\",\n      tooltip: \"NSQ server address e.g. '127.0.0.1:4150'\",\n      type: \"address\",\n      placeholder: \"Enter nsqd_address\",\n    },\n    {\n      name: \"topic\",\n      required: true,\n      label: \"Topic\",\n      tooltip: \"NSQ topic\",\n      type: \"string\",\n      placeholder: \"Enter Topic\",\n    },\n    {\n      name: \"tls\",\n      label: \"TLS\",\n      tooltip: \"set to 'on' to enable TLS\",\n      type: \"on|off\",\n    },\n    {\n      name: \"tls_skip_verify\",\n      label: \"TLS Skip Verify\",\n      tooltip:\n        'trust server TLS without verification, defaults to \"on\" (verify)',\n      type: \"on|off\",\n    },\n    ...commonFields,\n  ],\n};\n\nconst serviceToConfigMap: Record<string, string> = {\n  webhook: \"notify_webhook\",\n  amqp: \"notify_amqp\",\n  kafka: \"notify_kafka\",\n  mqtt: \"notify_mqtt\",\n  nats: \"notify_nats\",\n  nsq: \"notify_nsq\",\n  mysql: \"notify_mysql\",\n  postgresql: \"notify_postgres\", //looks different in server response(postgresql as opposed to postgres) from restapi/admin_notification_endpoints.go\n  elasticsearch: \"notify_elasticsearch\",\n  redis: \"notify_redis\",\n};\n\nexport const getNotificationConfigKey = (serviceName: string) => {\n  return serviceToConfigMap[serviceName];\n};\n"],"names":["children","Box","sx","border","padding","lg","xs","FeatureItem","icon","description","display","marginRight","height","width","marginBottom","style","fontSize","fontStyle","color","flex","borderRadius","flexFlow","marginTop","fontWeight","alignItems","paddingBottom","paddingTop","withLogos","servicesList","elService","logo","withStyles","theme","createStyles","settingsCommon","typesSelection","classes","navigate","useNavigate","Fragment","PageHeader","label","BackLink","to","IAM_PAGES","actions","PageLayout","gap","gridTemplateColumns","md","className","iconContainer","map","item","lambdaNotif","onClick","actionTrigger","lambdaNotifIcon","src","logoButton","alt","targetTitle","lambdaNotifTitle","notifyPostgres","notifyMysql","notifyKafka","notifyAmqp","notifyMqtt","notifyRedis","notifyNats","notifyElasticsearch","notifyWebhooks","notifyNsq","notificationTransform","notificationElements","element","service_name","service","account_id","name","status","commonFields","required","tooltip","type","placeholder","removeEmptyFields","formFields","filter","field","value","notificationEndpointsFields","serviceToConfigMap","webhook","amqp","kafka","mqtt","nats","nsq","mysql","postgresql","elasticsearch","redis","getNotificationConfigKey","serviceName"],"sourceRoot":""}